- en: '**INTRODUCTION**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![Image](Images/common01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Welcome to *Practical Linux Forensics: A Guide for Digital Investigators*.
    This book covers a variety of methods and techniques for finding and analyzing
    digital evidence found on modern Linux systems. Among digital forensic investigators,
    the phrase *Linux forensics* may have one of two meanings. In one case, it refers
    to using Linux as a digital forensics platform to perform acquisition or analysis
    of any target system under investigation (which could be Windows, Mac, Linux,
    or any other operating system). In this book, however, Linux forensics refers
    to analyzing or examining a suspect Linux system as the target of an investigation
    (independent of the platform or tools used).'
  prefs: []
  type: TYPE_NORMAL
- en: I will focus on identifying common artifacts found on various Linux distributions
    (distros) and how to analyze them in the context of a forensic investigation.
    The forensic analysis methods described in this book are independent of the tools
    used and will benefit users of FTK, X-Ways, EnCase, or any other forensic analysis
    tool suite. The tools I use in the examples and illustrations tend to be Linux-based,
    but the concepts remain fully tool independent.
  prefs: []
  type: TYPE_NORMAL
- en: '**Why I Wrote This Book**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In some ways, this book is a logical continuation of my first book, *Practical
    Forensic Imaging* (No Starch Press, 2016). After performing a forensic acquisition
    of a system and securing a drive image, analysis is the next step performed in
    a typical digital forensic investigation. This book dives into the technical details
    of analyzing forensic images of Linux systems.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are many books on Windows and even Mac forensic analysis, but few books
    focus on the analysis of a Linux system as the target of an investigation. Even
    fewer focus specifically on postmortem (dead disk) analysis of modern Linux installations.
    I’ve been hearing digital forensic investigators in the community increasingly
    comment: “We are starting to get more Linux images in our lab, but we don’t know
    exactly what to look for.” Such comments are coming both from forensic labs in
    the private sector (corporations) and the public sector (law enforcement). This
    book is intended to provide a resource that addresses this growing area of interest.
    It will help forensic investigators find and extract digital evidence found on
    Linux systems, reconstruct past activity, draw logical conclusions, and write
    comprehensive forensic evidence reports of their analysis.'
  prefs: []
  type: TYPE_NORMAL
- en: Another reason for writing this book is out of personal interest and motivation
    to better understand the internals of modern Linux systems. Over the past decade,
    significant advancements in Linux distributions have changed how Linux forensic
    analysis is performed. I teach classes in both digital forensics and Linux at
    the Bern University of Applied Sciences in Switzerland, and writing this book
    has helped me stay current on those topics.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, I wrote this book because doing technical research and writing is fun
    and interesting. Writing is a learning process for me as an author, and I find
    myself constantly filling gaps in my knowledge that I didn’t realize existed.
  prefs: []
  type: TYPE_NORMAL
- en: '***How This Book Is Unique***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This book was written as a guide for digital forensic investigators using any
    forensic analysis platform or tool. There is no requirement to use Linux as a
    platform or to use Linux-based tools. The book is intended to be a useful resource
    even for people using commercial digital forensic analysis tools on Windows or
    Mac, as long as those tools support the analysis of Linux artifacts.
  prefs: []
  type: TYPE_NORMAL
- en: 'This book is Linux distribution agnostic. There is no favoritism toward any
    particular distro and the most popular Linux distributions are used across all
    the examples. The research, testing, and examples used in this book have been
    conducted primarily with four Linux distribution families and derivatives: Debian
    (including Ubuntu), Fedora (including Red Hat), SUSE, and Arch Linux. These four
    distributions are the basis for the vast majority of Linux systems in use today
    and are the core focus of this book. Whenever possible I try to describe concepts
    that are distro independent and consistent across most Linux distributions. However,
    many forensic artifacts are distribution specific and still need to be explained.
    Those are covered as well, but not as comprehensively.'
  prefs: []
  type: TYPE_NORMAL
- en: This book is also architecture independent. The concepts here should apply to
    Linux systems installed on any CPU architecture or hardware system. The examples
    provided tend to focus on the 64-bit x86 PC (Intel and AMD) platform, with additional
    references to ARM-based Raspberry Pi systems. I might mention certain hardware
    peculiarities if they affect the digital forensics process in some way.
  prefs: []
  type: TYPE_NORMAL
- en: Another aspect of this book is the discussion of Linux systems with a variety
    of uses and purposes. I cover methods for investigating both Linux server systems
    as well as Linux desktop systems. A wide range of scalability is assumed, and
    analysis techniques are applicable from tiny embedded Linux systems and Raspberry
    Pis, all the way up to large server clusters and Linux-based mainframes.
  prefs: []
  type: TYPE_NORMAL
- en: The assumption throughout this book is that we are performing a postmortem forensic
    analysis on a drive image, also known as *dead disk* forensics. Many books cover
    incident response and analysis of live Linux systems using commands while logged
    in to a running system. This book doesn’t cover live systems and assumes that
    a drive image has been acquired in a forensically sound manner or that a drive
    is safely attached to an examination machine with a forensic write blocker. That
    said, everything in this book will also be useful in the context of live system
    incident response.
  prefs: []
  type: TYPE_NORMAL
- en: This book avoids going into too much depth on fringe or rare topics. In some
    cases, obscure topics might be mentioned and references provided, but the focus
    remains on covering the most popular Linux distributions, hardware architectures,
    and system applications.
  prefs: []
  type: TYPE_NORMAL
- en: This book tries to remain non-political and non-religious about technology.
    In the community there are often strong opinions about which technology is better
    or worse, which licenses are good or bad, which tech companies are altruistic
    or evil, and so on. I make a deliberate effort to avoid praising or criticizing
    any particular technology or company and avoid providing my personal opinions
    unless they are relevant to digital forensics.
  prefs: []
  type: TYPE_NORMAL
- en: This combination of factors provides a book that is unique in the marketplace
    of digital forensics books, especially among those covering topics related to
    forensically analyzing Linux systems.
  prefs: []
  type: TYPE_NORMAL
- en: '***Linux Forensic Analysis Scenarios***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The motivation for performing forensic analysis on target systems is wide ranging.
    We can divide the forensic analysis of computer systems into two broad categories:
    *victims* and *perpetrators*.'
  prefs: []
  type: TYPE_NORMAL
- en: 'In the case of victims, the analysis typically involves cyberattacks, intrusions,
    and online social engineering incidents. These systems are owned by the victims
    and are usually provided to forensic investigators voluntarily. For example:'
  prefs: []
  type: TYPE_NORMAL
- en: Servers that have been hacked or compromised by technical exploitation of vulnerabilities
    or misconfiguration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unauthorized access to servers using stolen credentials
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Client desktops that have been compromised by malware, usually from users clicking
    malicious links or downloading malicious executables and scripts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Victims of social engineering who have been tricked into performing actions
    they wouldn’t otherwise do
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Users who are being coerced or blackmailed into performing actions they wouldn’t
    otherwise do
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Computer systems that need to be analyzed as part of a larger investigation
    in a victimized organization
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In all of these scenarios, digital traces can be found that help reconstruct
    past events or provide evidence of wrongdoing.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the case of perpetrators, analysis typically involves computer systems seized
    by authorities or corporate investigation and incident response teams. These systems
    may be owned, managed, or operated by a perpetrator suspected of malicious or
    criminal activity. Some examples include:'
  prefs: []
  type: TYPE_NORMAL
- en: Servers set up to host phishing sites or distribute malware
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Command-and-control servers used to manage botnets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Users who have abused their access to commit malicious activity or violate organizational
    policy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Desktop systems used to conduct illegal activity such as possessing or distributing
    illicit material, criminal hacking, or operating illegal underground forums (carding,
    child exploitation, and so on)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Computer systems that need to be analyzed as part of a larger criminal investigation
    (organized crime, drugs, terrorism, and so on)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Computer systems that need to be analyzed as part of a larger civil investigation
    (litigation or e-discovery, for example)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In all of these scenarios, digital traces can be found that help reconstruct
    past events or provide evidence of wrongdoing.
  prefs: []
  type: TYPE_NORMAL
- en: When Linux systems are lawfully seized by authorities, seized by organizations
    who own the systems, or voluntarily provided by victims, they can be forensically
    imaged and then analyzed by digital forensic investigators. Linux is already a
    common platform for server systems as well as Internet of Things (IoT) and other
    embedded devices, and the use of Linux on the desktop is growing. As Linux usage
    increases, the number of both victim and perpetrator systems needing forensic
    analysis will increase.
  prefs: []
  type: TYPE_NORMAL
- en: In some cases, especially where people have been falsely accused or are innocent
    and under suspicion, forensic analysis activity may also provide evidence of innocence.
  prefs: []
  type: TYPE_NORMAL
- en: '**Target Audience and Prerequisites**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: I wrote this book with a specific audience in mind. It is primarily aimed at
    digital forensics practitioners who are experienced at performing Windows, Mac,
    and mobile forensics and want more knowledge in the area of Linux. Forensic examiners
    need to know basic Linux concepts, where to find forensic artifacts, and how to
    interpret evidence collected. This does not mean examiners must know how to use
    Linux (though it can help); they need to know only what to look for and how to
    draw conclusions from the evidence found.
  prefs: []
  type: TYPE_NORMAL
- en: '***Who Should Read This Book?***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This book will directly benefit people working in private- and public-sector
    digital forensics labs who are responsible for conducting forensic examinations
    of computer systems, including Linux. The book specifically targets the growing
    number of forensic practitioners from incident response teams; computer forensic
    investigators within large organizations; forensic and e-discovery technicians
    from legal, audit, and consulting firms; and traditional forensic practitioners
    from law enforcement agencies. Although this book is intended primarily for experienced
    digital forensic investigators wanting to advance their Linux knowledge, it will
    benefit other groups of people, as well.
  prefs: []
  type: TYPE_NORMAL
- en: Experienced Unix and Linux administrators who want to learn digital forensic
    analysis and investigative techniques will also benefit from this book. This could
    be system administrators wanting to transition into the field of digital forensics
    or to leverage digital forensic methods to improve their troubleshooting skills.
  prefs: []
  type: TYPE_NORMAL
- en: Security professionals will also find this book useful. Information security
    risks associated with a default Linux installation may need to be assessed, resulting
    in security-driven changes. This may include reducing the amount of information
    stored on a system for confidentiality reasons. Conversely, forensic readiness
    requirements may result in increasing the amount of information logged or saved
    on a system.
  prefs: []
  type: TYPE_NORMAL
- en: Privacy advocates may find this book helpful as it highlights the amount and
    location of personal and private information stored on a default Linux system.
    People can use this book to reduce their exposure and increase the privacy of
    their systems (possibly resulting in the loss of functionality or convenience).
  prefs: []
  type: TYPE_NORMAL
- en: Linux application and distro developers may find this book useful as well. Potential
    privacy and security issues in the default configurations are shown, which may
    help developers create safer and more secure default settings that protect users.
  prefs: []
  type: TYPE_NORMAL
- en: An unfortunate side effect of every digital forensics book is that criminals
    are also interested in what the forensics community is doing. Malicious actors
    look for new ways to exploit systems and subvert security, including forensic
    analysis techniques. Throughout the book, I mention the topic of anti-forensics
    when relevant. Forensic examiners should be aware of potential anti-forensic techniques
    used to manipulate or destroy evidence.
  prefs: []
  type: TYPE_NORMAL
- en: '***Prerequisite Knowledge***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The prerequisite knowledge needed to get the most benefit from this book can
    be described in one of two ways:'
  prefs: []
  type: TYPE_NORMAL
- en: People with digital forensics knowledge, but limited knowledge of Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: People with Linux knowledge, but limited knowledge of digital forensics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: People with experience performing digital forensic analysis of Windows or Mac
    systems will learn to translate those same skills to Linux systems. Familiarity
    with digital forensic analysis will make it easier to learn new areas of Linux.
  prefs: []
  type: TYPE_NORMAL
- en: People with experience working with Linux systems, especially troubleshooting
    and debugging, will learn how to apply those skills to digital forensic analysis.
    Familiarity with Linux will make it easier to learn new digital forensics concepts.
  prefs: []
  type: TYPE_NORMAL
- en: Regardless of whether your background is forensics or Linux, there is an expectation
    that you understand basic operating system concepts. This includes a basic understanding
    of booting, system initialization, logging, processes, storage, software installation,
    and so on. Having some expertise with any operating system should be enough to
    understand the general principles that apply to all operating systems, including
    Linux.
  prefs: []
  type: TYPE_NORMAL
- en: '***Forensic Tools and Platforms Needed***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: To perform the analysis techniques described here, any full-featured digital
    forensic toolkit can be used. Common commercial tools in the industry include
    EnCase, FTK, X-Ways, and others. These can all be used to perform Linux analysis
    work.
  prefs: []
  type: TYPE_NORMAL
- en: Having a Linux-based analysis system available is not required, but may be easier
    in some cases. Most of the examples shown in the book are demonstrated using Linux
    tools on a Linux system.
  prefs: []
  type: TYPE_NORMAL
- en: The book doesn’t cover how to find, download, compile, or install various tools
    or Linux distributions. If you have a reasonably new machine (a year before this
    book’s publication date) with a recent distribution of Linux, the examples should
    work without any issues. Some of the tools used are not part of standard (default)
    Linux distributions, but can easily be found via internet search engines or on
    GitHub, GitLab, or other online platforms. In most cases, I’ll provide references
    to online sources.
  prefs: []
  type: TYPE_NORMAL
- en: '**Scope and Organization**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This section describes the scope of the book, how the book is organized, and
    the structure of the individual sections.
  prefs: []
  type: TYPE_NORMAL
- en: '***Content Scope***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This is a book on postmortem digital forensic analysis, which means the drive
    images containing digital evidence have already been secured in a forensically
    sound manner (by using write blockers, for example) and are ready for examination.
    The examination process includes identifying various aspects of the drive contents,
    searching for specific content, extracting evidence traces, interpreting information,
    reconstructing past events, and gaining a full understanding of the contents of
    the drive. This analysis activity will allow investigators to draw conclusions
    and create forensic reports about a particular case or incident.
  prefs: []
  type: TYPE_NORMAL
- en: 'The broader scope of the book is the “modern” aspect of Linux. In my *Modern
    Linux* class, students often ask what *Modern* means in this context. I didn’t
    want my course to be based on converted Unix material, but rather wanted to focus
    on aspects unique to Linux. Linux has Unix foundations, but has also drifted away
    from Unix in significant ways. The most fundamental (and controversial) example
    of this is systemd, which is used in most Linux distributions today and is covered
    extensively in this book. Other topics included under my modern Linux definition
    include: UEFI booting, new kernel features like cgroups and namespaces, D-Bus
    communication, Wayland and the standards at *[freedesktop.org](http://freedesktop.org)*,
    newer filesystems like btrfs, new encryption protocols like WireGuard, rolling-release
    models, universal software packaging, and other new topics associated with the
    latest Linux distributions.'
  prefs: []
  type: TYPE_NORMAL
- en: Some topics are too large, too diverse, or too obscure for inclusion in this
    book. In such cases, I’ll describe the topic at a high level and provide pointers
    on where to find more information. One example is the analysis of Linux backups.
    So many different backup solutions exist that writing about all of them could
    easily take up a significant portion of the book. Another example is Android forensics.
    Even though Android is based on Linux, it is such a large topic that it could
    easily fill a book on its own (and indeed many Android forensics books are on
    the market today). There are many highly customized Linux distributions designed
    for embedded systems and specialized hardware (robotics, automotive, medical,
    and so on). These custom and specialty systems may be mentioned here, but detailed
    coverage is outside the book’s scope.
  prefs: []
  type: TYPE_NORMAL
- en: Writing a book about free and open source software (FOSS) is challenging because
    everything is constantly changing at a rapid pace. By the time this book reaches
    the market, there will very likely be new topics that are not included here, or
    it’s possible that topics I’ve written about are no longer relevant. The biggest
    changes tend to be Linux distribution specific, so wherever possible I focus on
    distribution-independent topics. Overall, I cover stable topics that are not expected
    to change significantly in the coming years.
  prefs: []
  type: TYPE_NORMAL
- en: The content in this book is not exhaustive, and there are certainly forensic
    artifacts missing. The FOSS community is all about choice, and choice means far
    too many different possibilities to include in a single book. Out of practical
    necessity, this book focuses on the most popular technologies and Linux distros.
    Less popular, obscure, or fringe technologies are left out of the scope. However,
    the forensic analysis principles shown here can usually be applied to those technologies
    that are not covered.
  prefs: []
  type: TYPE_NORMAL
- en: The goal here is not to teach people how to use Linux. It is to teach people
    what to look for in terms of digital forensic artifacts. You don’t need to be
    a Linux expert for this book to be useful.
  prefs: []
  type: TYPE_NORMAL
- en: '***Book Organization and Structure***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: I spent a lot of time thinking about how to organize this book. It needed to
    be comprehensive and approachable for people unfamiliar to the topic. It also
    needed to be obvious from the table of contents that this is a forensics book
    before it is a Linux book. Thus, the structure shouldn’t look like a general Linux
    book.
  prefs: []
  type: TYPE_NORMAL
- en: The most obvious way to organize this book is by grouping chapters and sections
    by Linux technology (boot process, storage, networking, and so on). Each section
    dives deeper into the different Linux subsystems, resulting in a structure looking
    similar to most Linux technical books. This structure is useful for people who
    already have some Linux knowledge and know exactly what they are looking for in
    terms of forensic artifacts.
  prefs: []
  type: TYPE_NORMAL
- en: Another way to organize the book is chronologically according to a typical forensic
    examination. Here each step of a typical forensic analysis is covered in detail,
    but with a focus on Linux. The structure would look similar to most computer forensics
    books that focus on Microsoft Windows analysis (probably the majority of computer
    forensics work today). This was partly what I wanted, but it’s still very focused
    on the user’s desktop. I wanted the book to be useful for analyzing the various
    Linux distros, desktop systems, server systems, and embedded Linux systems.
  prefs: []
  type: TYPE_NORMAL
- en: The most comprehensive and systematic way to organize this book would be to
    focus on the filesystem layout and describe each directory of the filesystem tree
    with the relevant forensic artifacts. This bottom-up approach would exhaustively
    cover every part of the operating system’s storage, which is fitting for a postmortem
    analysis book. However, such a structure would resemble a dictionary rather than
    a book intended to teach and explain concepts.
  prefs: []
  type: TYPE_NORMAL
- en: I opted for a combination of all three approaches. The chapters and sections
    are organized by Linux technology, grouped at a high level. The subsections are
    organized by digital forensic analysis tasks and goals. I tried to cover all the
    relevant areas of the Linux filesystem in the forensics subsections. The appendix
    also contains a listing of the files covered in the book with a brief comment
    on their forensic relevance.
  prefs: []
  type: TYPE_NORMAL
- en: The book is divided into chapters covering broad topic areas of a Linux system.
    Those chapters are divided into sections that cover the major components of each
    topic area. The sections are further divided into subsections that go into the
    individual details of particular forensic analysis techniques. Most subsections
    follow a common format that is presented in a series of paragraphs. The first
    paragraph provides an introduction or overview of the technical topic under examination,
    sometimes with historical context. The second paragraph explains what information
    can be extracted and why this is useful in the context of forensic investigations.
    Subsequent paragraphs show examples and explain how to analyze this information
    and extract it as digital evidence. A final paragraph may be included to mention
    any caveats, gotchas, additional tips, and concerns related to evidence integrity
    and reliability.
  prefs: []
  type: TYPE_NORMAL
- en: The book starts with a general overview of digital forensics where I cover the
    history and evolution of the topic, and mention significant events that have shaped
    the field. I give special emphasis to the standards needed to produce digital
    evidence that can be used in a court of law. The overall book strives to be international
    and independent of regional jurisdictions because more and more criminal investigations
    span country borders and involve multiple jurisdictions. The book also provides
    an introduction to modern Linux systems, including the history, culture, and all
    the components that make up a “modern” Linux system today. After providing this
    dual foundation, the rest of the book focuses on the forensic analysis of Linux
    systems.
  prefs: []
  type: TYPE_NORMAL
- en: Throughout this book, I try to demonstrate how Locard’s exchange principle can
    be applied to the analysis of Linux systems. Edmond Locard was a French criminal
    investigator who postulated that when committing a crime, both the criminal and
    the scene of the crime would exchange evidence. This principle can also be applied
    to digital crime scenes, electronic devices, and online connectivity.
  prefs: []
  type: TYPE_NORMAL
- en: Digital forensics books often have a separate chapter dedicated to the topic
    of encryption. However, encryption today is pervasive and part of every computing
    subsystem. In this book, the encryption topic will be integrated into every relevant
    section rather than being discussed in a separate chapter. However, the filesystems
    chapter does have a dedicated section on storage encryption.
  prefs: []
  type: TYPE_NORMAL
- en: Rather than a chronological list of steps, this book is intended to be more
    of a cookbook of tasks grouped by technological area. The book is also designed
    as a reference, so you don’t need to read it from beginning to end (except for
    the first two overview chapters). Certain sections assume some knowledge and understanding
    of prior sections, but helpful and appropriate references are noted.
  prefs: []
  type: TYPE_NORMAL
- en: I begin the sections in each chapter with a brief introduction to the technology
    behind the topic, followed by questions and comments from a digital forensics
    perspective. I describe potential evidence investigators might find, together
    with pointers to the location of that evidence. I show examples of extracting
    and analyzing the evidence, and give tips for interpreting that evidence. I also
    comment on the challenges, risks, caveats, and other potential pitfalls, and I
    provide words of caution and advice based on my experience as a forensic investigator.
  prefs: []
  type: TYPE_NORMAL
- en: '***Overview of Chapters***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This section provides a brief summary of each chapter of the book.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 1: Digital Forensics Overview](ch01.xhtml)** This chapter introduces
    the reader to digital forensics. The history of digital forensics is described
    together with some expectations for the coming decade(s). The current trends and
    challenges are discussed with a focus on digital forensic analysis. The basic
    principles and industry best practices for computer forensic analysis are covered.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 2: Linux Overview](ch02.xhtml)** A technical overview of modern
    Linux systems, this chapter describes the history and influence of Unix, the development
    of Linux distributions, and the evolution of the Linux desktop. It also describes
    the major Linux distribution families and the components that make up a modern
    Linux system. The chapter closes with a section on forensic analysis, which, combined
    with [Chapter 1](ch01.xhtml), forms the foundation of the book.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 3: Evidence from Storage Devices and Filesystems](ch03.xhtml)**
    The initial analysis of a drive, starting with the partition table, volume management,
    and RAID systems, is covered here. Forensic artifacts of the three most common
    Linux filesystems (ext4, xfs, and btrfs) are discussed, and the Linux swap system
    is described from a forensics perspective, including the analysis of hibernation
    partitions. Various forms of filesystem encryption are covered as well.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 4: Directory Layout and Forensic Analysis of Linux Files](ch04.xhtml)**
    The hierarchy of installed files and directories in a typical Linux system is
    described here. This chapter also discusses the use of forensic hashsets to filter
    out or identify files. The analysis of different file types found under Linux
    is explained, including POSIX file types, application file types, and Linux executables.
    Analysis of both file metadata and content are addressed. The chapter ends with
    coverage of crash data and memory core dumps.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 5: Investigating Evidence from Linux Logs](ch05.xhtml)** This chapter
    is devoted to understanding logfiles and where to look for logged evidence traces.
    It also covers the various systems of logging on a Linux system, including traditional
    syslog, the systemd journal, and logs produced by daemons or applications. The
    kernel ring buffer is explained together with the Linux audit system.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 6: Reconstructing System Boot and Initialization](ch06.xhtml)**
    The life cycle of a typical system goes from startup to normal operation to shutdown.
    Here we look at analysis of the bootloader, followed by the initialization of
    the kernel and the associated initial RAM disk. Analysis of the systemd (init)
    startup process is described in detail together with other operational aspects
    of the system. Analysis of on-demand service activation by systemd and D-Bus is
    explained, as well. The chapter closes with physical environment and power topics,
    sleep, hibernation and shutdown, and finding evidence of human physical proximity
    to a system.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 7: Examination of Installed Software Packages](ch07.xhtml)** This
    chapter is the only one with separate sections for different Linux distributions.
    It describes the installation process, the analysis of installed software packages,
    package formats, and software package bundles. The chapter also covers the identification
    of Linux distributions, versions, releases, and patch levels.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 8: Identifying Network Configuration Artifacts](ch08.xhtml)** Linux’s
    networking subsystems include the interface hardware, DNS resolution, and network
    managers. A section on wireless networking covers Wi-Fi, WWAN, and Bluetooth artifacts
    that may contain historical information. Network security is also covered in this
    chapter, including the new WireGuard VPN system that’s growing in popularity,
    the new nftables firewall that is replacing iptables, and identifying proxy settings.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 9: Forensic Analysis of Time and Location](ch09.xhtml)** This chapter
    describes the analysis of international and regional aspects of Linux systems.
    It covers Linux time formats, time zones, and other timestamp information needed
    to perform a forensic timeline reconstruction. Language and keyboard layout analysis
    is explained. Linux geolocation services are also described for reconstructing
    the physical location of systems—in particular, roaming systems like laptops.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 10: Reconstructing User Desktops and Login Activity](ch10.xhtml)**
    User logins, the shell, and the Linux desktop are the focus of this chapter. It
    explains Linux windowing systems, such as X11 and Wayland, and desktop environments
    like GNOME, KDE, and others. It also covers human user activity and common desktop
    artifacts (that are well known when examining Windows or Mac machines). Artifacts
    like thumbnails, trash cans or recycle bins, bookmarks, recent documents, password
    wallets, and desktop searches are explained. The chapter closes with a look at
    user network activity, such as remote logins, remote desktop, network shared drives,
    and cloud accounts.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 11: Forensic Traces of Attached Peripheral Devices](ch11.xhtml)**
    This chapter covers the traces of USB, Thunderbolt, and PCI attached peripheral
    devices. It explains how to interpret evidence found in the logs to determine
    when and what devices have been attached. Forensic analysis of the Linux printing
    system and SANE scanning is described with a focus on recovering historic artifacts.
    This chapter also describes the Video4Linux system needed for video conferencing
    systems. The chapter closes with an examination of attached storage devices.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Afterword](after.xhtml)** Here, I present some final thoughts for Linux
    digital forensic investigators. I leave the audience with some tips, a bit of
    advice, and encouragement based on my personal experience as a digital forensic
    investigator.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Appendix: File/Directory List for Digital Investigators](app01.xhtml)**
    This resource provides a table of the files and directories covered throughout
    the book. It is intended as a reference to allow investigators to quickly look
    up a particular file or directory and find a short description with the digital
    forensic relevance. This is a living appendix, and an updated version is available
    on my website: *[https://digitalforensics.ch/linux/](https://digitalforensics.ch/linux/)*.
    Many thanks to No Starch Press for allowing me to maintain an independent version
    of this appendix.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Conventions and Format**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The internet provides vast amounts of resources in the form of blogs, videos,
    and websites. The quality, accuracy, and completeness of those resources can be
    good, but they can also be poor or even outright false. Where possible, I’ll refer
    readers to authoritative sources of information outside the book. When performing
    digital forensic investigations, having accurate information is critical. Authoritative
    sources typically include the original developers of software (documentation,
    source code, support forums), standards bodies (such as RFCs and *[freedesktop.org](http://freedesktop.org)*),
    peer-reviewed scientific research (such as *DFRWS* and Forensic Science International’s
    *Digital Investigation* journal), and professional technical books (like many
    No Starch Press titles).
  prefs: []
  type: TYPE_NORMAL
- en: 'I’ll often refer to the standard Linux documentation, or manual pages, that
    come with most Linux software packages. These are also known as *man pages*, and
    together with a section number appear as follows: systemd(1). The Linux shell
    command to view this man page with the section number is `man 1 systemd`.'
  prefs: []
  type: TYPE_NORMAL
- en: Certain styles and conventions are used throughout this book. Each chapter covers
    a different aspect of Linux forensic analysis. Each section within a chapter typically
    provides a set of command line tasks with corresponding output and explanations.
    Subsections may provide different variations of a task or further features of
    a particular tool used. However, these are only examples for illustration. The
    focus is not on how to use Linux tools, and any forensic analysis tools should
    be able to replicate the results.
  prefs: []
  type: TYPE_NORMAL
- en: Examples of code, commands, and command output are displayed in a monospace
    or fixed-width font, similar to what you see on a computer terminal screen. The
    ellipsis symbol (`...`) is used to snip out portions of command output that are
    not directly relevant to the message conveyed in the example, which helps to simplify
    examples and improve clarity. File and directory names are displayed in an *italic
    font*.
  prefs: []
  type: TYPE_NORMAL
- en: Throughout the book, in the file contents, code, and command output examples,
    I’ll use *pc1* to refer to the hostname of the system under analysis. If a Linux
    username is shown, I call them *sam* (for Samantha or Samuel). These names have
    no special significance except for the fact that they are both short and unlikely
    to be confused with the rest of the example output (no duplicate words).
  prefs: []
  type: TYPE_NORMAL
- en: In the computer book industry, it is common practice to change the timestamps
    in blocks of code and command output to a point in the future after the book’s
    release, giving the contents a newer appearance. As with my previous book, I felt
    that writing about forensic evidence integrity and then manipulating the very
    evidence provided in the book (by forward-dating timestamps) isn’t appropriate.
    In addition, changing visible dates in the examples may cause dates in encoded
    data to be inconsistent or cause forensic timelines to be false. The output of
    a particular tool might also be different when performed at a later point in time.
    I wanted to avoid these risks of inconsistency. All the command output you see
    in this book reflects the actual output from testing and research, including the
    original dates and timestamps. Aside from snipping out less relevant areas with
    `...` and renaming host and user names with *pc1* or *sam*, the command output
    is unchanged.
  prefs: []
  type: TYPE_NORMAL
- en: I refer to the investigator’s or examiner’s workstation as the *analysis host*
    or *examination host*. I refer to the disk or image undergoing analysis as the
    *subject drive*, *suspect drive*, or *evidence drive*. I use those terms interchangeably.
  prefs: []
  type: TYPE_NORMAL
- en: Several other terms are also used interchangeably throughout the book. *Disk*,
    *drive*, *image*, *media*, and *storage* are often used interchangeably when used
    in a generic sense. *Forensic investigator*, *examiner*, and *analyst* are used
    throughout the book and refer to the person (you) using the examination host for
    various forensic tasks. *Imaging* and *acquiring* are used interchangeably, but
    the word *copying* is deliberately excluded to avoid confusion with regular file
    copying (which is not part of the forensics process).
  prefs: []
  type: TYPE_NORMAL
- en: A bibliography is not provided at the end of the book or end of the chapters.
    All references are included as footnotes at the bottom of the page that references
    them, or mentioned directly in the text.
  prefs: []
  type: TYPE_NORMAL
- en: '***Formatting and Presentation***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The contents of files, code, commands, and command output are shown in monospace
    font, separate from the rest of the book’s text. If an example of a shell command
    is shown, it will be in bold. In some cases, this may be a command you can enter
    on your own analysis machine. In other cases, it was only for illustration using
    my test system (and not intended for you to enter). Here are some examples of
    commands entered:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Here is an example of the contents of a file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: For readers less familiar with Linux, the tilde shown in directory path names
    (~/) always represents the user’s home directory. So *~/file.txt* is the same
    as */home/sam/file.txt* (where *sam* is a normal user account on the system).
    When a directory name is shown, it will have a trailing forward slash (/).
  prefs: []
  type: TYPE_NORMAL
- en: '***Data Flow Diagrams***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Forensic analysis involves locating traces of evidence and reconstructing past
    activity. To achieve this goal, we must understand where interesting data (potential
    evidence) is flowing and being stored. The diagrams used in this book illustrate
    the flow of data between programs, daemons, hosts, or other data processing systems
    (over a network). The files and directories that are interesting from a forensic
    evidence perspective are also shown in diagrams.
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 1](ch00.xhtml#ch00fig01) shows a fictitious system to explain the diagrams
    used throughout the book. The boxes indicate the source or destination of interesting
    data (files, programs, and other machines). The lines indicate an associated flow
    of data (read/received or written/sent).'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](Images/fmfig01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 1: Example data flow diagram*'
  prefs: []
  type: TYPE_NORMAL
- en: In this example system, the program (*example.py*) is at the heart of the diagram.
    A remote host and a daemon are exchanging data (a daemon is a program running
    in the background). There are configuration files, logfiles, temporary files,
    and cached data.
  prefs: []
  type: TYPE_NORMAL
- en: In some diagrams, I may include arrows to indicate a direction of flow, rather
    than just the association. In some diagrams, I may have a box representing a simplified
    view consisting of several programs (creating an abstraction when other details
    are not useful to know).
  prefs: []
  type: TYPE_NORMAL
- en: The diagrams in this book are not intended to be complete. They show only the
    components interesting from a digital forensics perspective within the context
    of the given section. Using diagrams like this helps visualize the location of
    potential forensic evidence on the Linux system.
  prefs: []
  type: TYPE_NORMAL
- en: Writing this book was a lot of fun and I hope you enjoy reading it. For the
    forensic investigators and security incident response people, I hope you learn
    a lot about how to analyze Linux systems. For the Linux engineers and enthusiasts,
    I hope this helps you leverage digital forensic investigations to perform troubleshooting
    and debugging.
  prefs: []
  type: TYPE_NORMAL
