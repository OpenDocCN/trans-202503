- en: '![image](../images/f025-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**1'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Interview with a Cat: Twine Basics**'
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we’ll explore a Twine game I made called *Interview with a
    Cat!* To create this game, I asked my cat Encyclopedia Frown a bunch of questions,
    and then wrote down all of her responses. She’s a very talkative kitty, and she
    had a lot to say!
  prefs: []
  type: TYPE_NORMAL
- en: '*Interview with a Cat!* is a simple game in which you choose a question, Encyclopedia
    Frown answers it, and then you choose another question. Which question you ask
    next depends on Encyclopedia Frown’s response to the previous question, just like
    in a normal conversation. For example, if she mentions her mom—that’s me!—you
    can ask her about her mom. You’ll also see pictures of my cat in this game. Sometimes
    she makes funny faces when you ask her certain questions. Play the game now at
    [*https://nostarch.com/twinegames/*](https://nostarch.com/twinegames/), and then
    come back when you’re done.'
  prefs: []
  type: TYPE_NORMAL
- en: Getting Started with Twine
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Twine games are made up of words, hyperlinks, and sometimes pictures. Of course,
    they’re not all about cats. There’s no *official* rule that says they have to
    be. For your first game, it’s best to start with a small idea. The reason is that
    big ideas grow like towering castles: they’re beautiful, but rarely do they get
    finished.'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f026-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Decide on an idea. It doesn’t have to be the best one. You’ll always have more
    ideas, and you can always make more Twine games, so don’t worry about the game
    being perfect. When you have a seed of an idea, navigate to Twine’s home page
    at [*http://www.twinery.org/*](http://www.twinery.org/). The Twine web page looks
    like a big pinboard with lots of little notes pinned to it.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f027-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'For now, we’ll use Twine online so no setup is needed, and there’s nothing
    to install:'
  prefs: []
  type: TYPE_NORMAL
- en: 1Click **Use it Online**. You might see some helpful messages about Twine and
    some links to more information about using it. When you’ve finished reading those
    messages, you’ll end up in your personal Twine library, like the one shown in
    the following figure. You should see a big, empty white page because you haven’t
    written anything yet. Soon this page will be filled with all your stories!![image](../images/f028-01.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '2Click the **+Story** button. A window should pop up and ask you to name your
    story. For example, if you’re writing about an interview with your cat Marshmallow,
    enter something like *The Marshmallow Interview* or *Marshmallow: The Interview*.
    If you want to write about an interview with your fish, your dog, an imaginary
    alien, or something else, write that! If you can’t think of any ideas, just copy
    my game for now. You can always change it later.![image](../images/f028-02.jpg)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 3After you’ve entered a name, click **+Add**. You should see a blue screen like
    this.![image](../images/f029-01.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This is where your story will be! Right now, it’s just an empty grid waiting
    for all your cool ideas.
  prefs: []
  type: TYPE_NORMAL
- en: Editing Passages
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Think of the big blue grid like the blueprint for a house (or a castle, or an
    underwater laboratory, or a giant mechanical dinosaur—whatever you want). You’ll
    add passages to this grid. A *passage* is a piece of text, but you can also think
    of it as a single page in your story or a single room in your blueprint.
  prefs: []
  type: TYPE_NORMAL
- en: Right now, there’s only one passage, which is called *Untitled Passage* because
    you haven’t named it yet. Double-click where it says *Double-click this passage
    to edit it*.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f030-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*The first passage in your new Twine story*'
  prefs: []
  type: TYPE_NORMAL
- en: A window opens that lets you enter text. Change the name of the passage by highlighting
    *Untitled Passage* and pressing the BACKSPACE key to delete it.
  prefs: []
  type: TYPE_NORMAL
- en: Name this first passage **Start** because it’s where the player will start.
  prefs: []
  type: TYPE_NORMAL
- en: '**NOTE**'
  prefs: []
  type: TYPE_NORMAL
- en: It’s best to give your passages meaningful names that are easy to remember!
  prefs: []
  type: TYPE_NORMAL
- en: Next, write the text the player will see in your game! Highlight the existing
    *Double-click this passage to edit it.* message and press BACKSPACE to delete
    it. Then a whole bunch of ghostly text will appear in the window!
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f030-02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Ghostly reminder text reminds you what to write*'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f031-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This ghost text just reminds you how Twine works. It vanishes as soon as you
    start entering text. Enter the first word of my *Interview with a Cat!* game,
    which is `meh!`
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f031-02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Creating links*'
  prefs: []
  type: TYPE_NORMAL
- en: 'The words in blue under `Meh!` make up a *link*, which the player clicks to
    go from passage to passage. Let’s walk through the parts of the following link:'
  prefs: []
  type: TYPE_NORMAL
- en: '[[What does "meh" mean?->Meh]]'
  prefs: []
  type: TYPE_NORMAL
- en: It’s important to use two brackets, `[[` `]]`, on either side of the text to
    enclose the link. This lets Twine know that the text inside the brackets is a
    link and everything outside isn’t. If you’re not careful, you could end up selecting
    an entire screen as a link instead of just a few words.
  prefs: []
  type: TYPE_NORMAL
- en: The words before the arrow (`What does "meh" mean?`) are the only part the player
    will see. Refer back to the first figure in this chapter to see what this link
    looks like in a finished game. When the player clicks those words, they’ll go
    somewhere new! But where?
  prefs: []
  type: TYPE_NORMAL
- en: That’s the arrow’s (`->`) job. It’s made of a dash (`-`) and a greater than
    sign (`>`). The arrow connects the words in the link to the link’s destination.
  prefs: []
  type: TYPE_NORMAL
- en: The third item is the link’s destination. In this case, `->Meh` means the link
    goes to a passage called *Meh* where Encyclopedia Frown explains what “meh” means.
  prefs: []
  type: TYPE_NORMAL
- en: '**NOTE**'
  prefs: []
  type: TYPE_NORMAL
- en: 'From left to right, a link has the following format:'
  prefs: []
  type: TYPE_NORMAL
- en: '[[text to display in link->link destination]]'
  prefs: []
  type: TYPE_NORMAL
- en: You can make your link the first question the player might ask your cat, dog,
    or alien monster. Enter what the player will see first, an arrow `->`, and then
    the name of the passage to link to (where the player goes). Finally, enclose everything
    with closing double brackets. When you’re done, click the X in the top-right corner
    of the window to close it.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f032-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: A new room should be added to your blueprint, and your screen should look something
    like what’s shown at right.
  prefs: []
  type: TYPE_NORMAL
- en: Whenever you add links to passages, like we just did with *Meh*, Twine automatically
    creates those new passages for you to fill in and then saves your work.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f033-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'It’s best to finish writing a passage before you start filling in the new passages
    your links create. Let’s add two more links to the *Start* passage, like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Close the window and presto!
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f033-02.jpg)![image](../images/f034-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: By adding links to different passages like this, you create new choices the
    player can explore when they play the game.
  prefs: []
  type: TYPE_NORMAL
- en: Creating Multiple Paths
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Players of the *Interview with a Cat!* game can reach the same passages in
    multiple ways. For example, the first passage has three choices: *Hello*, *Meh*,
    and *Cattalk*. Each passage leads players to a different passage. But all three
    will eventually take the player to the same place: a main *Interview* passage
    with lots of different questions. This is the center of the story and is similar
    to a table of contents. Like a table of contents, it shows many different places
    the story can go, and you can always return to it to go somewhere else.'
  prefs: []
  type: TYPE_NORMAL
- en: In the following figure, arrows point from the *Start* passage to lots of other
    passages, showing different links the player can click.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f035-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: All the links lead to the *Interview* passage eventually, and so do a lot of
    arrows from other passages on other parts of the blueprint! As a result, the player
    can choose one option without being afraid that they’ll miss another part of the
    story.
  prefs: []
  type: TYPE_NORMAL
- en: Secrets and Rewards!
  prefs: []
  type: TYPE_NORMAL
- en: 'You can use little prizes to motivate the player to explore your story thoroughly.
    For example, I use special pictures of Encyclopedia Frown in *Interview with a
    Cat!* as rewards for finding certain passages. In the game is a very cute photo
    of Encyclopedia making a face that looks like this: O_o. This photo appears in
    only one passage in the entire game. Did you find it? To see this photo, you have
    to ask Encyclopedia “one more question” and then say something that’s not a question!'
  prefs: []
  type: TYPE_NORMAL
- en: One cool thing about writing interactive stories is that every player’s path
    through the game will be a little different. Try filling your games with lots
    of neat secrets for players to find and share with each other.
  prefs: []
  type: TYPE_NORMAL
- en: Deleting Passages
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When you drag your mouse over any passage, you should see a bubble with four
    icons that look like a trash can, a pencil, a play button, and three dots. Let’s
    explore what these do.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f036-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'You can use the *trash can* to delete the passage, erasing it from your story
    *forever!* (When you click it, a warning message appears to prevent you from deleting
    text by accident.) The *pencil* lets you edit the passage: you can also edit it
    by double-clicking on the passage.'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f037-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Testing Your Game
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To make sure your links work the way you want them to, you can test them. The
    *play button* lets you test your game, beginning with the passage the bubble is
    pointing at. When you click it, you enter **Debug View**.
  prefs: []
  type: TYPE_NORMAL
- en: People call problems in their games *bugs*. Think of a mean little bug crawling
    around inside your computer pressing all the wrong buttons and messing up everything.
    Yuck! A bug might be that you directed a link to the wrong place or made some
    other error. The only way to find the bugs in your games and get rid of them is
    to test your game. It’s a good idea to test your game every so often, just to
    make sure everything works correctly.
  prefs: []
  type: TYPE_NORMAL
- en: Hover your mouse over the *Start* passage and click the play button. A screen
    appears that looks like this.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f038-01.jpg)![image](../images/f038-02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Now you can do a test run of your game. When you click your links in Debug Mode,
    you’ll see an option to fix errors by clicking *Double-click this passage to edit
    it*. You should also see a small back arrow on the left.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f039-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Click the back arrow to return to the previous passage and make a different
    choice.*'
  prefs: []
  type: TYPE_NORMAL
- en: Click the back arrow to go back and make a different choice so you can test
    different paths. (The **Debug View** button in the corner shows additional information
    about your links that players won’t see, such as which passage each link goes
    to.) When you’ve checked that all your links work, close the browser tab to return
    to Twine.
  prefs: []
  type: TYPE_NORMAL
- en: Setting the Start Passage
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In the *Start* passage, you’ll see a small, green rocket ship icon, which means
    it’s the first page. To start at another passage, click “More passage options”
    on the bar and then click “Start Story Here” in the drop-down menu to make that
    passage the starting passage. The green rocket ship icon should appear on the
    new Start passage.
  prefs: []
  type: TYPE_NORMAL
- en: Click the **Play** button in the lower-right corner of Twine. Your game should
    start at the passage with the green rocket ship. Now you’re playing the game the
    way a player would see it.
  prefs: []
  type: TYPE_NORMAL
- en: Sharing Your Twine Game
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When you’ve finished creating your Twine game, share it with your friends and
    put it online, just like a game developer would do. Rad!
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f040-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Follow these steps to share your game:'
  prefs: []
  type: TYPE_NORMAL
- en: 1Click the name of your game on the bottom of Twine’s grid screen. A menu of
    options pops up.![image](../images/f040-02.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 2Click **Publish to File**. If your browser asks, click **Save File** to save
    your game to your computer as an HTML file, which is essentially a web page. Your
    game should be in the *Downloads* folder on your machine or wherever you save
    downloaded files from your web browser. It’ll be named something like *interview-with-a-cat.html.*
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 3To share your game with someone else, just email the HTML file to them. When
    they receive the file, they need to open it in their web browser to play the game.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When your game is ready for prime time, you can upload it to the internet so
    anyone can play it. A few sites on the internet allow you to upload your game
    for free.
  prefs: []
  type: TYPE_NORMAL
- en: Uploading Your Game Online
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The free Twine hosting site [*http://philome.la*](http://philome.la) is one
    option for your game. It’s very easy to use, but you must have a Twitter account
    to upload your HTML file.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f041-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Another option is [*http://textadventures.co.uk*](http://textadventures.co.uk).
    You don’t need a Twitter account, but you’ll need to register for an account at
    the site.
  prefs: []
  type: TYPE_NORMAL
- en: 'Still another option is [*https://neocities.org*](https://neocities.org). Setting
    it up is a bit more work than on the other sites, but you can get a cool website
    for your game with an easy-to-remember URL. Just register a website there, such
    as *my-cool-game.neocities.org* (or whatever cool name is available), and upload
    your HTML file, like so:'
  prefs: []
  type: TYPE_NORMAL
- en: 1Find your file on your computer. Its name should be something like <*Your-Game>.html*.
    Rename it *index.html*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 2Fill out the information on the front page of the website, and click **Register**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 3Click **Edit Site**, which takes you to a new page.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 4Click **Upload**. A window appears to help you select the file to upload. Choose
    your *index.html* file and click **Open**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now your game should be on the internet! Visit your brand-new website and make
    sure your game works.
  prefs: []
  type: TYPE_NORMAL
- en: What You Learned
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Good work! Now you know the basics of using Twine. You can write passages and
    create links to give your player choices. You know how to test your game to make
    sure it’s working. And you know how to export your game, share it with other people,
    and put it online.
  prefs: []
  type: TYPE_NORMAL
- en: But there’s so much more you can do with Twine! In the next chapter, you’ll
    learn some fun tricks to make your Twine games more expressive. You’ll also use
    links in different ways to shape the feeling and flow of your stories. See you
    there!
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f042-01.jpg)'
  prefs: []
  type: TYPE_IMG
