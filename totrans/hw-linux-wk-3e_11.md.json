["```\n#!/bin/sh\n```", "```\n#!/bin/sh\n#\n# Print something, then run ls\n\necho About to run the ls command.\nls\n```", "```\n$ **chmod +rx** `script`\n```", "```\n$ **echo $100**\n00\n```", "```\n$ **echo \"$100\"**\n00\n```", "```\n$ **echo '$100'**\n$100\n```", "```\n$ **grep r.*t /etc/passwd**\n```", "```\n$ **grep r.input r.output /etc/passwd**\n```", "```\n$ **grep 'r.*t' /etc/passwd**\n```", "```\n$ **grep 'r.*t /etc/passwd'**\n```", "```\n$ **echo \"There is no * in my path: $PATH\"**\n```", "```\n$ **echo I don\\'t like contractions inside shell scripts.**\n```", "```\n$ **echo \"I don't like contractions inside shell scripts.\"**\n```", "```\n$ **echo 'this isn'\\''t a forward slash: \\'**\n```", "```\n#!/bin/sh\necho First argument: $1\necho Third argument: $3\n```", "```\n$ **./pshow one two three**\nFirst argument: one\nThird argument: three\n```", "```\n#!/bin/sh\necho Argument: $1 \nshift\necho Argument: $1\nshift\necho Argument: $1\n```", "```\n$ **./shiftex one two three** \nArgument: one\nArgument: two\nArgument: three\n```", "```\n#!/bin/sh\ngs -q -dBATCH -dNOPAUSE -dSAFER -sOutputFile=- -sDEVICE=pnmraw $@\n```", "```\n#!/bin/sh\ngs -q -dBATCH -dNOPAUSE -dSAFER **\\**\n   -sOutputFile=- -sDEVICE=pnmraw $@\n```", "```\necho $0: bad option $BADPARM\n```", "```\necho $0: bad option $BADPARM 1>&2\n```", "```\n$ **ls / > /dev/null**\n$ **echo $?**\n0\n$ **ls /asdfasdf > /dev/null**\nls: /asdfasdf: No such file or directory\n$ **echo $?**\n1\n```", "```\n#!/bin/sh\nif [ $1 = hi ]; then\n   echo 'The first argument was \"hi\"'\nelse\n   echo -n 'The first argument was not \"hi\" -- '\n   echo It was '\"'$1'\"'\nfi\n```", "```\nif [ $1 = hi ]\nthen\n   echo 'The first argument was \"hi\"'\nfi\n```", "```\nif [ \"$1\" = hi ]; then\nif [ x\"$1\" = x\"hi\" ]; then\n```", "```\n#!/bin/sh\nif grep -q daemon /etc/passwd; then\n    echo The daemon user is in the passwd file.\nelse\n    echo There is a big problem. daemon is not in the passwd file.\nfi\n```", "```\n#!/bin/sh\nif [ \"$1\" = \"hi\" ]; then\n   echo 'The first argument was \"hi\"'\nelif [ \"$2\" = \"bye\" ]; then\n   echo 'The second argument was \"bye\"'\nelse\n   echo -n 'The first argument was not \"hi\" and the second was not \"bye\"-- '\n   echo They were '\"'$1'\"' and '\"'$2'\"'\nfi\n```", "```\n`command1` `&&` `command2`\n```", "```\n#!/bin/sh\nif [ \"$1\" = hi ] || [ \"$1\" = bye ]; then\n    echo 'The first argument was \"'$1'\"'\nfi\n```", "```\n#!/bin/sh\nif [ \"$1\" = hi  -o \"$1\" = bye ]; then\n   echo 'The first argument was \"'$1'\"'\nfi\n```", "```\n#!/bin/sh\nif [ ! \"$1\" = hi  ]; then\n   echo 'The first argument was not hi'\nfi\n```", "```\n[ -f `file` ]\n```", "```\nfor filename in *; do\n    if [ -f $filename ]; then\n        ls -l $filename\n        file $filename\n    else\n        echo $filename is not a regular file.\n    fi\ndone \n```", "```\n[ `file1` -nt `file2` ]\n```", "```\n#!/bin/sh\ncase $1 in\n    bye)\n        echo Fine, bye.\n        ;;\n    hi|hello)\n        echo Nice to see you.\n        ;;\n    what*)\n        echo Whatever.\n        ;;\n    *)\n        echo 'Huh?'\n        ;;\nesac\n```", "```\n#!/bin/sh\nfor str in one two three four; do\n    echo $str\ndone\n```", "```\none\ntwo\nthree\nfour\n```", "```\n#!/bin/sh\nFILE=/tmp/whiletest.$$;\necho firstline > $FILE\n\nwhile tail -10 $FILE | grep -q firstline; do\n    # add lines to $FILE until tail -10 $FILE no longer prints \"firstline\"\n    echo -n Number of lines in $FILE:' '\n    wc -l $FILE | awk '{print $1}'\n    echo newline >> $FILE\ndone\n\nrm -f $FILE\n```", "```\n#!/bin/sh\nFLAGS=**$(grep ^flags /proc/cpuinfo | sed 's/.*://' | head -1)**\necho Your processor supports:\nfor f in $FLAGS; do\n    case $f in\n        fpu)    MSG=\"floating point unit\"\n                ;;\n        3dnow)  MSG=\"3DNOW graphics extensions\"\n                ;;\n        mtrr)   MSG=\"memory type range register\"\n                ;;\n        *)      MSG=\"unknown\"\n                ;;\n    esac\n    echo $f: $MSG\ndone\n```", "```\n#!/bin/sh\nTMPFILE1=$(mktemp /tmp/im1.XXXXXX)\nTMPFILE2=$(mktemp /tmp/im2.XXXXXX)\n\ncat /proc/interrupts > $TMPFILE1\nsleep 2\ncat /proc/interrupts > $TMPFILE2\ndiff $TMPFILE1 $TMPFILE2\nrm -f $TMPFILE1 $TMPFILE2\n```", "```\n#!/bin/sh\nTMPFILE1=$(mktemp /tmp/im1.XXXXXX)\nTMPFILE2=$(mktemp /tmp/im2.XXXXXX)\ntrap \"rm -f $TMPFILE1 $TMPFILE2; exit 1\" INT\n --`snip`--\n```", "```\n#!/bin/sh\nDATE=$(date)\ncat **<<EOF**\nDate: $DATE\n\nThe output above is from the Unix date command.\nIt's not a very interesting command.\n**EOF**\n```", "```\n$ **basename example.html .html**\n$ **basename /usr/local/bin/example**\n```", "```\n#!/bin/sh\nfor file in *.gif; do\n    # exit if there are no files\n if [ ! -f $file ]; then\n        exit\n    fi\n    b=$(basename $file .gif)\n    echo Converting $b.gif to $b.png...\n    giftopnm $b.gif | pnmtopng > $b.png\ndone\n```", "```\n$ **ls -l | awk '{print $5}'**\n```", "```\n$ **sed 's/**`exp`**/**`text`**/'**\n```", "```\n$ **sed 's/:/%/' /etc/passwd**\n```", "```\n$ **sed 's**`/:/`**%/g' /etc/passwd**\n```", "```\n$ **sed** **3,6d /etc/passwd**\n```", "```\n$ **sed '/**`exp`**/d'**\n```", "```\n$ **find . -name '*.gif' -print | xargs file**\n```", "```\n$ **find . -name '*.gif' -print0 | xargs -0 file**\n```", "```\n$ **find . -name '*.gif' -exec file {} \\;**\n```", "```\n$ **(cd uglydir; uglyprogram)**\n```", "```\n$ **(PATH=/usr/confusing:$PATH; uglyprogram)**\n```", "```\n$ **PATH=/usr/confusing:$PATH uglyprogram**\n```", "```\n$ **tar cf -** `orig` **| (cd** `target`**; tar xvf -)**\n```", "```\n. config.sh\n```", "```\n$ **read** `var`\n```"]