["```\nsignal in1  : unsigned(3 downto 0);\nsignal in2  : signed(3 downto 0);\nsignal out1 : integer;\nsignal out2 : integer;\nout1 <= to_integer(in1);\nout2 <= to_integer(in2);\n```", "```\nsignal in1  : integer;\nsignal out1 : unsigned(3 downto 0);\nsignal out2 : signed(3 downto 0);\nsignal out3 : std_logic_vector(3 downto 0);\nsignal out4 : std_logic_vector(3 downto 0);\n❶ out1 <= to_unsigned(in1, out1'length);\n❷ out2 <= to_signed(in1, out2'length);\n-- Positive integers:\n❸ out3 <= std_logic_vector(to_unsigned(in1, out3'length));\n-- Negative integers:\n❹ out4 <= std_logic_vector(to_signed(in1, out4'length));\n```", "```\nsignal in1  : std_logic_vector(3 downto 0);\nsignal out1 : unsigned(3 downto 0);\nsignal out2 : signed(3 downto 0);\nsignal out3 : integer;\nsignal out4 : integer;\n❶ out1 <= unsigned(in1);\n❷ out2 <= signed(in1);\n-- Demonstrates the unsigned case:\n❸ out3 <= to_integer(unsigned(in1));\n-- Demonstrates the signed case:\n❹ out4 <= to_integer(signed(in1));\n```", "```\nmodule Math_Examples();\n  reg unsigned [3:0] i1_u4, i2_u4, o_u4;\n  reg signed   [3:0] i1_s4, i2_s4, o_s4;\n  reg unsigned [4:0] o_u5, i2_u5;\n  reg signed   [4:0] o_s5, i1_s5, i2_s5;\n  reg unsigned [5:0] o_u6;\n  reg unsigned [7:0] o_u8, i_u8;\n  reg signed   [7:0] o_s8;\n  initial begin\n     `--snip--`\n     $finish();\n  end\nendmodule\n```", "```\nlibrary ieee;\nuse ieee.std_logic_1164.all;\nuse ieee.numeric_std.all;\nuse std.env.finish;\nentity Math_Examples is\nend entity Math_Examples;\narchitecture test of Math_Examples is\n  -- Takes input unsigned, returns string for printing\n❶ function str(val : in unsigned) return string is\n  begin\n    return to_string(to_integer(val));\n  end function str;\n  -- Takes input signed, returns string for printing\n❷ function str(val : in signed) return string is\n  begin\n    return to_string(to_integer(val));\n  end function str; -- Takes input real, returns string for printing\n❸ function str(val : in real) return string is\n  begin\n    return to_string(val, \"%2.3f\");\n  end function str;\nbegin\n  process is\n    variable i1_u4, i2_u4, o_u4 : unsigned(3 downto 0);\n    variable i1_u5, i2_u5, o_u5 : unsigned(4 downto 0);\n    variable i1_s4, i2_s4, o_s4 : signed(3 downto 0);\n    variable i1_s5, i2_s5, o_s5 : signed(4 downto 0);\n    variable i1_u6, i2_u6, o_u6 : unsigned(5 downto 0);\n    variable i1_u8, i2_u8, o_u8 : unsigned(7 downto 0);\n    variable i1_s8, i2_s8, o_s8 : signed(7 downto 0);\n    variable real1, real2, real3 : real;\n  begin\n    `--snip--`\n    wait for 1 ns;\n    finish;\n    end process;\nend test;\n```", "```\n0010\n+ 1000\n------\n 01010\n```", "```\n 1001\n+ 1011\n------\n 10100\n```", "```\n 0010\n+ 1000\n------\n 01010\n```", "```\n00010\n+ 11000\n-------\n  11010\n```", "```\n // Unsigned + Unsigned = Unsigned (Rule #1 violation)\n   i1_u4 = 4'b1001; // dec 9\n   i2_u4 = 4'b1011; // dec 11\n   o_u4  = i1_u4 + i2_u4;\n   $display(\"Ex01: %2d + %2d = %3d\", i1_u4, i2_u4, o_u4);\n   // Signed + Signed = Signed (Rule #1 violation)\n   i1_s4 = 4'b1001; // dec -7\n   i2_s4 = 4'b1011; // dec -5\n   o_s4= i1_s4 + i2_s4;\n   $display(\"Ex02: %2d + %2d = %3d\", i1_s4, i2_s4, o_s4);\n   // Unsigned + Unsigned = Unsigned (Rule #1 fix)\n   i1_u4 = 4'b1001; // dec 9\n   i2_u4 = 4'b1011; // dec 11\n   o_u5  = i1_u4 + i2_u4;\n   $display(\"Ex03: %2d + %2d = %3d\", i1_u4, i2_u4, o_u5);\n   // Signed + Signed = Signed (Rule #1 fix)\n   i1_s4 = 4'b1001; // dec -7\n   i2_s4 = 4'b1011; // dec -5\n   o_s5  = i1_s4 + i2_s4;\n   $display(\"Ex04: %2d + %2d = %3d\", i1_s4, i2_s4, o_s5);\n```", "```\n -- Unsigned + Unsigned = Unsigned (Rule #1 violation)\n   i1_u4 := \"1001\"; -- dec 9\n   i2_u4 := \"1011\"; -- dec 11\n   o_u4  := i1_u4 + i2_u4;\n   report \"Ex01: \" & str(i1_u4) & \" + \" & str(i2_u4) & \" = \" & str(o_u4);\n   -- Signed + Signed = Signed (Rule #1 violation)\n   i1_s4 := \"1001\"; -- dec -7\n   i2_s4 := \"1011\"; -- dec -5\n   o_s4  := i1_s4 + i2_s4;\n   report \"Ex02: \" & str(i1_s4) & \" + \" & str(i2_s4) & \" = \" & str(o_s4);\n   -- Unsigned + Unsigned = Unsigned (Rule #1 fix)\n   i1_u4 := \"1001\"; -- dec 9\n   i2_u4 := \"1011\"; -- dec 11\n   ❶ i1_u5 := resize(i1_u4, i1_u5'length);\n   i2_u5 := resize(i2_u4, i2_u5'length);\n   o_u5  := i1_u5 + i2_u5;\n   report \"Ex03: \" & str(i1_u5) & \" + \" & str(i2_u5) & \" = \" & str(o_u5);\n   -- Signed + Signed = Signed (Rule #1 Fix)\n   i1_s4 := \"1001\"; -- dec -7\n   i2_s4 := \"1011\"; -- dec -5\n   i1_s5 := resize(i1_s4, i1_s5'length);\n   i2_s5 := resize(i2_s4, i2_s5'length);\n   o_s5  := i1_s5 + i2_s5;\n   report \"Ex04: \" & str(i1_s5) & \" + \" & str(i2_s5) & \" = \" & str(o_s5);\n```", "```\n# Ex01:  9 + 11 =   4\n# Ex02: -7 + -5 =   4\n# Ex03:  9 + 11 =  20\n# Ex04: -7 + -5 = -12\n```", "```\n# ** Note: Ex01: 9 + 11 = 4\n#    Time: 0 ns  Iteration: 0   Instance: /math_examples\n# ** Note: Ex02: -7 + -5 = 4\n#    Time: 0 ns  Iteration: 0   Instance: /math_examples\n# ** Note: Ex03: 9 + 11 = 20\n#    Time: 0 ns  Iteration: 0   Instance: /math_examples\n# ** Note: Ex04: -7 + -5 = -12\n#    Time: 0 ns  Iteration: 0   Instance: /math_examples\n```", "```\no_u4 := i1_u4 + i2_s4;\n```", "```\n** Error: testbench.vhd(49): (vcom-1581) No feasible entries for infix\noperator '+'.\n```", "```\n // Unsigned - Unsigned = Unsigned (bad)\n    i1_u4 = 4'b1001; // dec 9\n    i2_u4 = 4'b1011; // dec 11\n    o_u5  = i1_u4 - i2_u4;\n    $display(\"Ex05: %2d - %2d = %3d\", i1_u4, i2_u4, o_u5);\n    // Signed - Signed = Signed (fix)\n    i1_u4 = 4'b1001; // dec 9\n    i2_u4 = 4'b1011; // dec 11\n ❶ i1_s5 = i1_u4;\n    i2_s5 = i2_u4;\n    o_s5  = i1_s5 - i2_s5;\n    $display(\"Ex06: %2d - %2d = %3d\", i1_s5, i2_s5, o_s5);\n```", "```\n -- Unsigned - Unsigned = Unsigned (bad)\n    i1_u4 := \"1001\"; -- dec 9\n    i2_u4 := \"1011\"; -- dec 11\n    i1_u5 := resize(i1_u4, i1_u5'length);\n    i2_u5 := resize(i2_u4, i2_u5'length);\n    o_u5:= i1_u5 - i2_u5;\n    report \"Ex05: \" & str(i1_u5) & \" - \" & str(i2_u5) & \" = \" & str(o_u5);\n    -- Signed - Signed = Signed (fix)\n    i1_u4 := \"1001\"; -- dec 9\n    i2_u4 := \"1011\"; -- dec 11\n ❷ i1_s5 := signed(resize(i1_u4, i1_s5'length));\n    i2_s5 := signed(resize(i2_u4, i2_s5'length));\n    o_s5:= i1_s5 - i2_s5;\n    report \"Ex06: \" & str(i1_s5) & \" - \" & str(i2_s5) & \" = \" & str(o_s5);\n```", "```\n# Ex05: 9 - 11 = 30\n# Ex06: 9 - 11 = -2\n```", "```\n# ** Note: Ex05: 9 - 11 = 30\n#    Time: 0 nsIteration: 0  Instance: /math_examples\n# ** Note: Ex06: 9 - 11 = -2\n#    Time: 0 ns  Iteration: 0  Instance: /math_examples\n```", "```\n 111\n×   11\n------\n   111\n+ 1110\n------\n 10101\n```", "```\n 11111\n ×    11111\n-----------\n      11111\n     111110\n    1111100\n   11111000\n+ 111110000\n-----------\n000000001\n```", "```\n // Unsigned * Unsigned = Unsigned (Rule #4 violation)\n   i1_u4 = 4'b1001; // dec 9\n   i2_u4 = 4'b1011; // dec 11\n   o_u4  = i1_u4 * i2_u4;\n   $display(\"Ex07: %2d * %2d = %3d\", i1_u4, i2_u4, o_u4);\n   // Signed * Signed = Signed (Rule #4 violation)\n   i1_s4 = 4'b1000; // dec -8\n   i2_s4 = 4'b0111; // dec 7\n   o_s4  = i1_s4 * i2_s4;\n   $display(\"Ex08: %2d * %2d = %3d\", i1_s4, i2_s4, o_s4);\n```", "```\n -- Unsigned * Unsigned = Unsigned\n   i1_u4 := \"1001\"; -- dec 9\n   i2_u4 := \"1011\"; -- dec 11\n   o_u4  := i1_u4 * i2_u4;\n   report \"Ex07: \" & str(i1_u4) & \" * \" & str(i2_u4) & \" = \" & str(o_u4);\n   -- Signed * Signed = Signed\n   i1_s4 := \"1000\"; -- dec -8\n   i2_s4 := \"0111\"; -- dec 7 o_s4  := i1_s4 * i2_s4;\n   report \"Ex08: \" & str(i1_s4) & \" * \" & str(i2_s4) & \" = \" & str(o_s4);\n```", "```\n# Ex07:  9 * 11 =  3\n# Ex08: -8 *  7 = -8\n```", "```\n** Error (suppressible): testbench.vhd(89): (vcom-1272) Length of expected\nis 4; length of actual is 8.\n```", "```\n // Unsigned * Unsigned = Unsigned (Rule #4 fix)\n   i1_u4 = 4'b1001; // dec 9\n   i2_u4 = 4'b1011; // dec 11\n   o_u8  = i1_u4 * i2_u4;\n   $display(\"Ex09: %2d * %2d = %3d\", i1_u4, i2_u4, o_u8);\n   // Signed * Signed = Signed (Rule #4 fix)\n   i1_s4 = 4'b1000; // dec -8\n   i2_s4 = 4'b0111; // dec 7\n   o_s8  = i1_s4 * i2_s4;\n   $display(\"Ex10: %2d * %2d = %3d\", i1_s4, i2_s4, o_s8);\n```", "```\n -- Unsigned * Unsigned = Unsigned\n   i1_u4 := \"1001\"; -- dec 9\n   i2_u4 := \"1011\"; -- dec 11\n   o_u8  := i1_u4 * i2_u4;\n   report \"Ex09: \" & str(i1_u4) & \" * \" & str(i2_u4) & \" = \" & str(o_u8);\n   -- Signed * Signed = Signed\n   i1_s4 := \"1000\"; -- dec -8\n   i2_s4 := \"0111\"; -- dec 7\n   o_s8  := i1_s4 * i2_s4;\n   report \"Ex10: \" & str(i1_s4) & \" * \" & str(i2_s4) & \" = \" & str(o_s8);\n```", "```\n# Ex09:  9 * 11 =  99\n# Ex10: -8 *  7 = -56\n```", "```\n# ** Note: Ex09: 9 * 11 = 99\n#    Time: 0 ns  Iteration: 0   Instance: /math_examples\n# ** Note: Ex10: -8 * 7 = -56\n#    Time: 0 ns  Iteration: 0   Instance: /math_examples\n```", "```\n i_u8 = 3;\n   o_u8 = i_u8 << 1;\n   $display(\"Ex11: %d * 2 = %d\",  i_u8, o_u8);\n   o_u8 = i_u8 << 2;\n   $display(\"Ex12: %d * 4 = %d\",  i_u8, o_u8);\n   o_u8 = i_u8 << 4;\n   $display(\"Ex13: %d * 16 = %d\", i_u8, o_u8);\n```", "```\n i1_u8 := to_unsigned(3, i1_u8'length);\n   o_u8 := shift_left(i1_u8, 1);\n   report \"Ex11: \" & str(i1_u8) & \" * 2 = \"  & str(o_u8);\n   o_u8 := shift_left(i1_u8, 2);\n   report \"Ex12: \" & str(i1_u8) & \" * 4 = \"  & str(o_u8);\n   o_u8 := shift_left(i1_u8, 4);\n   report \"Ex13: \" & str(i1_u8) & \" * 16 = \" & str(o_u8);\n```", "```\n# Ex11:  3 * 2 =  6\n# Ex12:  3 * 4 = 12\n# Ex13:  3 * 16 = 48\n```", "```\n# ** Note: Ex11: 3 * 2 = 6\n#    Time: 0 ns  Iteration: 0  Instance: /math_examples\n# ** Note: Ex12: 3 * 4 = 12\n#    Time: 0 ns  Iteration: 0  Instance: /math_examples\n# ** Note: Ex13: 3 * 16 = 48\n#    Time: 0 ns  Iteration: 0  Instance: /math_examples\n```", "```\n i_u8 = 128;\n   o_u8 = i_u8 >> 1;\n   $display(\"Ex14: %d / 2 = %d\",  i_u8, o_u8);\n   o_u8 = i_u8 >> 2;\n   $display(\"Ex15: %d / 4 = %d\",  i_u8, o_u8);\n   o_u8 = i_u8 >> 4;\n   $display(\"Ex16: %d / 16 = %d\", i_u8, o_u8);\n```", "```\n i1_u8 := to_unsigned(128, i1_u8'length);\n   o_u8 := shift_right(i1_u8, 1);\n   report \"Ex14: \" & str(i1_u8) & \" / 2 = \"  & str(o_u8);\n   o_u8 := shift_right(i1_u8, 2);\n   report \"Ex15: \" & str(i1_u8) & \" / 4 = \"  & str(o_u8);\n   o_u8 := shift_right(i1_u8, 4);\n   report \"Ex16: \" & str(i1_u8) & \" / 16 = \" & str(o_u8);\n```", "```\n# Ex14: 128 / 2 = 64\n# Ex15: 128 / 4 = 32\n# Ex16: 128 / 16 =  8\n```", "```\n# ** Note: Ex14: 128 / 2 = 64\n#    Time: 0 ns  Iteration: 0  Instance: /math_examples\n# ** Note: Ex15: 128 / 4 = 32\n#    Time: 0 ns  Iteration: 0  Instance: /math_examples\n# ** Note: Ex16: 128 / 16 = 8\n#    Time: 0 ns  Iteration: 0  Instance: /math_examples\n```", "```\n i_u8 = 15;\n   o_u8 = i_u8 >> 1;\n   $display(\"Ex17: %d / 2 = %d\", i_u8, o_u8);\n   o_u8 = i_u8 >> 2;\n   $display(\"Ex18: %d / 4 = %d\", i_u8, o_u8);\n   o_u8 = i_u8 >> 3;\n   $display(\"Ex19: %d / 8 = %d\", i_u8, o_u8);\n```", "```\n i1_u8 := to_unsigned(15, i1_u8'length);\n   o_u8 := shift_right(i1_u8, 1);\n   report \"Ex17: \" & str(i1_u8) & \" / 2 = \" & str(o_u8);\n   o_u8 := shift_right(i1_u8, 2);\n   report \"Ex18: \" & str(i1_u8) & \" / 4 = \" & str(o_u8);\n   o_u8 := shift_right(i1_u8, 3);\n   report \"Ex19: \" & str(i1_u8) & \" / 8 = \" & str(o_u8);\n```", "```\n# Ex17: 15 / 2 =  7\n# Ex18: 15 / 4 =  3\n# Ex19: 15 / 8 =  1\n```", "```\n# ** Note: Ex17: 15 / 2 = 7\n#    Time: 0 ns  Iteration: 0  Instance: /math_examples\n# ** Note: Ex18: 15 / 4 = 3\n#    Time: 0 ns  Iteration: 0  Instance: /math_examples\n# ** Note: Ex19: 15 / 8 = 1\n```", "```\n // U3.1 + U4.0 = U4.1 (Rule #5 violation)\n   i1_u4 = 4'b0011;\n   i2_u4 = 4'b0011;\n   o_u5  = i1_u4 + i2_u4;\n❶ $display(\"Ex20: %2.3f + %2.3f = %2.3f\", i1_u4/2.0, i2_u4, o_u5/2.0);\n```", "```\n -- U3.1 + U4.0 = U4.1 (Rule #5 violation)\n   i1_u4 := \"0011\";\n   i2_u4 := \"0011\";\n   i1_u5 := resize(i1_u4, i1_u5'length);\n   i2_u5 := resize(i2_u4, i2_u5'length);\n   o_u5  := i1_u5 + i2_u5;\n❶ real1 := real(to_integer(i1_u5)) / 2.0;\n   real2 := real(to_integer(i2_u5));\n   real3 := real(to_integer(o_u5)) / 2.0;\n   report \"Ex20: \" & str(real1) & \" + \" & str(real2) & \" = \" & str(real3);\n```", "```\n# Ex20: 1.500 + 3.000 = 3.000\n```", "```\n# ** Note: Ex20: 1.500 + 3.000 = 3.000\n#    Time: 0 ns  Iteration: 0  Instance: /math_examples\n```", "```\n // Convert U3.1 to U4.0\n   // U4.0 + U4.0 = U5.0 (Rule #5 fix, using truncation)\n   i1_u4 = 4'b0011;\n   i2_u4 = 4'b0011;\n❶ i1_u4 = i1_u4 >> 1; // Convert U3.1 to U4.0 by dropping decimal\n   o_u5  = i1_u4 + i2_u4;\n   $display(\"Ex21: %2.3f + %2.3f = %2.3f\", i1_u4, i2_u4, o_u5);\n   // Or Convert U4.0 to U4.1\n   // U3.1 + U4.1 = U5.1 (Rule #5 fix, using expansion)\n   i1_u4 = 4'b0011;\n   i2_u4 = 4'b0011;\n❷ i2_u5 = i2_u4 << 1;\n   o_u6  = i1_u4 + i2_u5;\n   $display(\"Ex22: %2.3f + %2.3f = %2.3f\", i1_u4/2.0, i2_u5/2.0, o_u6/2.0);\n```", "```\n -- Convert U3.1 to U4.0\n   -- U4.0 + U4.0 = U5.0 (Rule #5 fix, using truncation)\n    i1_u4 := \"0011\";\n   i2_u4 := \"0011\";\n❶ i1_u4 := shift_right(i1_u4, 1); -- Convert U3.1 to U4.0\n   i1_u5 := resize(i1_u4, i1_u5'length);\n   i2_u5 := resize(i2_u4, i2_u5'length);\n   o_u5  := i1_u5 + i2_u5;\n   real1 := real(to_integer(i1_u5));\n   real2 := real(to_integer(i2_u5));\n   real3 := real(to_integer(o_u5));\n   report \"Ex21: \" & str(real1) & \" + \" & str(real2) & \" = \" & str(real3);\n   -- Or Convert U4.0 to U4.1\n   -- U3.1 + U4.1 = U5.1 (Rule #4 fix, using expansion)\n   i1_u4 := \"0011\";\n   i2_u4 := \"0011\";\n   i1_u6 := resize(i1_u4, i1_u6'length); -- expand for adding\n   i2_u6 := resize(i2_u4, i2_u6'length); -- expand for adding\n❷ i2_u6 := shift_left(i2_u6, 1); -- Convert 4.0 to 4.1\n   o_u6  := i1_u6 + i2_u6; real1 := real(to_integer(i1_u6)) / 2.0;\n   real2 := real(to_integer(i2_u6)) / 2.0;\n   real3 := real(to_integer(o_u6)) / 2.0;\n   report \"Ex22: \" & str(real1) & \" + \" & str(real2) & \" = \" & str(real3);\n```", "```\n# Ex21: 1.000 + 3.000 = 4.000\n# Ex22: 1.500 + 3.000 = 4.500\n```", "```\n# ** Note: Ex21: 1.000 + 3.000 = 4.000\n#    Time: 0 ns  Iteration: 0  Instance: /math_examples\n# ** Note: Ex22: 1.500 + 3.000 = 4.500\n#    Time: 0 ns  Iteration: 0  Instance: /math_examples\n```", "```\n // U2.2 * U3.1 = U5.3\n   i1_u4 = 4'b0101;\n   i2_u4 = 4'b1011;\n   o_u8  = i1_u4 * i2_u4;\n   $display(\"Ex23: %2.3f * %2.3f = %2.3f\", i1_u4/4.0, i2_u4/2.0, o_u8/8.0);\n   // S2.2 * S4.0 = S6.2\n   i1_s4 = 4'b0110;\n   i2_s4 = 4'b1010;\n   o_s8  = i1_s4 * i2_s4;\n   $display(\"Ex24: %2.3f * %2.3f = %2.3f\", i1_s4/4.0, i2_s4, o_s8/4.0);\n```", "```\n -- U2.2 * U3.1 = U5.3\n   i1_u4 := \"0101\";\n   i2_u4 := \"1011\";\n   o_u8  := i1_u4 * i2_u4;\n   real1 := real(to_integer(i1_u4)) / 4.0;\n   real2 := real(to_integer(i2_u4)) / 2.0;\n   real3 := real(to_integer(o_u8))  / 8.0;\n   report \"Ex23: \" & str(real1) & \" * \" & str(real2) & \" = \" & str(real3);\n   -- S2.2 * S4.0 = S6.2\n   i1_s4 := \"0110\";\n   i2_s4 := \"1010\";\n   o_s8  := i1_s4 * i2_s4;\n   real1 := real(to_integer(i1_s4)) / 4.0;\n   real2 := real(to_integer(i2_s4));\n   real3 := real(to_integer(o_s8))  / 4.0;\n   report \"Ex24: \" & str(real1) & \" * \" & str(real2) & \" = \" & str(real3);\n```", "```\n# Ex23: 1.250 * 5.500 = 6.875\n# Ex24: 1.500 * -6.000 = -9.000\n```", "```\n# ** Note: Ex23: 1.250 * 5.500 = 6.875\n#    Time: 0 ns  Iteration: 0  Instance: /math_examples\n# ** Note: Ex24: 1.500 * -6.000 = -9.000\n#    Time: 0 ns  Iteration: 0  Instance: /math_examples\n```"]