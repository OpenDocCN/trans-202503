- en: '17'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '17'
- en: The Android Browser
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Android 浏览器
- en: To understand the Android Browser application, it’s important to first understand
    the state of web browsing before Android.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 要理解 Android 浏览器应用程序，首先需要了解 Android 之前的网络浏览状态。
- en: Google has always cared deeply about web technology. From the beginning, Google’s
    main mission has been supplying results to search queries. So investing more broadly
    in web technology like browsers made sense; the better the vehicles are that deliver
    those results, the better experience Google could offer for those results. This
    was especially important to Google back in the early 2000s, with the state of
    web browsing enabled by browser companies at that time.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Google 一直非常关注网络技术。从一开始，Google 的主要任务就是提供搜索查询的结果。因此，广泛投资于像浏览器这样的网络技术是合乎逻辑的；提供结果的工具越好，Google
    为这些结果提供的体验就越好。尤其是在 2000 年代初期，浏览器公司所推动的网络浏览状态对 Google 来说至关重要。
- en: The Great Browser Wars
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 伟大的浏览器战争
- en: In the early days of the internet, the Netscape browser was king; desktop users
    would download and use Netscape because that was how you got to the web. But Microsoft
    came out with their own browser, Internet Explorer (IE), eventually bundling it
    with Windows. Bundling IE virtually guaranteed that Microsoft’s browser would
    become the default for most users because it came installed as part of the OS
    and it was (at that time) good enough. Internet Explorer even became the default
    browser on MacOS until Apple came out with its own Safari browser in 2003.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在互联网初期，Netscape 浏览器是当时的王者；桌面用户会下载并使用 Netscape，因为那时就是上网的方式。但是微软推出了自己的浏览器 Internet
    Explorer（IE），最终将其与 Windows 捆绑在一起。捆绑 IE 几乎保证了微软的浏览器会成为大多数用户的默认浏览器，因为它作为操作系统的一部分预装，而且（当时）足够好。Internet
    Explorer 甚至在 Apple 推出自己 Safari 浏览器之前，曾是 MacOS 上的默认浏览器，直到 2003 年。
- en: The tension between Netscape and IE was at the heart of what Wikipedia amusingly
    (albeit correctly) calls the “First Browser War,” which resulted in lawsuits and,
    ultimately, Netscape’s demise as Internet Explorer^([1](#c17-footnote-1)) took
    over the planet.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Netscape 和 IE 之间的紧张关系成为了维基百科幽默地（尽管是正确的）称之为“第一次浏览器战争”的核心，这场战争导致了诉讼，并最终使 Netscape
    死亡，Internet Explorer^([1](#c17-footnote-1)) 接管了全球市场。
- en: During this time, Microsoft was essentially in the position of dictating how
    people could access the Web, since IE was increasingly the door through which
    they entered.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在此期间，微软实际上处于决定人们如何访问网络的位置，因为 IE 越来越成为他们进入网络的大门。
- en: To ensure that all users had access to great web experiences, including new
    web technologies that were being introduced, Google started funding web browser
    development. At first, Google worked with the Mozilla foundation, helping out
    with the Firefox browser. In particular, Google contributed engineering resources
    by implementing or helping out with some of the improvements in that browser,
    including things like performance improvements, inline spell-checking, the software
    update system, and browser extensions. Google didn’t have an operating system
    on which to bundle a browser, like Microsoft or Apple, but it could provide a
    better browser alternative and encourage people to switch to it.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保所有用户都能访问到出色的网络体验，包括正在引入的新网络技术，Google 开始资助浏览器开发。最初，Google 与 Mozilla 基金会合作，支持
    Firefox 浏览器。特别是，Google 通过实施或协助一些改进措施，贡献了工程资源，包括性能提升、内联拼写检查、软件更新系统以及浏览器扩展等。Google
    并没有像微软或苹果那样拥有可以捆绑浏览器的操作系统，但它可以提供一个更好的浏览器替代方案，并鼓励人们切换使用。
- en: Google decided to push this approach further when it created the Chrome browser
    in 2006\. It started from scratch (using the open source WebKit code base) and
    built an entirely new browser to enable the kind of web experience that Google
    wanted users to have. Google focused on adding modern web functionality and on
    making browsing faster.^([2](#c17-footnote-2)) Google also bundled access to its
    search engine by default in Chrome; typing a search query in the browser’s address
    bar showed search results on google.com as if the user had gone to Google’s home
    page and typed into the search bar.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Google 在 2006 年创建 Chrome 浏览器时决定进一步推动这种方法。它从头开始（使用开源的 WebKit 代码库），构建了一个全新的浏览器，以实现
    Google 想让用户体验的网络效果。Google 专注于添加现代化的网络功能，并提高浏览速度。^([2](#c17-footnote-2)) Google
    还默认在 Chrome 中捆绑了对其搜索引擎的访问；在浏览器的地址栏中输入搜索查询会显示 google.com 上的搜索结果，就像用户访问了 Google
    的主页并在搜索栏中输入一样。
- en: Chrome launched in September of 2008 and eventually got good traction. Users
    returned to the world of downloading a browser app instead of just using the one
    that came conveniently bundled with their desktop computer.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: Android Needs a Browser
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Android’s need for a mobile browser was different from Google’s need for a desktop
    browser.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: Unlike the situation with desktop browsers, the Android platform was being built
    from scratch. They didn’t need a better browser; they needed *any* browser. Specifically,
    they needed an application through which users could view websites on their phones,
    just like they would on their desktops. They also needed a way to incorporate
    web content directly into other applications, because they realized that the line
    between mobile applications and web content was blurring.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: For example, a mobile application may want to show content from a website to
    a user. Sometimes it’s better to show that content directly in the app, rather
    than redirecting the user off to a browser app. This dynamic not only enables
    a more seamless experience, but also ensures that the user doesn’t leave the app
    forever. Also, many developers were more familiar with HTML and JavaScript, the
    languages of the web, so giving them a way to create web content in mobile apps
    expanded the developer audience and made it possible for people to create basic
    Android applications more quickly.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: The Android team created WebView to answer this need. WebView is a viewer for
    a web page that can be embedded inside a larger Android application. It was developed
    in conjunction with the Android browser because the browser is, essentially, a
    WebView surrounded by extra controls and UI.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: 'But in the beginning, none of this existed and the platform needed all of it.
    So they needed a developer to pull it together. Fortunately, many of them had
    worked with such an engineer at Danger: Wei Huang.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: Wei Huang and the Android Browser
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Wei had years of experience developing web browsers and developing software.
    But that experience didn’t start in childhood.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: When Wei was twelve, he took a programming course. But the workings of binary
    math eluded him and he gave up. When his mother showed him an article about computers
    being the future, Wei was convinced that he’d just ruined his life.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: Many years later, in high school, he tried programming again, this time with
    more success. He ended up getting a degree in electrical engineering and then
    fell in love with computer graphics programming in grad school.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: After grad school, Wei got a job at Microsoft, working with other future Android
    people, including Steve Horowitz. Wei worked on the web browser for the WebTV
    and IPTV products, learning what it took to render web content on non-desktop
    screens. But eventually, he wanted to do something else. “Helping people watch
    more TV didn’t seem like a really noble thing.”
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: Steve put Wei in touch with Andy Rubin at Danger. Danger had not yet made the
    pivot to phones; they were still working on their “Nutter Butter” data exchange
    device, which didn’t interest Wei. “I wasn’t sure that was going to sell. The
    business model seemed a little weak. So I decided to go to AvantGo. I felt I had
    a more sure thing to succeed there.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 史蒂夫把魏介绍给了Danger公司的Andy Rubin。那时，Danger还没有转型做手机，他们仍在开发“坚果黄油”数据交换设备，而魏对这个项目并不感兴趣。“我不确定这个设备能否卖得出去。商业模式似乎有些薄弱。所以我决定去AvantGo。我觉得那里更有可能成功。”
- en: “It was not a very bright decision.”
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: “这不是一个非常明智的决定。”
- en: AvantGo went through an IPO shortly after Wei got there, in September of 2000,
    right around the time the dot-com boom was starting to implode. AvantGo suffered
    along with a lot of other startups. “My timing was just horrible. I caught the
    end of that boom and then everything crashed.” Also, the work and the culture
    were not quite what Wei wanted, so he looked elsewhere. “I reached out to Andy.
    After the VC funding, they decided to do a phone. That sounded more exciting,
    so I joined Danger in January of 2001.”
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: AvantGo在魏加入后不久，于2000年9月进行了首次公开募股（IPO），恰逢互联网泡沫开始破裂之时。AvantGo像许多其他初创公司一样，遭遇了困境。“我的时机真的很糟糕。我赶上了那个泡沫的末期，然后一切都崩溃了。”此外，工作和文化也不是魏所想要的，因此他开始寻找其他机会。“我联系了Andy。在风险投资的支持下，他们决定做手机。这听起来更令人兴奋，所以我在2001年1月加入了Danger。”
- en: At Danger, Wei was once again working on a web browser. Danger’s phones were
    very limited, so the model was different from the way that browsers ran on desktop
    computers (or on Android phones later). Danger ran a *headless*^([3](#c17-footnote-3))
    browser on the server. When a user navigated to a web page in the browser app
    on their Danger phone, that page would render on the server. The server would
    then reformat the page and send down a simplified version to the phone. This approach
    didn’t give users complete web capability on their phones, because it lacked the
    dynamic capabilities of web pages. But they had a web browsing experience that
    was close to what they were familiar with on desktop computers and far richer
    than they were used to on other phones.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在Danger，魏再次在做一个网页浏览器。Danger的手机功能非常有限，因此与浏览器在桌面电脑上运行的方式（或后来在Android手机上的运行方式）不同。Danger在服务器上运行一个*无头*^([3](#c17-footnote-3))浏览器。当用户在Danger手机上的浏览器应用中打开网页时，页面会在服务器上渲染。服务器然后会重新格式化该页面，并将简化版发送到手机上。这种方法没有为用户提供完整的网页功能，因为缺少网页的动态功能。但他们获得的网页浏览体验，接近他们在桌面电脑上熟悉的体验，远远比他们在其他手机上的体验要丰富。
- en: Wei spent four years at Danger, shipping browsers on a couple of Danger’s Hiptop
    devices. Eventually, he was ready for something new, hopefully at another startup.
    A friend from Danger, Chris DeSalvo, suggested he talk to Andy Rubin, who had
    since left Danger and was running a startup in stealth mode called Android. Wei
    IM’d Andy that evening. Andy asked if he wanted to join.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 魏在Danger工作了四年，为几款Danger的Hiptop设备发布了浏览器。最终，他准备迎接新的挑战，希望是另一家初创公司。来自Danger的朋友Chris
    DeSalvo建议他去找Andy Rubin，后者已经离开了Danger，正在经营一个名为Android的隐秘初创公司。魏当天晚上通过即时消息联系了Andy，Andy问他是否想加入。
- en: “He said, ‘Oh by the way, we’re being acquired by Google.’
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: “他说，‘哦，顺便说一下，我们要被Google收购了。’”
- en: “I had this sinking feeling, because I was looking for a startup. This was not
    a startup. I had to think about it. I didn’t know Google well at the time. I thought
    it was just a search company. I didn’t really understand the full spectrum of
    Google’s ambitions. But the excitement Andy conveyed still convinced me to join.”
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: “我当时有种沉重的感觉，因为我正在寻找一家初创公司。这并不是一家初创公司。我得好好考虑一下。当时我对Google并不熟悉。我以为它只是一个搜索公司。我当时并没有完全理解Google的雄心壮志。但Andy所传达的兴奋感仍然说服我加入了。”
- en: Wei started on the Android team at Google in September of 2005\. He was the
    second post-acquisition employee, after his friend Chris.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 魏于2005年9月加入了Google的Android团队，成为第二位加入的收购后员工，仅次于他的朋友Chris。
- en: Wei’s first project was . . . another browser. But there was a lot of work to
    do before he could write the browser application because Android, as a platform,
    didn’t really exist yet. “I downloaded the code base. I was a little surprised.
    How did you sell this company to Google for just a bunch of JavaScript?”
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 魏的第一个项目是……又一个浏览器。但在他能够编写浏览器应用之前，还有很多工作要做，因为作为一个平台，Android实际上还不存在。“我下载了代码库。我有点惊讶。你们怎么把这家公司卖给Google，只不过是一些JavaScript代码？”
- en: The first task was to pick a starting point for the browser. By the time Android
    began, there were multiple open source browser engines to start from, so Wei didn’t
    have to write the entire application from scratch. WebKit, which was based on
    another open source browser project, KHTML, was started by Apple and was the basis
    for Apple’s Safari browser. “I really liked the code base, so it was a no-brainer
    for me.”
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: 'Wei got to work building a browser based on the WebKit engine. Meanwhile, the
    browser team was growing, starting with management: Rich Miner.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: Rich Miner Builds the Team
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Rich Miner, who went on to help establish many of Android’s early corporate
    partnerships, knew business and he knew tech. He was introduced to programming
    in elementary school, when the class learned Fortran on punch cards. “All of that,
    to this day, has me amazed at how much memory we consume in our apps, and I think
    of what I was doing to squeeze modified code in place.”
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: Rich first showed his crossover skills of business + engineering when he was
    a freshman in college. He’d written a game for his Commodore 64 computer and proceeded
    to sell it with the help of some friends. “My roommates and I had a cassette^([4](#c17-footnote-4))
    duplication system in our dorm and made packages ourselves. I would go around
    and literally peddle them to local Commodore dealers. I took an ad out in one
    of the Commodore magazines and did email fulfillment.”
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: Rich had gone to the University of Massachusetts Lowell to study physics, but
    soon switched majors. “I lasted half a semester and realized I should be doing
    computer science. My grades were starting to reflect it too.”
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: During his undergrad years, Rich became a lead for the Center for Productivity
    Enhancement at the school, bringing in grants for millions of dollars from companies
    like Digital, IBM, and Apollo. He continued working in the lab during grad school,
    becoming a co-director while pursuing his PhD. One of the projects incubated at
    the lab led to Rich starting a company called Wildfire Communications in December
    of 1990\. Wildfire offered, among other things, a voice-based automated assistant
    that could route calls and take messages. Wildfire continued for nearly ten years,
    until it was acquired by Orange, the French telecom company. After the acquisition,
    Rich started Orange Labs in Cambridge, where he was the director of research and
    of a new venture fund.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: While at Orange, Rich helped launch the first Windows Mobile phone on Orange’s
    network. It wasn’t a positive experience because of the measure of control that
    Microsoft wanted over the resulting device. Rich came away from that project with
    the desire for an open platform for the mobile ecosystem, instead of having choices
    limited by platform providers.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: Rich Miner was a co-founder of Android, and part of the business team that helped
    get it acquired. But once at Google, he was looking for ways to help out the growing
    engineering team. He took on the job of managing the nascent browser effort.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Rich Miner 是 Android 的共同创始人，并且是帮助其被收购的商业团队成员。但在加入谷歌后，他开始寻找帮助日益壮大的工程团队的方法。他接受了管理初期浏览器项目的工作。
- en: Rich stayed in the Boston area after Android was acquired, far away from the
    rest of the team in Mountain View. Google only had a small sales office in downtown
    Boston, so Rich lobbied Google execs Eric Schmidt (CEO) and Alan Eustace (VP of
    engineering) to start an engineering site. It was a hard sell. “Eric had had a
    bad experience with the East Coast. Sun Microsystems, under his watch, had started
    an eng office here. But they put it way out in the periphery, outside of the city.
    I had to convince him that a place near the universities could attract the best
    talent. We could build a great office.”
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Rich 在 Android 被收购后留在波士顿地区，远离位于山景城的团队其他成员。谷歌在波士顿市中心只有一个小型的销售办公室，于是 Rich 向谷歌高层
    Eric Schmidt（首席执行官）和 Alan Eustace（工程副总裁）游说，希望能在波士顿开设一个工程师办事处。这是一个艰难的推销。“Eric 对东海岸的经历不太好。Sun
    Microsystems 在他掌舵时曾在这里开设过一个工程办公室，但他们将其设在了城市的边缘。我不得不说服他，靠近大学的地方能够吸引到最优秀的人才。我们可以建立一个伟大的办公室。”
- en: Rich convinced the execs, and Google started an office in downtown Cambridge
    down the street from MIT.^([5](#c17-footnote-5)) Rich hired the first handful
    of engineers there, including some for Android.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Rich 说服了谷歌高层，谷歌在剑桥市中心开设了一个办公室，就在 MIT 街对面。^([5](#c17-footnote-5)) Rich 在那里招聘了第一批工程师，其中包括一些
    Android 团队的成员。
- en: 'Rich hired a former employee of his from Orange Labs, Alan Blount, to join
    the browser team. Meanwhile, in Mountain View, Wei found another engineer for
    the team: Grace Kloba. Years before, when he was working at Adobe, Wei had convinced
    Grace to drop out of her PhD program and join him. This time, he persuaded her
    to leave Adobe.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Rich 招募了他在 Orange Labs 的前同事 Alan Blount 加入浏览器团队。与此同时，在山景城，Wei 为团队找到了另一位工程师：Grace
    Kloba。几年前，当他在 Adobe 工作时，Wei 曾说服 Grace 放弃她的博士学业并加入他。这次，他再次说服她离开 Adobe。
- en: Grace Kloba, WebView, and the Android Browser
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Grace Kloba、WebView 和 Android 浏览器
- en: Grace first learned programming from her mother, who was part of the first generation
    in China to receive computer education, in the late 1970s. Her mother moved quickly
    from student to teacher; after she took a three-month intensive programming course,
    she returned to university to run a computer lab and teach classes on programming
    languages. Along the way, Grace picked up elements of BASIC and Fortran programming.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Grace 从母亲那里第一次学会编程，她母亲是中国第一代接受计算机教育的人，时间大约在 1970 年代末。她的母亲从学生迅速转为教师；在参加了一个为期三个月的强化编程课程后，她回到大学负责计算机实验室并教授编程语言课程。在这个过程中，Grace
    学到了 BASIC 和 Fortran 编程的一些知识。
- en: Grace later chose her undergrad major based on the nice facilities that the
    image processing lab had. It worked out well, teaching her fundamentals of both
    computer science and electrical engineering. After college, she came to the US
    for a graduate program in computer graphics at Stanford. One of her classmates
    at Stanford was Wei, whom she’d gone to school with ten years earlier in China.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Grace 后来根据图像处理实验室的优良设施选择了她的本科专业。这一选择效果很好，帮助她打下了计算机科学和电气工程的基础。大学毕业后，她来到美国斯坦福大学攻读计算机图形学的研究生课程。她在斯坦福的同学中有
    Wei，而十年前他们曾在中国一起上学。
- en: Grace had passed her PhD qualification test and was searching for a thesis topic
    when Wei reached out to her about an opportunity at Adobe. Grace left grad school
    and joined Adobe for several years. Then, in 2006, Wei (now at Google) reached
    out again, and Grace interviewed and got an offer from Google.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Grace 通过了博士资格考试，正在寻找论文题目时，Wei 联系了她，提供了 Adobe 的机会。Grace 离开了研究生院，加入了 Adobe 工作了几年。之后，2006
    年，Wei（那时已在谷歌）再次联系了她，Grace 进行面试后收到了谷歌的工作邀请。
- en: Wei wanted Grace to work with him on the browser team, but he had to convince
    Steve. Android hired domain experts that had worked on embedded systems, mobile
    devices, and OS platforms, and Grace didn’t have that kind of experience. But
    Wei assured Steve that it would work out, and Grace joined the Android Browser
    team in March of 2006.^([6](#c17-footnote-6))
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: Wei 希望 Grace 和他一起加入浏览器团队，但他必须说服 Steve。Android 招募了在嵌入式系统、移动设备和操作系统平台方面有经验的领域专家，而
    Grace 并没有这种经验。但 Wei 向 Steve 保证一切都会顺利进行，Grace 于 2006 年 3 月加入了 Android 浏览器团队。^([6](#c17-footnote-6))
- en: One of the problems that Grace had to solve was making web content easier to
    view on the small screens that mobile phones had at the time. She had experience
    in laying out text content,^([7](#c17-footnote-7)) which came in handy when she
    enabled the browser to display text in a reasonable way on a small display, without
    the larger content area that web page authors envisioned when they wrote the original
    HTML content.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Grace需要解决的问题之一是如何在当时手机的小屏幕上更方便地查看网页内容。她有排版文本内容的经验，^([7](#c17-footnote-7)) 这在她使浏览器能够在小屏幕上以合理的方式显示文本时派上了用场，尽管网页作者在编写原始HTML内容时设想的是更大的内容区域。
- en: She worked on many other problems across the browser and the WebView component
    during her time on the team. There were, after all, only a handful of people supporting
    that large swath of functionality for the first several years of Android’s existence.
    Some of the things she implemented included multi-threaded support, improved network
    capabilities, and common browser UI elements like tabs.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在她团队的工作期间，她还解决了浏览器和WebView组件中的许多其他问题。毕竟，在Android初期的几年里，只有少数几个人支持这一大块功能。她实现的一些功能包括多线程支持、改进的网络能力，以及常见的浏览器UI元素，如标签页。
- en: There was also a last-minute project to get pinch-to-zoom^([8](#c17-footnote-8))
    working for the Nexus One launch in early January of 2010\. Grace returned from
    the holidays to find Andy Rubin asking how long it would take to implement that
    feature. He really wanted it for the upcoming launch, which was happening that
    month. Three weeks later, Grace delivered the feature, and the phone shipped with
    that new functionality.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一个最后时刻的项目，就是为了2010年1月初Nexus One发布，搞定捏合缩放功能的实现。Grace在假期归来时，发现Andy Rubin在问实现这个功能需要多长时间。他非常希望在即将发布的这款手机上看到这个功能，发布会就定在那个月。三周后，Grace交付了这个功能，手机也带着这项新功能发货了。
- en: Cary Clark and Browser Graphics
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Cary Clark和浏览器图形
- en: 'The Android team was mostly located in a single place, in Mountain View. But
    the browser team was a striking exception to that rule: Grace was in Mountain
    View, Wei was in Seattle, and Rich and Alan were in Boston. Then the Skia team,
    in North Carolina, joined the browser effort after they’d finished getting their
    graphics engine working.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: Android团队大部分成员都集中在山景城。但浏览器团队是一个显著的例外：Grace在山景城，Wei在西雅图，Rich和Alan在波士顿。然后，Skia团队在完成他们的图形引擎工作后，加入了浏览器团队的工作。
- en: The browser had different drawing requirements than the rest of the Android
    system. Rendering graphics was something the Skia team did well, so they took
    on the job of rendering the browser content. For example, Cary Clark spent significant
    time getting web pages that were intended for desktop computers to look and react
    reasonably on this new, very constrained type of device.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览器的绘图需求与Android系统的其余部分不同。渲染图形是Skia团队擅长的工作，因此他们负责渲染浏览器内容。例如，Cary Clark花了大量时间让原本为桌面计算机设计的网页，在这种新型且受限的设备上能够合理显示和响应。
- en: Cary had a long history in 2D graphics, and browsers, before he arrived on the
    Android team. But his background in programming went back even further. In 1968,
    when he was eleven years old, he got a Digi-Comp I for Christmas. This device
    was not a computer as we know it today, but used plastic and metal parts to perform
    simple boolean and math operations, like counting from zero to seven.^([9](#c17-footnote-9))
    Cary was so fascinated by this machine that he wore it out and asked for the same
    present the following Christmas.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: Cary在加入Android团队之前，已经有了长时间的2D图形和浏览器经验。但他的编程背景更早可以追溯到1968年，当时他11岁，圣诞节收到了一个Digi-Comp
    I。这个设备不像我们今天所知的计算机，而是通过塑料和金属部件来执行简单的布尔运算和数学运算，例如从零到七的计数。^([9](#c17-footnote-9))
    Cary对这个机器非常着迷，以至于把它用坏了，并在第二年圣诞节请求得到同样的礼物。
- en: He upgraded to a used Apple II in the late 70s while he was at college, spending
    so much time learning programming in his dorm room by taking apart Steve Wozniak’s
    BASIC implementation on the Apple II that he flunked out of college. He eventually
    came back and finished his degree, but in the meantime had started working in
    sales at a hobbyist computer store. When customers had questions about their Apple
    computers, Cary would call up the regional Apple tech support office for answers,
    but realized that the staff had no idea how things actually worked. So he applied
    for and got a job there. As part of his job in regional support, he would occasionally
    call Cupertino headquarters, but realized that the support staff there also didn’t
    know enough, so he complained loudly and eventually ended up moving to Cupertino
    and working in the main Apple tech support office.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: 'During the development of the Lisa^([10](#c17-footnote-10)) and the Mac, Cary
    moved into management, while still programming on the side. But eventually he
    chose to do software engineering full time: “I was a terrible manager.” He was
    at Apple until 1994, working on various things including leading the effort on
    QuickDraw GX,^([11](#c17-footnote-11)) which was a new 2D graphics library that
    was able to draw much faster than the Mac’s original QuickDraw library. The code
    name for this project was Skia, which Cary chose from a Greek word which referred
    to drawing a shadow on a wall. QuickDraw GX’s main functionality was drawing outlines
    and filling them in, so the code name fit.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: Cary eventually left Apple for other tech companies including WebTV, and Microsoft
    after the acquisition, where he worked with various future Android engineers.
    Cary worked on the WebTV browser, trying to make content intended for desktop
    computers look and interact in a reasonable way on a TV with a completely different
    input mechanism. He eventually moved out of Silicon Valley to Chapel Hill, North
    Carolina, where he worked remotely for Microsoft. There he started talking with
    Mike Reed, whom he knew from his time at Apple. Mike pulled Cary into Openwave,
    where Cary again worked on browser technology. Then Mike, who had left Openwave
    by then, called Cary again, bringing him into his new graphics startup named Skia,
    in honor of Cary’s code name for QuickDraw GX.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: When Cary started to work on the Android browser, there were a few problems
    that he had to solve. For example, input was complicated, figuring out how to
    turn keyboard, D-pad, trackball, and eventually touch events into interactions
    on a web page. Mike said, “The first thing that had a touchscreen still had a
    trackball and arrow keys. So we had to live in both worlds. It was somewhat harder
    on the browser, because there were two ways to set the current item of interest
    and focus. You could fling with your finger, or you could hit the down arrow a
    bunch of times. So there was some complication.”
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: One of those complications was how to navigate through the links on a web page.
    If the user was trying to navigate with the D-pad, there needed to be a way to
    go to the “next” link. So if they tapped the right button on the D-pad, the focus
    needed to shift to the next link to the right. But web pages don’t have a concept
    of links being positioned relative to each other, so it wasn’t obvious which link
    to focus on, based on that user input. Also, Cary had to devise a system for visually
    indicating that a particular link had focus, so the user knew which link would
    be clicked when they pressed the selection button.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: Smooth scrolling was another hurdle. Mike said, “Apple set the expectation that
    everybody smooth-scrolls. We were not smooth-scrolling the very first version
    with trackballs and arrows. When we would scroll twenty pixels, we just popped,
    just like every desktop on the planet. And now suddenly, you gotta smooth-scroll
    everything, whether it’s from a finger fling or not. That’s when we really pushed
    hard. Cary invented^([12](#c17-footnote-12)) the Picture^([13](#c17-footnote-13))
    object, which we didn’t have in Skia until then, which is a display list. The
    browser could go through the display lists from all of the slow Java single-threadedness,
    hand it over to a different thread, and then we could fling the picture, draw
    as fast as we can draw, and not have to talk to the browser.”
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: 'Another task was just getting real-world web pages to display reasonably on
    small devices with limited memory. Cary had worked through related issues on the
    WebTV product years earlier, getting web pages intended for desktop computers
    to show up reasonably on TV screens. But the problems he faced for the Android
    browser were new: there was just too much content on web pages, including “pages
    that were just insanely tall. Especially when they were fit to the width of the
    phone screen.”'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: Cary’s favorite example from that time was the Wikipedia page for *cheese*,^([14](#c17-footnote-14))which
    for some reason is a really, really long entry. “It was many hundreds of thousands
    of pixels tall. You couldn’t represent that number of pixels in our math system,
    so we had to figure out how to fix that.”
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: When that problem was addressed, another arose; even if the user could eventually
    see all of the content in a very long page, it took a very long time to scroll
    through it. So Cary implemented a system in the browser that would detect when
    the user was trying to scroll repeatedly and would pop up a magnifier object on
    the page, with a zoomed-out view of the entire page, allowing the user to quickly
    go to a specific location on the page.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
