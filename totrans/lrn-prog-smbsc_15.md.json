["```\n 1 ' Average1.sb\n 2 TextWindow.Write(\"Enter 4 scores. \")\n 3 TextWindow.WriteLine(\"Press <Enter> after each score.\")\n 4 s1 = TextWindow.ReadNumber()    ' Reads the 1st score\n 5 s2 = TextWindow.ReadNumber()    ' Reads the 2nd score\n 6 s3 = TextWindow.ReadNumber()    ' Reads the 3rd score\n 7 s4 = TextWindow.ReadNumber()    ' Reads the 4th score\n 8 avg = (s1 + s2 + s3 + s4) / 4   ' Calculates the average\n 9 TextWindow.Write(\"Numbers: \" + s1 + \", \" + s2 + \", \")\n10 TextWindow.WriteLine(s3 + \", \" + s4)\n11 TextWindow.WriteLine(\"Average: \" + avg)\n```", "```\nFor N = 1 To 10\n  score[N] = TextWindow.ReadNumber()\nEndFor\nTextWindow.WriteLine(score)\n```", "```\narrayName[index]\n```", "```\nscore[1] = 80\nscore[2] = 85\nscore[3] = 90\nTextWindow.WriteLine(score[1] + \", \" + score[2] + \", \" + score[3])\n```", "```\n80, 85, 90\n```", "```\nscore[1] = score[1] + 5\n```", "```\nscore[1] = score[1] * score[2]\n```", "```\nscore[1] = 80\nscore[2] = 85\nscore[3] = 90\nscore[4] = 95\n```", "```\nscore = \"1=80;2=85;3=90;4=95;\"\n```", "```\nindex=value;\n```", "```\nFor N = 1 To 10\n  scoobySnack[N] = 0\nEndFor\n```", "```\nFor N = 1 To 10\n  scoobySnack[N] = Math.GetRandomNumber(5)\nEndFor\n```", "```\nTextWindow.WriteLine(scoobySnack[N])\n```", "```\nFor N = 1 To 10\n  scoobySnack[N] = N * 8\nEndFor\n```", "```\nTextWindow.WriteLine(\"Enter 5 numbers. Press Enter after each one.\")\nFor N = 1 To 5\n  thunderCat[N] = TextWindow.ReadNumber()\nEndFor\n```", "```\nage[1] = 14\nage[2] = 15\nage[3] = 16\n```", "```\nTextWindow.WriteLine(age)\n```", "```\n1=14;2=15;3=16;\n```", "```\nFor N = 1 To 3\n  TextWindow.WriteLine(\"age[\" + N + \"] = \" + age[N])\nEndFor\n```", "```\nage[1] = 14\nage[2] = 15\nage[3] = 16\n```", "```\nsum = 0\nTextWindow.WriteLine(\"Enter the 10 amounts that were returned:\")\nFor N = 1 To 10\n  moneyReturned[N] = TextWindow.ReadNumber()\n  sum = sum + moneyReturned[N]\nEndFor\nFor N = 1 To 10\n  TextWindow.Write(\"$\" + moneyReturned[N])\n  TextWindow.WriteLine(\" rescued from robber \" + N)\nEndFor\nTextWindow.WriteLine(\"$\" + sum + \" was rescued by Super Here-O!\")\n```", "```\nfriends = \"1=10;2=30;3=5;4=10;5=15;6=8;7=1;8=23;9=6;10=11\"\nmax = friends[1]\nFor N = 2 To 10\n  If (friends[N] > max) Then  ' Nth element is larger than max\n    max = friends[N]          ' Update max to hold the new maximum\n  EndIf\nEndFor\nTextWindow.WriteLine(\"The most friends is \" + max + \".\")\n```", "```\nbook[1] = \"The Hobbit\"\nbook[2] = \"Little Women\"\nbook[3] = \"My Little Pony vs Hello Kitty\"\n```", "```\nbook = \"1=The Hobbit;2=Little Women;3=My Little Pony vs Hello Kitty\"\n```", "```\narr[1] = 1600\narr[2] = \"Pennsylvania Avenue NW\"\narr[3] = 20500\n```", "```\n 1 ' RandomSelect.sb\n 2 For N = 1 To 10  ' Puts the 10 balls in an array\n 3   ball[N] = N\n 4 EndFor\n 5\n 6 For N = 1 To 5                     ' Loops to select 5 balls\n 7   idx = Math.GetRandomNumber(10)   ' Gets random ball number\n 8   While (ball[idx] = 0)            ' Ball already selected\n 9     idx = Math.GetRandomNumber(10) ' Gets another number\n10   EndWhile\n11\n12   TextWindow.Write(ball[idx] + \", \") ' Displays selected ball\n13   ball[idx] = 0                      ' Marks it out (taken)\n14 EndFor\n15 TextWindow.WriteLine(\"\")\n```", "```\n5, 9, 10, 1, 2,\n```", "```\n 1 ' Magic8Ball.sb\n 2 ans[1] = \"It is certain. Like really, really certain.\"\n 3 ans[2] = \"It is decidedly so. By me. I decided.\"\n 4 ans[3] = \"Without a doubt. Maybe one doubt.\"\n 5 ans[4] = \"Yes, definitely. Isn't it obvious?\"\n 6 ans[5] = \"Very doubtful. The doubt is very full.\"\n 7 ans[6] = \"Maybe. Depends on the horse race.\"\n 8 ans[7] = \"No. Wait, yes. Wait, no. Yes, it's no.\"\n 9 ans[8] = \"Let me consult my Magic 8 Ball... It says yes.\"\n10 ans[9] = \"Outlook not so good. Restart Outlook.\"\n11 ans[10] = \"Try again. It's funny when you shake things.\"\n12\n13 While (\"True\")\n14   TextWindow.WriteLine(\"Ask me a yes-no question. Do it!\")\n15   ques = TextWindow.Read()\n16   num = Math.GetRandomNumber(10)\n17   TextWindow.WriteLine(ans[num])\n18   TextWindow.WriteLine(\"\")\n19 EndWhile\n```", "```\n 1 ' CatchApples_Incomplete.sb\n 2 GraphicsWindow.Title = \"Catch Apples\"\n 3 GraphicsWindow.CanResize = \"False\"\n 4 GraphicsWindow.Width = 480\n 5 GraphicsWindow.Height = 360\n 6 GraphicsWindow.FontSize = 14\n 7 GraphicsWindow.BrushColor = \"Black\"\n 8\n 9 path = Program.Directory\n10 GraphicsWindow.DrawImage(path + \"\\Background.png\", 0, 0)\n11\n12 msgID = Shapes.AddText(\"\")\n13 Shapes.Move(msgID, 240, 0)\n14\n15 MAX_APPLES = 5     ' Change this to have more apples\n16 AddApples()        ' Creates the apple array\n17\n18 cartImg = Shapes.AddImage(path + \"\\Cart.png\")  ' 100x80 pixels\n19\n20 numMissed = 0   ' Missed apples\n21 numCaught = 0   ' Caught apples\n22\n23 While (\"True\")\n24   Shapes.Move(cartImg, GraphicsWindow.MouseX - 50, 280)\n25   MoveApples()\n26   Program.Delay(5)\n27 EndWhile\n```", "```\n1 Sub AddApples\n2   For aplNum = 1 To MAX_APPLES\n3     apple[aplNum] = Shapes.AddImage(path + \"\\Apple.png\")\n4     scale =(3 + Math.GetRandomNumber(5)) / 10\n5     Shapes.Zoom(apple[aplNum], scale, scale)\n6     SetApplePosition()\n7   EndFor\n8 EndSub\n```", "```\n1 Sub SetApplePosition\n2   xPos = Math.GetRandomNumber(420)\n3   yPos = -Math.GetRandomNumber(500)\n4   Shapes.Move(apple[aplNum], xPos, yPos)\n5 EndSub\n```", "```\n 1 Sub MoveApples\n 2   For aplNum = 1 To MAX_APPLES\n 3     xPos = Shapes.GetLeft(apple[aplNum])\n 4     yPos = Shapes.GetTop (apple[aplNum])\n 5     Shapes.Move(apple[aplNum], xPos, yPos + 1)\n 6\n 7     CheckCatch()       ' Checks if the apple landed in the cart\n 8     If (gotIt = 1) Then\n 9       Sound.PlayClick()\n10       numCaught = numCaught + 1\n11       SetApplePosition()\n12     ElseIf (yPos > 320) Then\n13       numMissed = numMissed + 1\n14       SetApplePosition()\n15     EndIf\n16   EndFor\n17\n18   msg = \"Caught: \" + numCaught + \"   Missed: \" + numMissed\n19   Shapes.SetText(msgID, msg)\n20 EndSub\n```", "```\n 1 Sub CheckCatch\n 2   xApple = Shapes.GetLeft(apple[aplNum]) + 32 ' Center point\n 3   yApple = Shapes.GetTop(apple[aplNum]) + 32  ' Bottom point\n 4   xCart = Shapes.GetLeft(cartImg) + 50        ' Center point\n 5   yCart = Shapes.GetTop(cartImg) + 40         ' Around the center\n 6   xdiff = Math.Abs(xApple - xCart)\n 7   ydiff = Math.Abs(yApple - yCart)\n 8   gotIt = 0  ' Assumes we didn't get the apple\n 9   If ((xdiff < 20) And (ydiff < 20)) Then\n10     gotIt = 1 ' We got it\n11   EndIf\n12 EndSub\n```", "```\n    Num  Count  Probability\n    1    1640   0.164\n    2    1670   0.167\n    3    1638   0.1638\n    4    1684   0.1684\n    5    1680   0.168\n    6    1688   0.1688\n    ```"]