["```\npi@raspberrypi:- $ mkdir MP3\n```", "```\npi@raspberrypi:- $ cd MP3\n```", "```\n❶ import glob, time, pygame\n\n   from gpiozero import Button\n❷ from subprocess import check_call\n   from signal import pause\n   from pygame.locals import *\n\n❸ pygame.init()\n❹ pygame.display.set_mode((100, 100))\n\n❺ global the_song\n   global level\n   global songs_found\n   global number_of_songs\n```", "```\n❶ def shutdown():\n   ❷ check_call(['sudo', 'poweroff'])\n\n   ### Buttons for control ###\n❸ play_skip = Button(7)      # begin the music green\n   volume_up = Button(25)    # volume up blue\n   volume_down = Button(8)     # volume down yellow\n   shutdown_btn = Button(17, hold_time=2) # shutdown\n\n❹ the_song = 0 # as first song is in position 1\n❺ playing_songs = True\n\n```", "```\n❶ def find_mp3_files():\n       global songs_found\n       global number_of_songs\n\n  ❷ mp3_files_playlist = glob.glob('*.mp3')\n  ❸ songs_found = mp3_files_playlist\n  ❹ print (\"I have found the following song\", songs_found)\n  ❺ number_of_songs = len(songs_found)\n  ❻ print (\"there are\", number_of_songs, \"songs\")\n\n   #### set volume ###\n❼ level = 0.10\n❽ pygame.mixer.music.set_volume(level)\n```", "```\n   ### Main code for playing and changing songs ###\n❶ def play_mp3_songs():\n      global the_song\n      global level\n      global songs_found\n      global number_of_songs   \n   ❷ if playing_songs == True:   \n      ❸ while the_song < number_of_songs:\n            ### Play a song ###\n         ❹ pygame.mixer.music.load(songs_found[the_song])\n         ❺ pygame.mixer.music.play()\n            print (\"Playing Song\")\n         ❻ the_song = the_song + 1\n            print (\"the song number is\", str(the_song))\n\n         ❼ while pygame.mixer.music.get_busy():\n            ❽ pygame.time.Clock().tick(10)  # waits for song\n```", "```\n                ### Change the song ### \n             ❶ if play_skip.is_pressed:\n                ❷ time.sleep(0.5)\n                   print (\"End of Songs\")\n                ❸ pygame.mixer.music.stop()\n                ❹ break\n```", "```\n                ### Change volume up ###\n             ❶ if volume_up.is_pressed:\n                ❷ if level < 1:\n                   ❸ level = level + 0.10\n                      print (level)\n                   ❹ pygame.mixer.music.set_volume(level)\n                ❺ else:\n                      pass\n                      print (\"top volume\")\n```", "```\n                ### Change volume down ###\n             ❶ if volume_down.is_pressed:\n                ❷ if level > 0:\n                   ❸ level = level - 0.10\n                      print (level)\n                      pygame.mixer.music.set_volume(level)\n                ❹ else:\n                       pass\n                        print (\"bottom volume\")\n```", "```\n             ❶ shutdown_btn.when_held = shutdown\n\n ❷ else:\n    ❸ print (\"end of playlist\")\n```", "```\n   ### Main Program ###\n❶ find_mp3_files()\n❷ button.wait_for_press()\n❸ play_mp3_songs()\n```", "```\npi@raspberrypi:- $ sudo crontab –e\n```", "```\n@reboot sudo python3 /home/pi/MP3/music_box.py &\n```", "```\npi@raspberrypi:- $ crontab –e\n```", "```\npi@raspberrypi:- $ sudo raspi-config\n```", "```\npi@raspberrypi:- $ sudo nano .bashrc\n```"]