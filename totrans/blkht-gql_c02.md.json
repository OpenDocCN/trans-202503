["```\n# **sudo apt update -y**\n# **sudo apt upgrade -y**\n# **sudo apt dist-upgrade -y**\n```", "```\n#**sudo apt install -y curl**\n```", "```\n# **curl lab.blackhatgraphql.com**\nBlack Hat GraphQL â€“ Hello!\n```", "```\n# **cd ~/Desktop**\n# **ls -l altair***\n-rwxr--r-- 1 kali kali 88819862 altair_x86_64_linux.AppImage\n```", "```\n# **chmod u+x altair_x86_64_linux.AppImage**\n```", "```\n# **./altair_x86_64_linux.AppImage**\n```", "```\n**query {**\n **users {**\n **username**\n **}**\n**}**\n```", "```\n# **sudo apt install -y docker.io**\n```", "```\n# **sudo systemctl enable docker --now**\n```", "```\n# **sudo docker**\n\nManagement Commands:\n  builder     Manage builds\n  completion  generate the autocompletion script for the specified shell\n  config      Manage Docker configs\n  container   Manage containers\n  context     Manage contexts\n```", "```\n# **sudo apt install git -y**\n# **git --help**\n\nusage: git [--version] [--help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n`--snip--`\n```", "```\n# **cd ~**\n# **git clone -b blackhatgraphql https://github.com/dolevf/Damn-Vulnerable-GraphQL-Application.git**\n# **ls -l**\n\ndrwxr-xr-x 9 kali kali 4096 Damn-Vulnerable-GraphQL-Application\n```", "```\n# **cd Damn-Vulnerable-GraphQL-Application**\n# **sudo docker build -t dvga .**\n```", "```\n# **sudo docker run -t --rm -d --name dvga -p 5013:5013 -e WEB_HOST=0.0.0.0 dvga**\n```", "```\n# **sudo docker container ps**\n\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\n7b33cca84fc1  dvga   \"python3 app.py\"  About a minute ago\nUp  0.0.0.0:5013->5013/tcp, :::5013->5013/tcp   dvga\n```", "```\n**query {**\n **systemHealth**\n**}**\n```", "```\n# **sudo apt install burpsuite -y**\n```", "```\n{\n  __schema {\n    queryType {\n      fields {\n        name\n      }\n    }\n  }\n}\n```", "```\n# **cd ~**\n# **git clone https://github.com/nikitastupin/clairvoyance.git**\n# **cd clairvoyance**\n```", "```\n# **python3 -m clairvoyance -h**\n\nusage: __main__.py [-h] [-v] [-k] [-i <file>]\n[-o <file>] [-d <string>] [-H <header>] -w <file> url\n\npositional arguments:\n  url\n\noptional arguments:\n  -h, --help            show this help message and exit\n```", "```\n# **cd ~**\n# **git clone https://github.com/doyensec/inql.git**\n# **cd inql**\n# **sudo python3 setup.py install**\n```", "```\n# **inql -h**\n\nusage: inql [-h] [-t TARGET] [-f SCHEMA_JSON_FILE] [-k KEY]\n[-p PROXY] [--header HEADERS HEADERS] [-d] [--no-generate-html]\n[--no-generate-schema] [--no-generate-queries] [--generate-cycles]\n[--cycles-timeout CYCLES_TIMEOUT] [--cycles-streaming] [--generate-tsv]\n[--insecure] [-o OUTPUT_DIRECTORY]\n```", "```\n# **cd ~**\n# **git** **clone https://github.com/dolevf/graphw00f.git**\n# **cd graphw00f**\n```", "```\n# **python3 main.py --help**\n\nUsage: main.py -d -f -t http://example.com\n\nOptions:\n  -h, --help            show this help message and exit\n  -r, --noredirect      Do not follow redirections given by 3xx responses\n```", "```\n# **cd ~**\n# **git clone https://github.com/assetnote/batchql.git**\n```", "```\n# **cd batchql**\n# **python3 batch.py -h**\n\nusage: batch.py [-h] [-e ENDPOINT] [-v VARIABLE] [-P PREFLIGHT]\n[-q QUERY] [-w WORDLIST] [-H HEADER [HEADER ...]] [-p PROXY] [-s SIZE] [-o OUTPUT]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -e ENDPOINT, --endpoint ENDPOINT\n                        GraphQL Endpoint (i.e. https://example.com/graphql).\n```", "```\n# **sudo apt install nmap -y**\n```", "```\n# **cd ~**\n# **git clone https://github.com/dolevf/nmap-graphql-introspection-nse.git**\n# **cd nmap-graphql-introspection-nse**\n# **sudo cp graphql-introspection.nse /usr/share/nmap/scripts**\n```", "```\n# **nmap --script-help graphql-introspection.nse**\n\nStarting Nmap ( https://nmap.org )\n\ngraphql-introspection\nCategories: discovery fuzzer vuln intrusive\nhttps://nmap.org/nsedoc/scripts/graphql-introspection.html\nIdentifies webservers running GraphQL endpoints and attempts an\nexecution of an Introspection query for information gathering.\n\nThis script queries for common graphql endpoints and then sends an\nIntrospection query and inspects the result.\n\n  Resources\n  * https://graphql.org/learn/introspection/\n```", "```\n# **sudo apt install commix -y**\n# **commix -h**\n\nUsage: commix [option(s)]\n\nOptions:\n  -h, --help            Show help and exit.\n\n  General:\n    These options relate to general matters.\n\n    -v VERBOSE          Verbosity level (0-4, Default: 0).\n    --version           Show version number and exit.\n```", "```\n# **cd ~**\n# **wget \"https://gitlab.com/dee-see/graphql-path-enum/-/jobs/artifacts/v1.1/raw**\n**/target/release/graphql-path-enum?job=build-linux\"**\n**-O graphql-path-enum**\n# **chmod u+x graphql-path-enum**\n```", "```\n# **./graphql-path-enum -h**\n\ngraphql-path-enum\n\nUSAGE:\n    graphql-path-enum [FLAGS] --introspect-query-path <FILE_PATH> --type <TYPE_NAME>\n\nFLAGS:\n        --expand-connections    Expand connection nodes\n        (with pageInfo, edges, etc. edges), they are skipped by default.\n    -h, --help                  Prints help information\n        --include-mutations     Include paths from the Mutation node.\n        Off by default because this often adds a lot of noise.\n    -V, --version               Prints version information\n```", "```\n# **sudo apt install eyewitness -y**\n# **eyewitness -h**\n\nProtocols:\n  --web                 HTTP Screenshot using Selenium\n\nInput Options:\n  -f Filename           Line-separated file containing URLs to capture\n  -x Filename.xml       Nmap XML or .Nessus file\n  --single Single URL   Single URL/Host to capture\n  --no-dns\n```", "```\n# **sudo apt install python3-pip -y**\n# **git clone https://github.com/dolevf/graphql-cop.git**\n# **cd graphql-cop**\n# **pip3 install -r requirements.txt**\n# **python3 graphql-cop.py -h**\n\nOptions:\n  -h, --help            show this help message and exit\n  -t URL, --target=URL  target url with the path\n  -H HEADER, --header=HEADER\n                        Append Header to the request '{\"Authorization\":\n                        \"Bearer eyjt\"}'\n  -o FORMAT, --output=FORMAT\n                        json\n  -x, --proxy           Sends the request through http://127.0.0.1:8080 proxy\n  -v, --version         Print out the current version and exit.\n```", "```\n# **git clone https://github.com/nicholasaleks/CrackQL.git**\n# **cd CrackQL**\n# **pip3 install -r requirements.txt**\n# **python3 CrackQL.py -h**\n\nOptions:\n  -h, --help            show this help message and exit\n  -t URL, --target=URL  Target url with a path to the GraphQL endpoint\n  -q QUERY, --query=QUERY\n                        Input query or mutation operation with variable\n                        payload markers\n  -i INPUT_CSV, --input-csv=INPUT_CSV\n                        Path to a csv list of arguments (i.e. usernames,\n                        emails, ids, passwords, otp_tokens, etc.)\n```"]