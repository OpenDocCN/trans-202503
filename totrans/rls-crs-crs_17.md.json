["```\n$ **ssh -i** your_key_file **ubuntu@**your_instance_name\nWelcome to Ubuntu 14.04 LTS...\n*--snip--*\n```", "```\n$ **sudo apt-get install python-software-properties**\nReading package lists... Done\n*--snip--*\nSetting up python-software-properties (0.92.36) ...\n$ **sudo apt-add-repository ppa:brightbox/ruby-ng**\nNext generation Ubuntu packages for Ruby ...\n*--snip--*\n\nhttp://brightbox.com\nMore info: https://launchpad.net/~brightbox/+archive/ruby-ng\nPress [ENTER] to continue or ctrl-c to cancel adding it\n```", "```\n$ **sudo apt-get update**\nIgn http://us-east-1.ec2.archive.ubuntu.com trusty ...\n*--snip--*\nFetched 13.7 MB in 9s (1,471 kB/s)\nReading package lists... Done\n```", "```\n$ **sudo apt-get install ruby2.1 ruby2.1-dev**\nReading package lists... Done\n--*snip*-\nDo you want to continue? [Y/n]\n```", "```\n$ **ruby -v**\nruby 2.1.1p76 (2014-02-24 revision 45161) [x86_64-linux-gnu]\n```", "```\n$ **sudo apt-get install apache2**\nReading package lists... Done\n*--snip--*\nDo you want to continue? [Y/n]\n```", "```\n$ **sudo apt-key adv --keyserver keyserver.ubuntu.com \\**\n                   **--recv-keys 561F9B9CAC40B2F7**\nExecuting: gpg --ignore-time-conflict ...\n*--snip--*\ngpg:               imported: 1 (RSA: 1)\n```", "```\n$ **sudo nano /etc/apt/sources.list.d/passenger.list**\n```", "```\n$ **sudo apt-get update**\nIgn http://us-east-1.ec2.archive.ubuntu.com trusty InRelease\n*--snip--*\nReading package lists... Done\n```", "```\n$ **sudo apt-get install libapache2-mod-passenger**\nReading package lists... Done\n*--snip--*\nDo you want to continue? [Y/n]\n```", "```\n$ **sudo mkdir /var/www/social**\n$ **sudo chown ubuntu /var/www/social**\n$ **sudo chgrp ubuntu /var/www/social**\n```", "```\n$ **sudo apt-get install postgresql postgresql-contrib**\nReading package lists... Done\n--*snip*-\nDo you want to continue? [Y/n]\n```", "```\n$ **sudo -u postgres createuser --superuser ubuntu**\n```", "```\n$ **createdb ubuntu**\n$ **psql**\npsql (9.3.4)\nType \"help\" for help.\n\nubuntu=# help\nYou are using psql, the command-line interface to PostgreSQL.\nType: \\copyright for distribution terms\n      \\h for help with SQL commands\n      \\? for help with psql commands\n      \\g or terminate with semicolon to execute query\n      \\q to quit\nubuntu=#\n```", "```\n$ **createdb social_production**\n```", "```\n$ **sudo apt-get install build-essential git libpq-dev**\nReading package lists... Done\n*--snip--*\nDo you want to continue? [Y/n]\n```", "```\n$ **echo \"gem: --no-document\" >> ~/.gemrc**\n```", "```\n$ **sudo gem install rails**\nFetching: thread_safe-0.3.3.gem (100%)\nSuccessfully installed thread_safe-0.3.3\nFetching: minitest-5.3.3.gem (100%)\nSuccessfully installed minitest-5.3.3\n*--snip--*\n```", "```\n$ **sudo gem install pg**\nBuilding native extensions. This could take a while...\nSuccessfully installed pg-0.17.1\n1 gem installed\n```", "```\n$ **sudo gem install therubyracer**\nBuilding native extensions. This could take a while...\nSuccessfully installed therubyracer-0.12.1\n1 gem installed\n```", "```\n  *--snip--*\n\n  # Use sqlite3 as the database for Active Record\n1 gem 'sqlite3'**, group: [:development, :test]**\n\n  *--snip--*\n\n  # See https://github.com/sstephenson/execjs#readme...\n2 **gem 'therubyracer', platforms: :ruby, group: :production**\n\n  *--snip--*\n\n  # Use Capistrano for deployment\n3 **gem 'capistrano-rails', group: :development**\n\n4 **# Use PostgreSQL in production**\n  **gem 'pg', group: :production**\n\n  # Use debugger\n  gem 'byebug', group: [:development, :test]\n```", "```\n$ **bin/bundle install --binstubs --without production**\nFetching gem metadata from https://rubygems.org/........\nFetching additional metadata from https://rubygems.org/..\nResolving dependencies...\n--*snip*--\n```", "```\n$ **bin/cap install**\nmkdir -p config/deploy\ncreate config/deploy.rb\ncreate config/deploy/staging.rb\ncreate config/deploy/production.rb\nmkdir -p lib/capistrano/tasks\nCapified\n```", "```\n  # Load DSL and Setup Up Stages\n  require 'capistrano/setup'\n\n  # Includes default deployment tasks\n  require 'capistrano/deploy'\n\n➊ **# Include all Rails tasks**\n  **require 'capistrano/rails'**\n\n*--snip--*\n```", "```\n  # config valid only for Capistrano 3.1\n  lock '3.2.1'\n\n➊ **set :application, 'social'**\n  **set :repo_url, 'https://github.com/**yourname**/social.git'**\n\n  # Default branch is :master\n  # ask :branch, proc { `git rev-parse --abbrev-ref HEAD`.chomp }.call\n\n  # Default deploy_to directory is /var/www/my_app\n➋ **set :deploy_to, '/var/www/social'**\n\n  *--snip--*\n\n  namespace :deploy do\n  desc 'Restart application'\n  task :restart do\n    on roles(:app), in: :sequence, wait: 5 do\n      # Your restart mechanism here, for example:\n➌     **execute :touch, release_path.join('tmp/restart.txt')**\n    end\n  end\n\n  after :publishing, :restart\n\n  *--snip--*\n\nend\n```", "```\n   **server '**your_instance_name**',**\n➊            **user: 'ubuntu', roles: %w{web app db}**\n➋  **set :ssh_options, {**\n        **keys: '**your_key_file\n   **' }**\n```", "```\n  *--snip--*\n\n  production:\n    **adapter: postgresql**\n    **encoding: unicode**\n➊   **database: social_production**\n    **pool: 5**\n➋   **username: ubuntu**\n➌   **password:**\n```", "```\n  *--snip--*\n  development:\n    secret_key_base: 242ba1d...\n\n  test:\n    secret_key_base: 92d581d...\n\n➊ # Do not keep production secrets in the repository,\n  # instead read values from the environment.\n  production:\n➋   secret_key_base: <%= ENV[\"SECRET_KEY_BASE\"] %>\n```", "```\n$ **bin/rake secret**\na3467dbd655679241a41d44b8245...\n```", "```\n$ **git init**\nInitialized empty Git repository in ...\n$ **git add .**\n$ **git commit -m \"Initial commit\"**\n[master (root-commit) 1928798] Initial commit\n123 files changed, 1826 insertions(+)\n*--snip--*\n```", "```\n$ **git remote add origin https://github.com/**yourname**/social.git**\n$ **git push -u origin master**\nCounting objects: 141, done.\n--*snip*--\nBranch master set up to track remote branch master from origin.\n```", "```\n$ **bin/cap production deploy:check**\n INFO [722a06ac] Running /usr/bin/env ...\n*--snip--*\n INFO [5d3c6d3e] Finished ... exit status 0 (successful).\n```", "```\n$ **bin/cap production deploy**\n INFO [e6d54911] Running /usr/bin/env ...\n*--snip--*\n INFO [3cb59e26] Finished ... exit status 0 (successful).\n```", "```\n$ **sudo nano /etc/apache2/sites-available/social.conf**\n```", "```\n➊ **<VirtualHost *:80>**\n➋   **ServerName** ***your_instance_name***\n➌   **DocumentRoot /var/www/social/current/public**\n➍   **SetEnv SECRET_KEY_BASE** ***a3467dbd65...***\n➎   **<Directory /var/www/social/current/public>**\n      **Allow from all**\n      **Options -MultiViews**\n    **</Directory>**\n  **</VirtualHost>**\n```", "```\n$ **sudo a2dissite 000-default**\nSite 000-default disabled.\nTo activate the new configuration, you need to run:\n  service apache2 reload\n$ **sudo a2ensite social**\nEnabling site social.\nTo activate the new configuration, you need to run:\n  service apache2 reload\n```", "```\n$ **sudo service apache2 reload**\n * Reloading web server apache2\n *\n```"]