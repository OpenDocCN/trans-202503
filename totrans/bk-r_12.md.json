["```\nif(condition){\n    do any code here\n}\n```", "```\nR> a <- 3\nR> mynumber <- 4\n```", "```\nif(a<=mynumber){\n    a <- a^2\n}\n```", "```\nR> if(a<=mynumber){\n+   a <- a^2\n+ }\n```", "```\nR> a\n[1] 9\n```", "```\nR> myvec <- c(2.73,5.40,2.15,5.29,1.36,2.16,1.41,6.97,7.99,9.52)\nR> myvec\n [1] 2.73 5.40 2.15 5.29 1.36 2.16 1.41 6.97 7.99 9.52\nR> mymat <- matrix(c(2,0,1,2,3,0,3,0,1,1),5,2)\nR> mymat\n     [,1] [,2]\n[1,]    2    0\n[2,]    0    3\n[3,]    1    0\n[4,]    2    1\n[5,]    3    1\n```", "```\nif(any((myvec-1)>9)||matrix(myvec,2,5)[2,1]<=6){\n    cat(\"Condition satisfied --\\n\")\n    new.myvec <- myvec\n    new.myvec[seq(1,9,2)] <- NA\n    mylist <- list(aa=new.myvec,bb=mymat+0.5)\n    cat(\"-- a list with\",length(mylist),\"members now exists.\")\n}\n```", "```\nCondition satisfied --\n-- a list with 2 members now exists.\n```", "```\nR> mylist\n$aa\n [1]   NA 5.40   NA 5.29   NA 2.16   NA 6.97   NA 9.52\n\n$bb\n     [,1] [,2]\n[1,]  2.5  0.5\n[2,]  0.5  3.5\n[3,]  1.5  0.5\n[4,]  2.5  1.5\n[5,]  3.5  1.5\n```", "```\nR> any((myvec-1)>9)||matrix(myvec,2,5)[2,1]<=6\n[1] TRUE\n```", "```\nif(condition){\n    do any code in here if condition is TRUE\n} else {\n    do any code in here if condition is FALSE\n}\n```", "```\nR> a <- 3\nR> mynumber <- 4\n```", "```\nif(a<=mynumber){\n    cat(\"Condition was\",a<=mynumber)\n    a <- a^2\n} else {\n    cat(\"Condition was\",a<=mynumber)\n    a <- a-3.5\n}\na\n```", "```\nCondition was TRUE\nR> a\n[1] 9\n```", "```\nCondition was FALSE\nR> a\n[1] 5.5\n```", "```\nR> if(c(FALSE,TRUE,FALSE,TRUE,TRUE)){}\nWarning message:\nIn if (c(FALSE, TRUE, FALSE, TRUE, TRUE)) { :\n  the condition has length > 1 and only the first element will be used\n```", "```\nR> x <- 5\nR> y <- -5:5\nR> y\n [1] -5 -4 -3 -2 -1 0 1 2 3 4 5\n```", "```\nR> y==0\n [1] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE\n```", "```\nR> result <- ifelse(test=y==0,yes=NA,no=x/y)\nR> result\n [1] -1.000000 -1.250000 -1.666667 -2.500000 -5.000000 NA 5.000000 2.500000\n [9]  1.666667  1.250000  1.000000\n```", "```\n    vec1 <- c(2,1,1,3,2,1,0)\n    vec2 <- c(3,8,2,2,0,0,0)\n    ```", "```\n        if((vec1[1]+vec2[2])==10){ cat(\"Print me!\") }\n        ```", "```\n        if(vec1[1]>=2&&vec2[1]>=2){ cat(\"Print me!\") }\n        ```", "```\n        if(all((vec2-vec1)[c(2,6)]<7)){ cat(\"Print me!\") }\n        ```", "```\n        if(!is.na(vec2[3])){ cat(\"Print me!\") }\n        ```", "```\n        mymat <- matrix(as.character(1:16),4,4)\n        ```", "```\n        mymat <- matrix(c(\"DANDELION\",\"Hyacinthus\",\"Gerbera\",\n                          \"MARIGOLD\",\"geranium\",\"ligularia\",\n                          \"Pachysandra\",\"SNAPDRAGON\",\"GLADIOLUS\"),3,3)\n        ```", "```\n        mymat <- matrix(c(\"GREAT\",\"exercises\",\"right\",\"here\"),2,2,\n                          byrow=T)\n        ```", "```\nif(a<=mynumber){\n    cat(\"First condition was TRUE\\n\")\n    a <- a^2\n    if(mynumber>3){\n        cat(\"Second condition was TRUE\")\n        b <- seq(1,a,length=mynumber)\n    } else {\n        cat(\"Second condition was FALSE\")\n        b <- a*mynumber\n    }\n} else {\n    cat(\"First condition was FALSE\\n\")\n    a <- a-3.5\n    if(mynumber>=4){\n        cat(\"Second condition was TRUE\")\n        b <- a^(3-mynumber)\n    } else {\n        cat(\"Second condition was FALSE\")\n        b <- rep(a+mynumber,times=3)\n    }\n}\na\nb\n```", "```\nFirst condition was TRUE\nSecond condition was TRUE\nR> a\n[1] 9\nR> b\n[1] 1.000000 3.666667 6.333333 9.000000\n```", "```\nR> a <- 6\nR> mynumber <- 4\n```", "```\nFirst condition was FALSE\nSecond condition was TRUE\nR> a\n[1] 2.5\nR> b\n[1] 0.4\n```", "```\nif(a<=mynumber && mynumber>3){\n    cat(\"Same as 'first condition TRUE and second TRUE'\")\n    a <- a^2\n    b <- seq(1,a,length=mynumber)\n} else if(a<=mynumber && mynumber<=3){\n    cat(\"Same as 'first condition TRUE and second FALSE'\")\n    a <- a^2\n    b <- a*mynumber\n} else if(mynumber>=4){\n    cat(\"Same as 'first condition FALSE and second TRUE'\")\n    a <- a-3.5\n    b <- a^(3-mynumber)\n} else {\n    cat(\"Same as 'first condition FALSE and second FALSE'\")\n    a <- a-3.5\n    b <- rep(a+mynumber,times=3)\n}\na\nb\n```", "```\nSame as 'first condition TRUE and second TRUE'\nR> a\n[1] 9\nR> b\n[1] 1.000000 3.666667 6.333333 9.000000\n```", "```\nSame as 'first condition FALSE and second TRUE'\nR> a\n[1] 2.5\nR> b\n[1] 0.4\n```", "```\nif(mystring==\"Homer\"){\n    foo <- 12\n} else if(mystring==\"Marge\"){\n    foo <- 34\n} else if(mystring==\"Bart\"){\n    foo <- 56\n} else if(mystring==\"Lisa\"){\n    foo <- 78\n} else if(mystring==\"Maggie\"){\n    foo <- 90\n} else {\n    foo <- NA\n}\n```", "```\nR> mystring <- \"Lisa\"\n```", "```\nR> foo\n[1] 78\n```", "```\nR> mystring <- \"Peter\"\n```", "```\nR> foo\n[1] NA\n```", "```\nR> mystring <- \"Lisa\"\nR> foo <- switch(EXPR=mystring,Homer=12,Marge=34,Bart=56,Lisa=78,Maggie=90,NA)\nR> foo\n[1] 78\n```", "```\nR> mystring <- \"Peter\"\nR> foo <- switch(EXPR=mystring,Homer=12,Marge=34,Bart=56,Lisa=78,Maggie=90,NA)\nR> foo\n[1] NA\n```", "```\nR> mynum <- 3\nR> foo <- switch(mynum,12,34,56,78,NA)\nR> foo\n[1] 56\n```", "```\nR> mynum <- 0\nR> foo <- switch(mynum,12,34,56,78,NA)\nR> foo\nNULL\n```", "```\n        lowdose <- 12.5\n        meddose <- 25.3\n        highdose <- 58.1\n        doselevel <- factor(c(\"Low\",\"High\",\"High\",\"High\",\"Low\",\"Med\",\n                              \"Med\"),levels=c(\"Low\",\"Med\",\"High\"))\n        ```", "```\n        R> dosage\n        [1] 10.0 60.0 60.0 60.0 10.0 25.3 25.3\n        ```", "```\n        doselevel <- factor(c(\"Low\",\"Low\",\"Low\",\"Med\",\"Low\",\"Med\",\n                              \"Med\"),levels=c(\"Low\",\"Med\",\"High\"))\n        ```", "```\n        R> dosage\n        [1] 25.0 25.0 25.0 83.4 25.0 83.4 83.4\n        ```", "```\n        R> doselevel\n        [1] Small Small Small Large Small Large Large\n        Levels: Small Large\n        ```", "```\n        lowdose <- 9\n        meddose <- 49\n        highdose <- 61\n        doselevel <- factor(c(\"Low\",\"Med\",\"Med\"),\n                            levels=c(\"Low\",\"Med\",\"High\"))\n        ```", "```\n        R> dosage\n        [1] 9 49 49\n        ```", "```\n        R> doselevel\n        [1] Small Large Large\n        Levels: Small Large\n        ```", "```\n        R> dosage\n        [1] 4.5 91.5 91.5 91.5 4.5 26.0 26.0\n        ```", "```\nfor(loopindex in loopvector){\n    do any code in here\n}\n```", "```\nfor(myitem in 5:7){\n    cat(\"--BRACED AREA BEGINS--\\n\")\n    cat(\"the current item is\",myitem,\"\\n\")\n    cat(\"--BRACED AREA ENDS--\\n\\n\")\n}\n```", "```\n--BRACED AREA BEGINS--\nthe current item is 5\n--BRACED AREA ENDS--\n\n--BRACED AREA BEGINS--\nthe current item is 6\n--BRACED AREA ENDS--\n\n--BRACED AREA BEGINS--\nthe current item is 7\n--BRACED AREA ENDS--\n```", "```\nR> counter <- 0\nR> for(myitem in 5:7){\n+   counter <- counter+1\n+   cat(\"The item in run\",counter,\"is\",myitem,\"\\n\")\n+ }\nThe item in run 1 is 5\nThe item in run 2 is 6\nThe item in run 3 is 7\n```", "```\nR> myvec <- c(0.4,1.1,0.34,0.55)\nR> for(i in myvec){\n+   print(2*i)\n+ }\n[1] 0.8\n[1] 2.2\n[1] 0.68\n[1] 1.1\nR> for(i in 1:length(myvec)){\n+   print(2*myvec[i])\n+ }\n[1] 0.8\n[1] 2.2\n[1] 0.68\n[1] 1.1\n```", "```\nR> foo <- list(aa=c(3.4,1),bb=matrix(1:4,2,2),cc=matrix(c(T,T,F,T,F,F),3,2),\n               dd=\"string here\",ee=matrix(c(\"red\",\"green\",\"blue\",\"yellow\")))\nR> foo\n$aa\n[1] 3.4 1.0\n\n$bb\n     [,1] [,2]\n[1,]    1    3\n[2,]    2    4\n\n$cc\n      [,1]  [,2]\n[1,]  TRUE  TRUE\n[2,]  TRUE FALSE\n[3,] FALSE FALSE\n\n$dd\n[1] \"string here\"\n\n$ee\n     [,1]\n[1,] \"red\"\n[2,] \"green\"\n[3,] \"blue\"\n[4,] \"yellow\"\n```", "```\nR> name <- names(foo)\nR> name\n[1] \"aa\" \"bb\" \"cc\" \"dd\" \"ee\"\nR> is.mat <- rep(NA,length(foo))\nR> is.mat\n[1] NA NA NA NA NA\nR> nr <- is.mat\nR> nc <- is.mat\nR> data.type <- is.mat\n```", "```\nfor(i in 1:length(foo)){\n    member <- foo[[i]]\n    if(is.matrix(member)){\n        is.mat[i] <- \"Yes\"\n        nr[i] <- nrow(member)\n        nc[i] <- ncol(member)\n        data.type[i] <- class(as.vector(member))\n    } else {\n        is.mat[i] <- \"No\"\n    }\n}\nbar <- data.frame(name,is.mat,nr,nc,data.type,stringsAsFactors=FALSE)\n```", "```\nR> bar\n  name is.mat nr nc data.type\n1   aa     No NA NA      <NA>\n2   bb    Yes  2  2   integer\n3   cc    Yes  3  2   logical\n4   dd     No NA NA      <NA>\n5   ee    Yes  4  1 character\n```", "```\nR> loopvec1 <- 5:7\nR> loopvec1\n[1] 5 6 7\nR> loopvec2 <- 9:6\nR> loopvec2\n[1] 9 8 7 6\nR> foo <- matrix(NA,length(loopvec1),length(loopvec2))\nR> foo\n     [,1] [,2] [,3] [,4]\n[1,]   NA   NA   NA   NA\n[2,]   NA   NA   NA   NA\n[3,]   NA   NA   NA   NA\n```", "```\nR> for(i in 1:length(loopvec1)){\n+   for(j in 1:length(loopvec2)){\n+       foo[i,j] <- loopvec1[i]*loopvec2[j]\n+   }\n+ }\nR> foo\n     [,1] [,2] [,3] [,4]\n[1,]   45   40   35   30\n[2,]   54   48   42   36\n[3,]   63   56   49   42\n```", "```\nR> foo <- matrix(NA,length(loopvec1),length(loopvec2))\nR> foo\n     [,1] [,2] [,3] [,4]\n[1,]   NA   NA   NA   NA\n[2,]   NA   NA   NA   NA\n[3,]   NA   NA   NA   NA\nR> for(i in 1:length(loopvec1)){\n+   for(j in 1:i){\n+       foo[i,j] <- loopvec1[i]+loopvec2[j]\n+   }\n+ }\nR> foo\n     [,1] [,2] [,3] [,4]\n[1,]   14   NA   NA   NA\n[2,]   15   14   NA   NA\n[3,]   16   15   14   NA\n```", "```\n    switch(EXPR=mystring,Homer=12,Marge=34,Bart=56,Lisa=78,Maggie=90,\n           NA)\n    ```", "```\n    c(\"Peter\",\"Homer\",\"Lois\",\"Stewie\",\"Maggie\",\"Bart\")\n    ```", "```\n        mylist <- list(aa=c(3.4,1),bb=matrix(1:4,2,2),\n                       cc=matrix(c(T,T,F,T,F,F),3,2),dd=\"string here\",\n                       ee=list(c(\"hello\",\"you\"),matrix(c(\"hello\",\n                                                         \"there\"))),\n                       ff=matrix(c(\"red\",\"green\",\"blue\",\"yellow\")))\n        ```", "```\n        mylist <- list(\"tricked you\",as.vector(matrix(1:6,3,2)))\n        ```", "```\n        mylist <- list(list(1,2,3),list(c(3,2),2),\n                       list(c(1,2),matrix(c(1,2))),\n                       rbind(1:10,100:91))\n        ```", "```\nwhile(loopcondition){\n    do any code in here\n}\n```", "```\nmyval <- 5\nwhile(myval<10){\n    myval <- myval+1\n    cat(\"\\n'myval' is now\",myval,\"\\n\")\n    cat(\"'mycondition' is now\",myval<10,\"\\n\")\n}\n```", "```\n'myval' is now 6\n'mycondition' is now TRUE\n\n'myval' is now 7\n'mycondition' is now TRUE\n\n'myval' is now 8\n'mycondition' is now TRUE\n\n'myval' is now 9\n'mycondition' is now TRUE\n\n'myval' is now 10\n'mycondition' is now FALSE\n```", "```\nmylist <- list()\ncounter <- 1\nmynumbers <- c(4,5,1,2,6,2,4,6,6,2)\nmycondition <- mynumbers[counter]<=5\nwhile(mycondition){\n    mylist[[counter]] <- diag(mynumbers[counter])\n    counter <- counter+1\n    if(counter<=length(mynumbers)){\n        mycondition <- mynumbers[counter]<=5\n    } else {\n        mycondition <- FALSE\n    }\n}\n```", "```\nR> mylist\n[[1]]\n     [,1] [,2] [,3] [,4]\n[1,]    1    0    0    0\n[2,]    0    1    0    0\n[3,]    0    0    1    0\n[4,]    0    0    0    1\n\n[[2]]\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    0    0    0    0\n[2,]    0    1    0    0    0\n[3,]    0    0    1    0    0\n[4,]    0    0    0    1    0\n[5,]    0    0    0    0    1\n\n[[3]]\n     [,1]\n[1,]    1\n[[4]]\n     [,1] [,2]\n[1,]    1    0\n[2,]    0    1\n```", "```\n    mystring <- \"R fever\"\n    index <- 1\n    ecount <- 0\n    result <- mystring\n    while(ecount<2 && index<=nchar(mystring)){\n        # several omitted operations #\n    }\n    result\n    ```", "```\nR> foo <- matrix(1:12,4,3)\nR> foo\n     [,1] [,2] [,3]\n[1,]    1    5    9\n[2,]    2    6   10\n[3,]    3    7   11\n[4,]    4    8   12\n```", "```\nR> sum(foo)\n[1] 78\n```", "```\nR> row.totals <- rep(NA,times=nrow(foo))\nR> for(i in 1:nrow(foo)){\n+   row.totals[i] <- sum(foo[i,])\n+ }\nR> row.totals\n[1] 15 18 21 24\n```", "```\nR> row.totals2 <- apply(X=foo,MARGIN=1,FUN=sum)\nR> row.totals2\n[1] 15 18 21 24\n```", "```\nR> apply(X=foo,MARGIN=2,FUN=sum)\n[1] 10 26 42\n```", "```\nR> bar <- array(1:18,dim=c(3,3,2))\nR> bar\n, , 1\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n\n, , 2\n\n     [,1] [,2] [,3]\n[1,]   10   13   16\n[2,]   11   14   17\n[3,]   12   15   18\n```", "```\nR> apply(bar,3,FUN=diag)\n     [,1] [,2]\n[1,]    1   10\n[2,]    5   14\n[3,]    9   18\n```", "```\nR> dia.url <- \"http://www.amstat.org/publications/jse/v9n2/4cdata.txt\"\nR> diamonds <- read.table(dia.url)\nR> names(diamonds) <- c(\"Carat\",\"Color\",\"Clarity\",\"Cert\",\"Price\")\nR> diamonds[1:5,]\n Carat Color Clarity Cert Price\n1 0.30     D     VS2  GIA  1302\n2 0.30     E     VS1  GIA  1510\n3 0.30     G    VVS1  GIA  1510\n4 0.30     G     VS1  GIA  1260\n5 0.31     D     VS1  GIA  1641\n```", "```\nR> tapply(diamonds$Price,INDEX=diamonds$Color,FUN=sum)\n     D      E      F      G      H      I\n113598 242349 392485 287702 302866 207001\n```", "```\nR> baz <- list(aa=c(3.4,1),bb=matrix(1:4,2,2),cc=matrix(c(T,T,F,T,F,F),3,2),\n               dd=\"string here\",ee=matrix(c(\"red\",\"green\",\"blue\",\"yellow\")))\n```", "```\nR> lapply(baz,FUN=is.matrix)\n$aa\n[1] FALSE\n\n$bb\n[1] TRUE\n\n$cc\n[1] TRUE\n\n$dd\n[1] FALSE\n\n$ee\n[1] TRUE\n```", "```\nR> sapply(baz,FUN=is.matrix)\n   aa    bb    cc    dd    ee\nFALSE  TRUE  TRUE FALSE  TRUE\n```", "```\nR> apply(foo,1,sort,decreasing=TRUE)\n     [,1] [,2] [,3] [,4]\n[1,]    9   10   11   12\n[2,]    5    6    7    8\n[3,]    1    2    3    4\n```", "```\n    matlist <- list(matrix(c(T,F,T,T),2,2),\n                    matrix(c(\"a\",\"c\",\"b\",\"z\",\"p\",\"q\"),3,2),\n                    matrix(1:8,2,4))\n    matlist\n    for(i in 1:length(matlist)){\n        matlist[[i]] <- t(matlist[[i]])\n    }\n    matlist\n    ```", "```\n    R> qux <- array(96:1,dim=c(4,4,2,3))\n    ```", "```\n             [,1] [,2] [,3]\n        [1,]   80   48   16\n        [2,]   75   43   11\n        [3,]   70   38    6\n        [4,]   65   33    1\n        ```", "```\n        [1] 12 6\n        ```", "```\nR> foo <- 5\nR> bar <- c(2,3,1.1,4,0,4.1,3)\n```", "```\nR> loop1.result <- rep(NA,length(bar))\nR> loop1.result\n[1] NA NA NA NA NA NA NA\nR> for(i in 1:length(bar)){\n+   temp <- foo/bar[i]\n+   if(is.finite(temp)){\n+       loop1.result[i] <- temp\n+   } else {\n+       break\n+   }\n+ }\nR> loop1.result\n[1] 2.500000 1.666667 4.545455 1.250000     NA     NA     NA\n```", "```\nR> loop2.result <- rep(NA,length(bar))\nR> loop2.result\n[1] NA NA NA NA NA NA NA\nR> for(i in 1:length(bar)){\n+   if(bar[i]==0){\n+       next\n+   }\n+   loop2.result[i] <- foo/bar[i]\n+ }\nR> loop2.result\n[1] 2.500000 1.666667 4.545455 1.250000       NA 1.219512 1.666667\n```", "```\nR> loopvec1 <- 5:7\nR> loopvec1\n[1] 5 6 7\nR> loopvec2 <- 9:6\nR> loopvec2\n[1] 9 8 7 6\nR> baz <- matrix(NA,length(loopvec1),length(loopvec2))\nR> baz\n     [,1] [,2] [,3] [,4]\n[1,]   NA   NA   NA   NA\n[2,]   NA   NA   NA   NA\n[3,]   NA   NA   NA   NA\nR> for(i in 1:length(loopvec1)){\n+   for(j in 1:length(loopvec2)){\n+       temp <- loopvec1[i]*loopvec2[j]\n+       if(temp>=54){\n+           next\n+       }\n+       baz[i,j] <- temp\n+   }\n+ }\nR> baz\n     [,1] [,2] [,3] [,4]\n[1,]   45   40   35   30\n[2,]   NA   48   42   36\n[3,]   NA   NA   49   42\n```", "```\nrepeat{\n    do any code in here\n}\n```", "```\nR> fib.a <- 1\nR> fib.b <- 1\nR> repeat{\n+   temp <- fib.a+fib.b\n+   fib.a <- fib.b\n+   fib.b <- temp\n+   cat(fib.b,\", \",sep=\"\")\n+   if(fib.b>150){\n+       cat(\"BREAK NOW...\\n\")\n+       break\n+   }\n+ }\n2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, BREAK NOW...\n```", "```\n    foo <- 5\n    bar <- c(2,3,1.1,4,0,4.1,3)\n    ```", "```\n    mynumbers <- c(4,5,1,2,6,2,4,6,6,2)\n    ```", "```\n        matlist1 <- list(matrix(1:4,2,2),matrix(1:4),matrix(1:8,4,2))\n        matlist2 <- matlist1\n        ```", "```\n        matlist1 <- list(matrix(1:4,2,2),matrix(2:5,2,2),\n                         matrix(1:16,4,2))\n        matlist2 <- list(matrix(1:8,2,4),matrix(10:7,2,2),\n                         matrix(9:2,4,2))\n        ```"]