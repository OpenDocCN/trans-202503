- en: '![](Images/chapterart.png)'
  prefs: []
  type: TYPE_IMG
- en: '8'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Recognizing Language in Newspapers
  prefs: []
  type: TYPE_NORMAL
- en: '![Alphabet-I](Images/Alphabet-I.png)n the last chapter, you saw that computers
    can be trained to recognize different characteristics of writing. For that project,
    you trained an ML model to recognize compliments and insults. Computers can also
    learn to recognize lots of other styles of writing as well.'
  prefs: []
  type: TYPE_NORMAL
- en: For example, you can train an ML model to recognize the differences between
    formal writing and casual writing in the same way—by training it to recognize
    patterns in the words that people choose and the phrasing they use.
  prefs: []
  type: TYPE_NORMAL
- en: Different newspapers and news websites use words and phrases in different ways
    to describe the same stories. In this chapter, you’ll train a computer to recognize
    the way that language is used in media by creating an ML model that can identify
    the type of newspaper a headline has come from (see [Figure 8-1](#figure8-1)).
  prefs: []
  type: TYPE_NORMAL
- en: '![f08001](Images/f08001.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Figure 8-1:](#figureanchor8-1) Recognizing headlines from newspapers'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s get started!
  prefs: []
  type: TYPE_NORMAL
- en: Build Your Project
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The aim of this project is to see whether a computer can learn to recognize
    the way that newspapers use language. For the screenshots in this chapter, I trained
    an ML model to recognize headlines from *tabloids* (smaller newspapers with gossip
    stories and lots of photos) compared to *broadsheets* (traditional, full-size
    newspapers with more serious articles).
  prefs: []
  type: TYPE_NORMAL
- en: 'You can do the same topic as well, or you can design your own project. If you
    choose to design your own project, you should choose *one* characteristic to train
    the computer to recognize. There are lots of things that you could investigate.
    For example, you could base your project on the following:'
  prefs: []
  type: TYPE_NORMAL
- en: UK newspapers (versus US newspapers)  Do American newspapers use language differently
    than British newspapers?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Headlines in the summer (compared with winter headlines)  Are the front-page
    headlines written differently at different times of year?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: National newspapers (versus local newspapers)  Are the headlines in national
    papers written differently than the headlines in your local paper?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Weekend headlines (versus weekday headlines)  Do newspapers use language differently
    on work and school days than on the weekend?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Articles from two different newspapers   If you pick two specific newspapers,
    can you train the computer to recognize an article from one of them?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Headlines from the 1950s (compared with headlines today)  Are headlines written
    differently today from how they used to be?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You’ll need examples of the types of newspaper articles or headlines that you
    want to train the ML model to recognize. There are lots of websites you can use
    to find examples. Here are a few suggestions:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.thepaperboy.com/](https://www.thepaperboy.com/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://www.ukpressonline.co.uk/](https://www.ukpressonline.co.uk/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[https://www.time.com/vault/](https://www.time.com/vault/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Think about what comparison you would find interesting and then see if you can
    find enough examples to make it easy to do.
  prefs: []
  type: TYPE_NORMAL
- en: 'You’ll need two groups to train the ML model:'
  prefs: []
  type: TYPE_NORMAL
- en: Examples of the type of newspaper article/headline that you want the model to
    recognize
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Examples of newspaper articles/headlines that *don’t* have that characteristic
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Try to change only one characteristic in the second group. For example, the
    category *headlines from UK tabloids in the 1970s* has three variables: country
    (UK), newspaper type (tabloids), and time period (1970s). What would you put in
    the second group?'
  prefs: []
  type: TYPE_NORMAL
- en: You could fill it with examples of headlines from US tabloids in the 1970s,
    so the computer learns to recognize the difference between 1970s UK and US tabloid
    headlines. Or, you could fill it with examples of headlines from UK tabloids from
    today, so the computer learns to recognize the difference between UK tabloid headlines
    from the 1970s and now.
  prefs: []
  type: TYPE_NORMAL
- en: What you should *not* do is use, for example, headlines from current US broadsheets.
    That would change all three variables, which would make it harder for the model
    to recognize a consistent pattern.
  prefs: []
  type: TYPE_NORMAL
- en: As another example, if you want to train the computer to recognize the way that
    articles are written in the *Daily Times*, in the second group you could include
    articles from different newspapers from the same day. Even better, you could try
    to pick articles about the same subject. Then your ML model won’t be learning
    to recognize the article subject, but rather the patterns in the way the *Daily
    Times* describes the same subjects.
  prefs: []
  type: TYPE_NORMAL
- en: 'To train my ML model to recognize headlines from tabloids, I compared examples
    of tabloid headlines with headlines from broadsheet newspapers. Here’s what I
    kept the same:'
  prefs: []
  type: TYPE_NORMAL
- en: 'I used newspapers from the *same time period*: March 2015 through April 2015.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'I used the *same section* of each newspaper: the headline in the biggest text
    on the front page.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'I used the *same type* of newspapers: national, weekday newspapers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'I used newspapers from the *same country*: the UK.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Train Your Model
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Create a new ML project, name it `Newspapers`, and set it to learn to recognize
    text in your preferred language.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Train**, as shown in [Figure 8-2](#figure8-2).![f08002](Images/f08002.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Figure 8-2:](#figureanchor8-2) Train is the first phase of an ML project.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click **Add new label**, as shown in [Figure 8-3](#figure8-3), to create training
    buckets for the two groups that you want to compare in your project.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For my project, I used tabloid and broadsheet.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![f08003](Images/f08003.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '[Figure 8-3:](#figureanchor8-3) Create training buckets for the two groups
    to compare.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Find and copy an example of your first group. This will depend on what you’re
    doing your project on. It could be a newspaper headline if you’re doing a project
    on headlines. It could be the first paragraph of an article if you’re comparing
    the way that different newspapers write articles about the same topic.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For my project, I copied headlines from a website that has the front page for
    national newspapers in the UK.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click **Add example** in each of your training buckets, as shown in [Figure
    8-4](#figure8-4), and paste in the examples that you found.![f08004](Images/f08004.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Figure 8-4:](#figureanchor8-4) First training example for the Newspapers project'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Repeat steps 4 and 5 until you’ve got at least 20 examples in each training
    bucket, as shown in [Figure 8-5](#figure8-5).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Back to project** in the top-left corner of the screen.![f08005](Images/f08005.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Figure 8-5:](#figureanchor8-5) Training data for the Newspapers project'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click **Learn & Test**, as shown in [Figure 8-6](#figure8-6).![f08006](Images/f08006.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Figure 8-6:](#figureanchor8-6) Learn & Test is the second phase of an ML project.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click **Train new machine learning model**, as shown in [Figure 8-7](#figure8-7).![f08007](Images/f08007.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Figure 8-7:](#figureanchor8-7) Click **Train new machine learning model**
    to start the training.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The computer might take a minute to learn from the examples that you’ve collected.
    While you wait, consider these questions:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Did you spot any patterns between your two groups of examples while you were
    copying them into your training buckets?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Are there particular topics or subjects that are covered more often in one group
    than the other?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Are there particular words, terms, or phrases that are used more in one group
    than in the other group?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Are there differences in the way sentences are structured? Does one group have
    longer sentences than the other? Does one use capital letters more often?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Are there patterns in the types of words that are used? For example, does one
    group use simpler language or shorter words? Does one group use more emotional
    words?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Try to guess what sorts of patterns that your ML model might be learning from
    the training examples you’ve given it.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Prepare Your Project
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In the projects that you’ve made so far, you’ve tested your ML models by trying
    them out. In this chapter, you’ll see a few of the ways that ML projects are formally
    tested in the real world.
  prefs: []
  type: TYPE_NORMAL
- en: Click **Back to project** in the top-left corner of the screen.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Make**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Scratch 3**, and then click **Open in Scratch 3** to open a new window
    with Scratch.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Delete the **Sprite1** cat sprite from the sprites list, as you won’t need it.
    Click the trash can icon in its top-right corner. The Costumes tab should now
    be replaced by the Backdrops tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the **Backdrops** tab and draw a background that divides your Scratch
    project into two halves, as shown in [Figure 8-8](#figure8-8).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The *top half* will be for newspapers that *match* what you’ve trained the ML
    model to recognize.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The *bottom half* will be for newspapers that *don’t match* what you’ve trained
    the ML model to recognize.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Choose a color for each half. I used red for the top half, and blue for the
    bottom half.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Draw a line between the two halves to divide the space.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You should end up with something like [Figure 8-8](#figure8-8).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Add a sprite by moving your mouse pointer over the Choose a Sprite icon (the
    cat face) at the bottom right of the screen. This sprite will represent the newspaper
    headlines that your ML model should recognize, so give it a suitable name in both
    the **Costume** text field above the canvas and in the **Sprite** text field at
    the bottom right.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To draw your own newspaper, select **Paint**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: To upload a picture of a newspaper you’ve saved to the computer, click **Upload
    Sprite**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![f08008](Images/f08008.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '[Figure 8-8:](#figureanchor8-8) Prepare the backdrop for the Newspapers project.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the **Costumes** tab and use the paint tools to color the newspaper to
    match the top half of the backdrop.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For my project, I drew a red newspaper sprite to represent headlines from tabloids
    and gave it the name tabloid, as shown in [Figure 8-9](#figure8-9).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![f08009](Images/f08009.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '[Figure 8-9:](#figureanchor8-9) Draw the first newspaper sprite.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the **Code** tab, click **Variables** in the Toolbox, and then click **Make
    a List**, as shown in [Figure 8-10](#figure8-10).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Make sure **for all sprites** is selected, and name your list after what you’ve
    trained your ML model to recognize.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: For my project, I created a list called tabloid headlines.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![f08010](Images/f08010.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '[Figure 8-10:](#figureanchor8-10) Create a list for the first set of headlines.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Type at least 10 examples into the list, as shown in [Figure 8-11](#figure8-11).
    Click the plus button in the bottom-left corner of the list to add a new line.
    You can drag the equal sign in the bottom-right corner to make the list wider,
    which can make it easier to see what you are typing.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The text you type into this list should be examples of newspaper headlines or
    articles that fit what you’ve trained the ML model to recognize.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: It’s important that these are new headlines that you haven’t already used in
    the training examples. These should be headlines that the computer hasn’t seen
    before so that you can properly test if it can recognize new headlines, not simply
    remember them.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: When you’ve finished typing your test headlines into the list, uncheck the list
    in the Toolbox to hide it from the Stage.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![f08011](Images/f08011.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '[Figure 8-11:](#figureanchor8-11) Test examples for the first group'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the **Code** tab and copy the scripts shown in [Figure 8-12](#figure8-12).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Replace the tabloid block with the label for whatever you’ve trained the computer
    to recognize in your project.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![f08012](Images/f08012.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '[Figure 8-12:](#figureanchor8-12) First code scripts for the Newspapers project'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This script will go through each of my tabloid headlines, and if the ML model
    recognizes it as a tabloid headline, it will move that headline to the top half
    of the screen. Otherwise, it will move the headline to the bottom half of the
    screen.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You did something similar in Chapter 3 when you sorted animal sprites based
    on an ML model recognizing what the sprite looked like. This time, you’re sorting
    sprites based on the ML model recognizing some text in your list.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the Green Flag and watch your script run.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How did your ML model do? It will probably get some answers wrong, but hopefully
    it will get most right. You can see how my ML model performed in [Figure 8-13](#figure8-13).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![f08013](Images/f08013.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '[Figure 8-13:](#figureanchor8-13) First test for the Newspapers project'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: But you can’t tell just from this grouping of newspaper sprites if my ML model
    is able to distinguish tabloid headlines from broadsheet headlines. Maybe it recognizes
    almost anything as tabloid headlines. I need to add some examples of broadsheet
    headlines to my list to know if my model would recognize them as well.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Follow the instructions from step 6 to create a new sprite, this time representing
    headlines/articles that should go in the *bottom half* of the backdrop you created.
    Color the sprite to match the color you chose for the bottom half of the screen
    when you drew the backdrop, and give the sprite and costume a name that fits what
    you’re training the model to recognize.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For my project, I drew a blue newspaper sprite to represent broadsheet headlines
    and named it broadsheet, as shown in [Figure 8-14](#figure8-14).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![f08014](Images/f08014.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '[Figure 8-14:](#figureanchor8-14) Second sprite for the Newspapers project'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: On the **Code** tab, click **Variables** in the Toolbox and then click **Make
    a List**. Fill this list with at least 10 examples of headlines/articles that
    should go in the bottom half of the backdrop.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: As before, make sure **for all sprites** is selected and name the list to match
    your second group.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: For my project, I created a list named broadsheet headlines and filled it with
    10 examples of broadsheet headlines, as shown in [Figure 8-15](#figure8-15).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: When you’ve typed your test headlines into the list, uncheck the list in the
    Toolbox to hide the list in the Stage.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Create a variable to count these headlines by clicking your second newspaper
    sprite, clicking **Variables** in the Toolbox, and clicking **Make a Variable**.
    Name the variable after your second group.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For my project, I created a variable called my broadsheet variable, as shown
    in [Figure 8-15](#figure8-15).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![f08015](Images/f08015.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '[Figure 8-15:](#figureanchor8-15) Preparing the data for the second group of
    newspapers'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Copy the scripts shown in [Figure 8-16](#figure8-16) for the second newspaper
    sprite.![f08016](Images/f08016.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Figure 8-16:](#figureanchor8-16) Second test for the Newspapers project'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: These scripts are similar to those you created for the first newspaper sprite
    in step 9.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This code will go through the examples in your second list. For each one, it
    will create a sprite, and if your ML model recognizes an example as being in the
    second group, the code will move it to the bottom half of the screen. Otherwise,
    the code will move the example to the top half.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Be careful not to use the list or variable from your first sprite. My first
    script was about the tabloid headlines, and this second script is about the broadsheet
    headlines.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Notice that the coordinates also have to be different in this script so that
    correct matches go to the bottom half of the screen this time.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the Green Flag again and watch your scripts run.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: As before, it’s okay if your ML model doesn’t get everything right. You can
    see how my ML model did in [Figure 8-17](#figure8-17).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: How did your ML model perform?
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![f08017](Images/f08017.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '[Figure 8-17:](#figureanchor8-17) Results for the second test of the Newspapers
    project'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Review and Improve Your Project
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You’ve trained an ML model to recognize the use of language in the media! You
    also used Scratch to make a simple test to visualize how effective your ML model
    is.
  prefs: []
  type: TYPE_NORMAL
- en: If my ML model had performed perfectly, it would have moved all of the red newspapers
    to the top half and moved all of the blue newspapers to the bottom half.
  prefs: []
  type: TYPE_NORMAL
- en: It didn’t.
  prefs: []
  type: TYPE_NORMAL
- en: Recognizing 100 percent of the headlines correctly was unlikely, as I gave my
    model only a small amount of training. With more training examples I would expect
    the results to improve, but even then, ML systems rarely perform perfectly.
  prefs: []
  type: TYPE_NORMAL
- en: But how good was it?
  prefs: []
  type: TYPE_NORMAL
- en: There are many ways that we can describe the performance of an ML system.
  prefs: []
  type: TYPE_NORMAL
- en: 'Measuring Performance: Accuracy'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: One measure we use to describe how well an ML model performs is *accuracy**,
    or counting the number of things that the ML model answers correctly.*
  prefs: []
  type: TYPE_NORMAL
- en: '*Create a new variable with **for all sprites** selected and call it `correct`.'
  prefs: []
  type: TYPE_NORMAL
- en: Change your scripts for the first sprite (the one in [Figure 8-12](#figure8-12)
    for newspapers that should go in the top half) to match the scripts in [Figure
    8-18](#figure8-18).
  prefs: []
  type: TYPE_NORMAL
- en: Notice that you’ll need to remove the last `if` block in the script to replace
    it with an `if...else` block.
  prefs: []
  type: TYPE_NORMAL
- en: Now change the scripts for the second sprite (the one in [Figure 8-16](#figure8-16)
    for newspapers that should go in the bottom half) to match the scripts in [Figure
    8-19](#figure8-19).
  prefs: []
  type: TYPE_NORMAL
- en: '![f08018](Images/f08018.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Figure 8-18:](#figureanchor8-18) Modify the first test script (from [Figure
    8-12](#figure8-12)) to count the number of correct answers.'
  prefs: []
  type: TYPE_NORMAL
- en: Notice that you’ll also need to replace the last `if` block in this script with
    an `if...else` block.
  prefs: []
  type: TYPE_NORMAL
- en: '![f08019](Images/f08019.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Figure 8-19:](#figureanchor8-19) Modify the second test script (from [Figure
    8-16](#figure8-16)) to count the number of correct answers.'
  prefs: []
  type: TYPE_NORMAL
- en: 'With these updated scripts, your Scratch project will compute the accuracy
    of your ML model and display the result at the end of the test. The formula is:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: as shown in [Figure 8-20](#figure8-20).
  prefs: []
  type: TYPE_NORMAL
- en: '![f08020](Images/f08020.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Figure 8-20:](#figureanchor8-20) Computing accuracy (Scratch refers to the
    number of items in a list as the *length* of the list)'
  prefs: []
  type: TYPE_NORMAL
- en: In other words, the accuracy is the percentage of how many headlines the ML
    model classified correctly.
  prefs: []
  type: TYPE_NORMAL
- en: The accuracy for my ML model is shown in [Figure 8-21](#figure8-21). How does
    it compare to your project?
  prefs: []
  type: TYPE_NORMAL
- en: '![f08021](Images/f08021.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Figure 8-21:](#figureanchor8-21) Displaying accuracy'
  prefs: []
  type: TYPE_NORMAL
- en: 'Measuring Performance: Confusion Matrix'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Accuracy is a useful measure, and possibly the most well-known one. But it’s
    often not enough, so it’s normally not the only measure used for real-world ML
    systems.
  prefs: []
  type: TYPE_NORMAL
- en: Can you think of any problems with accuracy?
  prefs: []
  type: TYPE_NORMAL
- en: What if my ML model thought that everything was a headline from a broadsheet
    newspaper, as in [Figure 8-22](#figure8-22)?
  prefs: []
  type: TYPE_NORMAL
- en: '![f08022](Images/f08022.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Figure 8-22:](#figureanchor8-22) Classifying every headline as broadsheet'
  prefs: []
  type: TYPE_NORMAL
- en: The accuracy would be 50 percent, as the model would put all 10 broadsheet newspapers
    in the right place but all 10 tabloid newspapers in the wrong place.
  prefs: []
  type: TYPE_NORMAL
- en: But “50 percent accuracy” isn’t a good description of a system that gives the
    same answer to any question. We need a better way to describe our ML model’s performance,
    one that avoids this sort of misleading result.
  prefs: []
  type: TYPE_NORMAL
- en: A *confusion matrix*is a tool where you count the number of things that the
    ML model gets correct and the number of things that it gets wrong and then arrange
    those results in a table. Let’s look at an example.
  prefs: []
  type: TYPE_NORMAL
- en: Create four more variables with **for all sprites** selected and name them `true
    positive`, `true negative`, `false positive`, and `false negative`. Make sure
    the checkboxes for all four variables are selected in the Toolbox as shown in
    [Figure 8-23](#figure8-23).
  prefs: []
  type: TYPE_NORMAL
- en: '![f08023](Images/f08023.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Figure 8-23:](#figureanchor8-23) Preparing variables for a confusion matrix'
  prefs: []
  type: TYPE_NORMAL
- en: Arrange the variables on the Stage as shown in [Figure 8-24](#figure8-24).
  prefs: []
  type: TYPE_NORMAL
- en: '![f08024](Images/f08024.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Figure 8-24:](#figureanchor8-24) Creating a confusion matrix in Scratch'
  prefs: []
  type: TYPE_NORMAL
- en: Change your scripts for the first sprite (the one in [Figure 8-18](#figure8-18)
    for newspapers that should go in the top half) to match the scripts in [Figure
    8-25](#figure8-25).
  prefs: []
  type: TYPE_NORMAL
- en: It’s a bit long, but take your time and compare it carefully to make sure you
    copy it correctly. As before, I’ve added comments to highlight the changes.
  prefs: []
  type: TYPE_NORMAL
- en: We’re increasing the counters for **true positive** **and **false negative****,
    and changing the **x** values for the glide blocks so that tabloid newspapers
    stay on the left side of the screen.****
  prefs: []
  type: TYPE_NORMAL
- en: '****![f08025](Images/f08025.png)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 8-25:](#figureanchor8-25) Modify the first script (from [Figure 8-18](#figure8-18))
    to calculate the confusion matrix values.'
  prefs: []
  type: TYPE_NORMAL
- en: Change your scripts for the second sprite (the one in [Figure 8-19](#figure8-19)
    for newspapers that should go in the bottom half) to match the scripts in [Figure
    8-26](#figure8-26).
  prefs: []
  type: TYPE_NORMAL
- en: We’re increasing the counters for **true negative** **and **false positive****,
    and changing the **x** values for the glide blocks so that broadsheet newspapers
    stay on the right side of the screen.****
  prefs: []
  type: TYPE_NORMAL
- en: '****![f08026](Images/f08026.png)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 8-26:](#figureanchor8-26) Modify the second script (from [Figure 8-19](#figure8-19))
    to calculate the confusion matrix values.'
  prefs: []
  type: TYPE_NORMAL
- en: Click the Green Flag to test your ML model again. My results are shown in [Figure
    8-27](#figure8-27).
  prefs: []
  type: TYPE_NORMAL
- en: '![f08027](Images/f08027.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Figure 8-27:](#figureanchor8-27) Displaying a confusion matrix in Scratch'
  prefs: []
  type: TYPE_NORMAL
- en: Table 8-1 shows the results of my ML model arranged in a confusion matrix.
  prefs: []
  type: TYPE_NORMAL
- en: 'Table 8-1: Arranging Results in a Confusion Matrix'
  prefs: []
  type: TYPE_NORMAL
- en: '| **True positive** Headline was from a tabloid. ML model thought it was from
    a tabloid.'
  prefs: []
  type: TYPE_NORMAL
- en: (Correct) | **False positive** Headline was not from a tabloid. ML model thought
    it was from a tabloid.
  prefs: []
  type: TYPE_NORMAL
- en: (Incorrect) |
  prefs: []
  type: TYPE_NORMAL
- en: '| **False negative** Headline was from a tabloid. ML model thought it was not
    from a tabloid.'
  prefs: []
  type: TYPE_NORMAL
- en: (Incorrect) | **True negative** Headline was not from a tabloid. ML model thought
    it was not from a tabloid.
  prefs: []
  type: TYPE_NORMAL
- en: (Correct) |
  prefs: []
  type: TYPE_NORMAL
- en: It’s a useful way to describe the performance of an ML model that tells us more
    than accuracy can by itself.
  prefs: []
  type: TYPE_NORMAL
- en: If my ML model thought everything was from a broadsheet newspaper, the confusion
    matrix would look like [Figure 8-28](#figure8-28).
  prefs: []
  type: TYPE_NORMAL
- en: '![f08028](Images/f08028.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Figure 8-28:](#figureanchor8-28) Example of a confusion matrix'
  prefs: []
  type: TYPE_NORMAL
- en: 'Measuring Performance: Precision and Recall'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Another way that we describe the performance of ML models is using *precision*
    *and *recall**.**
  prefs: []
  type: TYPE_NORMAL
- en: '**Precision is calculated as `true positive / (true positive + false positive)`.'
  prefs: []
  type: TYPE_NORMAL
- en: Recall is calculated as `true positive / (true positive + false negative)`.
  prefs: []
  type: TYPE_NORMAL
- en: You can update your script to include the calculations shown in [Figure 8-29](#figure8-29).
    Add them to the end of the `when I start as a clone` script for the second sprite,
    after the `say` block.
  prefs: []
  type: TYPE_NORMAL
- en: '![f08029](Images/f08029.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Figure 8-29:](#figureanchor8-29) Calculating precision and recall in Scratch'
  prefs: []
  type: TYPE_NORMAL
- en: I added this calculation to the script for my ML model. [Figure 8-30](#figure8-30)
    shows the results I got.
  prefs: []
  type: TYPE_NORMAL
- en: '![f08030](Images/f08030.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Figure 8-30:](#figureanchor8-30) Displaying precision and recall in Scratch'
  prefs: []
  type: TYPE_NORMAL
- en: The precision score means that when my ML model thinks something is a tabloid
    headline, it is right 78 percent of the time.
  prefs: []
  type: TYPE_NORMAL
- en: The recall score means that it found 70 percent of the tabloid headlines in
    the test set.
  prefs: []
  type: TYPE_NORMAL
- en: The accuracy score means that 75 percent of the answers the ML model gave were
    correct.
  prefs: []
  type: TYPE_NORMAL
- en: Precision, recall, and accuracy all help to give a good description of an ML
    model’s performance.
  prefs: []
  type: TYPE_NORMAL
- en: For example, [Figure 8-31](#figure8-31) shows results from two different ML
    models that both have an accuracy score of 50 percent. The other scores help to
    describe the differences in the way the models are working.
  prefs: []
  type: TYPE_NORMAL
- en: '![f08031](Images/f08031.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Figure 8-31:](#figureanchor8-31) Different ML models with 50 percent accuracy'
  prefs: []
  type: TYPE_NORMAL
- en: In comparison to the way we tested your project in the last chapter, which was
    by manually entering test values and getting a feel for how many times the model
    is correct, using measurement values is a more consistent and effective way to
    describe the performance of ML models. We’ll look at another use of performance
    measurements for image recognition projects in the next chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Improving Your ML Model
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Try adding another 10 examples to each of your two training buckets from the
    Train phase and use them to train a new ML model from the Learn & Test phase.
  prefs: []
  type: TYPE_NORMAL
- en: Rerun your Scratch script once the new ML model has finished training.
  prefs: []
  type: TYPE_NORMAL
- en: What does the increased number of training examples do to your precision, recall,
    and accuracy scores?
  prefs: []
  type: TYPE_NORMAL
- en: What You Learned
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You’ve seen from all of your own projects that ML isn’t perfect and can make
    mistakes. ML doesn’t need to be perfect to be useful, however. ML systems make
    up for their mistakes by working so quickly, analyzing massive amounts of text
    that would take a lifetime for a person to read. Even if it makes mistakes 10
    percent of the time, an ML system can still be useful at finding things that need
    attention. But it’s important to know how many mistakes an ML system is making
    to measure how well it is performing.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, you learned that there are many ways of testing ML systems
    and measuring how well they’re performing, which can help us decide how to use
    the results they give us.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, you’ll learn about solving more complex problems by breaking
    them up into separate pieces for an ML model to recognize, and you’ll use a confusion
    matrix again to see how well this works.***********
  prefs: []
  type: TYPE_NORMAL
