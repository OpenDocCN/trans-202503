["```\n  class Employee < ActiveRecord::Base\n➊   has_many :subordinates, class_name: 'Employee',\n➋                           foreign_key: 'manager_id'\n➌   belongs_to :manager, class_name: 'Employee'\n  end\n```", "```\nclass Author < ActiveRecord::Base\n  has_and_belongs_to_many :books\nend\n```", "```\nclass Book < ActiveRecord::Base\n  has_and_belongs_to_many :authors\nend\n```", "```\n$ **bin/rails g migration CreateAuthorsBooks**\n  invoke   active_record\n  create     db/migrate/..._create_authors_books.rb\n```", "```\n  class CreateAuthorsBooks < ActiveRecord::Migration\n    def change\n      create_table :authors_books**, id: false** do |t|\n➊       **t.references :author, null: false, index: true**\n\n        **t.references :book, null: false, index: true**\n      end\n    end\n  end\n```", "```\nclass CreateAuthorsBooks < ActiveRecord::Migration\n  def change\n    **create_join_table :authors, :books do |t|**\n      **t.index :author_id**\n      **t.index :book_id**\n    **end**\n  end\nend\n```", "```\nclass Band < ActiveRecord::Base\n  has_many :performances\n  has_many :venues, through: :performances\nend\n```", "```\nclass Venue < ActiveRecord::Base\n  has_many :performances\n  has_many :bands, through: :performances\nend\n```", "```\nclass Performance < ActiveRecord::Base\n  belongs_to :band\n  belongs_to :venue\nend\n```", "```\nclass Pet < ActiveRecord::Base\nend\n```", "```\nclass Dog < Pet\nend\n```", "```\nclass Fish < Pet\nend\n```", "```\nclass Comment < ActiveRecord::Base\n  belongs_to :commentable, polymorphic: true\nend\n```", "```\nclass Post < ActiveRecord::Base\n  has_many :comments, as: :commentable\nend\n\nclass Image < ActiveRecord::Base\n  has_many :comments, as: :commentable\nend\n```", "```\n$ **cd code**\n$ **rails new social**\n$ **cd social**\n```", "```\n$ **bin/rails generate resource User name email**\n```", "```\n$ **bin/rake db:migrate**\n```", "```\n$ **bin/rails g model Subscription leader:references follower:references**\n  invoke  active_record\n  create    db/migrate/..._create_subscriptions.rb\n  create    app/models/subscription.rb\n  invoke    test_unit\n  create      test/models/subscription_test.rb\n  create      test/fixtures/subscriptions.yml\n```", "```\n$ **bin/rake db:migrate**\n```", "```\nclass Subscription < ActiveRecord::Base\n  belongs_to :leader**, class_name: 'User'**\n  belongs_to :follower**, class_name: 'User'**\nend\n```", "```\n  class User < ActiveRecord::Base\n➊   **has_many :subscriptions, foreign_key: :follower_id,**\n➋                            **dependent: :destroy**\n➌   **has_many :leaders, through: :subscriptions**\n  end\n```", "```\n  class User < ActiveRecord::Base\n    has_many :subscriptions, foreign_key: :follower_id,\n                             dependent: :destroy\n    has_many :leaders, through: :subscriptions\n\n➊   **def following?(leader)**\n        **leaders.include? leader**\n    **end**\n\n➋   **def follow!(leader)**\n➌     **if leader != self && !following?(leader)**\n        **leaders << leader**\n      **end**\n    **end**\n  end\n```", "```\n$ **bin/rails console**\n```", "```\nirb(main):001:0> **alice = User.create name: \"Alice\"**\n   (0.1ms) begin transaction\n  SQL (0.6ms) INSERT INTO \"users\" ...\n   (0.8ms) commit transaction\n => #<User id: 1, name: \"Alice\", ...>\nirb(main):002:0> **bob = User.create name: \"Bob\"**\n   (0.1ms) begin transaction\n  SQL (0.6ms) INSERT INTO \"users\" ...\n   (0.8ms) commit transaction\n => #<User id: 2, name: \"Bob\", ...>\n```", "```\nirb(main):003:0> **alice.follow! bob**\n  User Exists (0.2ms) SELECT ...\n   (0.1ms) begin transaction\n  SQL (16.1ms) INSERT INTO ...\n   (20.4ms) commit transaction\n  User Load (0.3ms) SELECT ...\n => #<ActiveRecord::Associations::CollectionProxy ...>\nirb(main):004:0> **alice.following? bob**\n => true\nirb(main):005:0> **bob.following? alice**\nUser Exists (0.2ms) SELECT ...\n => false\n```", "```\n  class User < ActiveRecord::Base\n    has_many :subscriptions, foreign_key: :follower_id,\n                             dependent: :destroy\n    has_many :leaders, through: :subscriptions\n\n➊   **has_many :reverse_subscriptions, foreign_key: :leader_id,**\n➋                                    **class_name: 'Subscription',**\n                                     **dependent: :destroy**\n➌   **has_many :followers, through: :reverse_subscriptions**\n\n    def following?(leader)\n      leaders.include? leader\n    end\n\n    def follow!(leader)\n      if leader != self && !following?(leader)\n        leaders << leader\n      end\n    end\n  end\n```", "```\n➊ irb(main):001:0> **alice = User.find(1)**\n    User Load (0.3ms) SELECT ...\n  => #<User id: 1, name: \"Alice\", ...>\n  irb(main):002:0> **bob = User.find(2)**\n    User Load (0.3ms) SELECT ...\n  => #<User id: 2, name: \"Bob\", ...>\n➋ irb(main):003:0> **alice.followers**\n    User Load (0.2ms) SELECT ...\n  => #<ActiveRecord::Associations::CollectionProxy []>\n➌ irb(main):004:0> **alice.followers.to_a**\n  => []\n  irb(main):005:0> **bob.followers.to_a**\n    User Load (0.2ms) SELECT ...\n  => [#<User id: 1, name: \"Alice\", ...>]\n```", "```\n$ **bin/rails g resource Post title body:text url type user:references**\n$ **bin/rake db:migrate**\n```", "```\n$ **bin/rails g resource TextPost --parent=Post --migration=false**\n$ **bin/rails g resource ImagePost --parent=Post --migration=false**\n```", "```\n  class Post < ActiveRecord::Base\n    belongs_to :user\n➊   **validates :user_id, presence: true**\n➋   **validates :type, presence: true**\n  end\n```", "```\nclass ImagePost < Post\n  **validates :url, presence: true**\nend\n```", "```\nclass TextPost < Post\n  **validates :body, presence: true**\nend\n```", "```\nclass User < ActiveRecord::Base\n  has_many :subscriptions, foreign_key: :follower_id,\n                           dependent: :destroy\n  has_many :leaders, :through => :subscriptions\n\n  has_many :reverse_subscriptions, foreign_key: :leader_id,\n                                   class_name: 'Subscription',\n                                   dependent: :destroy\n  has_many :followers, through: :reverse_subscriptions\n\n  **has_many :posts, dependent: :destroy**\n  **has_many :text_posts, dependent: :destroy**\n  **has_many :image_posts, dependent: :destroy**\n\n  --*snip*--\n```", "```\n➊ irb(main):001:0> **alice = User.find(1)**\n    User Load (42.0ms) SELECT ...\n   => #<User id: 1, ...>\n  irb(main):002:0> **post1 = alice.text_posts.create(body: \"First Post\")**\n     (0.1ms) begin transaction\n    SQL (0.7ms) INSERT INTO ...\n     (1.9ms) commit transaction\n   => #<TextPost id: 1, ...>\n  irb(main):003:0> **post2 = alice.image_posts.create(**\n                                   **url: \"http://i.imgur.com/Y7syDEa.jpg\")**\n     (0.1ms) begin transaction\n    SQL (0.7ms) INSERT INTO ...\n     (1.9ms) commit transaction\n   => #<ImagePost id: 2, ...>\n➋ irb(main):004:0> **alice.posts.to_a**\n    Post Load (32.3ms) SELECT ...\n   => [#<TextPost id: 1, ...>, #<ImagePost id: 2, ...>]\n➌ irb(main):005:0> **alice.text_posts.to_a**\n    TextPost Load (0.4ms) SELECT ...\n   => [#<TextPost id: 1, ...>]\n```", "```\n$ **bin/rails g resource Comment body:text post:references user:references**\n$ **bin/rake db:migrate**\n```"]