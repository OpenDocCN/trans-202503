["```\napk/\n|-- AndroidManifest.xml➊\n|-- classes.dex➋\n|-- resources.arsc➌\n|-- assets/➍\n|-- lib/➎\n|   |-- armeabi/\n|   |   `-- libapp.so\n|   `-- armeabi-v7a/\n|       `-- libapp.so\n|-- META-INF/➏\n|   |-- CERT.RSA\n|   |-- CERT.SF\n|   `-- MANIFEST.MF\n`-- res/➐\n    |-- anim/\n    |-- color/\n    |-- drawable/\n    |-- layout/\n    |-- menu/\n    |-- raw/\n    `-- xml/\n```", "```\nManifest-Version: 1.0\nCreated-By: 1.0 (Android)\n\nName: res/drawable-xhdpi/ic_launcher.png\nSHA1-Digest: K/0Rd/lt0qSlgDD/9DY7aCNlBvU=\nName: res/menu/main.xml\nSHA1-Digest: kG8WDil9ur0f+F2AxgcSSKDhjn0=\n\nName: ...\n```", "```\nSignature-Version: 1.0\nSHA1-Digest-Manifest-Main-Attributes: ZKXxNW/3Rg7JA1r0+RlbJIP6IMA=\nCreated-By: 1.7.0_51 (Sun Microsystems Inc.)\nSHA1-Digest-Manifest: zb0XjEhVBxE0z2ZC+B4OW25WBxo=➊\n\nName: res/drawable-xhdpi/ic_launcher.png\nSHA1-Digest: jTeE2Y5L3uBdQ2g40PB2n72L3dE=➋\n\nName: res/menu/main.xml\nSHA1-Digest: kSQDLtTE07cLhTH/cY54UjbbNBo=➌\n\nName: ...\n```", "```\n$ **openssl sha1 -binary MANIFEST.MF |openssl base64**➊\nzb0XjEhVBxE0z2ZC+B4OW25WBxo=\n$ **echo -en \"Name: res/drawable-xhdpi/ic_launcher.png\\r\\nSHA1-Digest: \\**\n**K/0Rd/lt0qSlgDD/9DY7aCNlBvU=\\r\\n\\r\\n\"|openssl sha1 -binary |openssl base64**➋\njTeE2Y5L3uBdQ2g40PB2n72L3dE=\n```", "```\n$ **openssl asn1parse -i -inform DER -in CERT.RSA**\n    0:d=0  hl=4 l= 888 cons: SEQUENCE\n    4:d=1  hl=2 l=   9 prim:  OBJECT            :pkcs7-signedData➊\n   15:d=1  hl=4 l= 873 cons:  cont [ 0 ]\n   19:d=2  hl=4 l= 869 cons:   SEQUENCE\n   23:d=3  hl=2 l=   1 prim:    INTEGER           :01➋\n   26:d=3  hl=2 l=  11 cons:    SET\n   28:d=4  hl=2 l=   9 cons:     SEQUENCE\n   30:d=5  hl=2 l=   5 prim:      OBJECT            :sha1➌\n   37:d=5  hl=2 l=   0 prim:      NULL\n   39:d=3  hl=2 l=  11 cons:    SEQUENCE\n   41:d=4  hl=2 l=   9 prim:     OBJECT            :pkcs7-data➍\n   52:d=3  hl=4 l= 607 cons:    cont [ 0 ]➎\n   56:d=4  hl=4 l= 603 cons:     SEQUENCE\n   60:d=5  hl=4 l= 452 cons:      SEQUENCE\n   64:d=6  hl=2 l=   3 cons:       cont [ 0 ]\n   66:d=7  hl=2 l=   1 prim:        INTEGER           :02\n   69:d=6  hl=2 l=   1 prim:       INTEGER           :04\n   72:d=6  hl=2 l=  13 cons:       SEQUENCE\n   74:d=7  hl=2 l=   9 prim:        OBJECT            :sha1WithRSAEncryption\n   85:d=7  hl=2 l=   0 prim:        NULL\n   87:d=6  hl=2 l=  56 cons:       SEQUENCE\n   89:d=7  hl=2 l=  11 cons:       SET\n   91:d=8  hl=2 l=   9 cons:        SEQUENCE\n   93:d=9  hl=2 l=   3 prim:         OBJECT            :countryName\n   98:d=9  hl=2 l=   2 prim:         PRINTABLESTRING   :JP\n  --*snip*--\n  735:d=5  hl=2 l=   9 cons:     SEQUENCE\n  737:d=6  hl=2 l=   5 prim:      OBJECT            :sha1➏\n  744:d=6  hl=2 l=   0 prim:      NULL\n  746:d=5  hl=2 l=  13 cons:     SEQUENCE\n  748:d=6  hl=2 l=   9 prim:      OBJECT            :rsaEncryption➐\n  759:d=6  hl=2 l=   0 prim:      NULL\n  761:d=5  hl=3 l= 128 prim:    OCTET STRING       [HEX DUMP]:892744D30DCEDF74933007...➑\n```", "```\n$ **openssl smime -verify -in CERT.RSA -inform DER -content CERT.SF signing-cert.pem**\nSignature-Version: 1.0\nSHA1-Digest-Manifest-Main-Attributes: ZKXxNW/3Rg7JA1r0+RlbJIP6IMA=\nCreated-By: 1.7.0_51 (Sun Microsystems Inc.)\nSHA1-Digest-Manifest: zb0XjEhVBxE0z2ZC+B4OW25WBxo=\n\nName: res/drawable-xhdpi/ic_launcher.png\nSHA1-Digest: jTeE2Y5L3uBdQ2g40PB2n72L3dE=\n\n--*snip*--\nVerification successful\n```", "```\n$ **jarsigner -keystore debug.keystore -sigalg SHA1withRSA test.apk androiddebugkey**➊\n$ **jarsigner -keystore debug.keystore -verify -verbose -certs test.apk**➋\n--*snip*--\n\nsmk      965 Sat Mar 08 23:55:34 JST 2014 res/drawable-xxhdpi/ic_launcher.png\n\n      X.509, CN=Android Debug, O=Android, C=US (androiddebugkey)➌\n      [certificate is valid from 6/18/11 7:31 PM to 6/10/41 7:31 PM]\n\nsmk   458072 Sun Mar 09 01:16:18 JST 2013 classes.dex\n\n      X.509, CN=Android Debug, O=Android, C=US (androiddebugkey)➍\n      [certificate is valid from 6/18/11 7:31 PM to 6/10/41 7:31 PM]\n\n         903 Sun Mar 09 01:16:18 JST 2014 META-INF/MANIFEST.MF\n         956 Sun Mar 09 01:16:18 JST 2014 META-INF/CERT.SF\n         776 Sun Mar 09 01:16:18 JST 2014 META-INF/CERT.RSA\n\n  s = signature was verified\n  m = entry is listed in manifest\n  k = at least one certificate was found in keystore\n  i = at least one certificate was found in identity scope\n\njar verified.\n```", "```\n$ **keytool -list -printcert -jarfile test.apk**\nSigner #1:\nSignature:\nOwner: CN=Android Debug, O=Android, C=US\nIssuer: CN=Android Debug, O=Android, C=US\nSerial number: 4dfc7e9a\nValid from: Sat Jun 18 19:31:54 JST 2011 until: Mon Jun 10 19:31:54 JST 2041\nCertificate fingerprints:\n         MD5: E8:93:6E:43:99:61:C8:37:E1:30:36:14:CF:71:C2:32\n         SHA1: 08:53:74:41:50:26:07:E7:8F:A5:5F:56:4B:11:62:52:06:54:83:BE\n         Signature algorithm name: SHA1withRSA\n         Version: 3\n```", "```\n$ **unzip -q -c test.apk META-INF/CERT.RSA|openssl pkcs7 -inform DER -print_certs -out cert.pem**\n```", "```\n$ **echo \"keypwd\"|openssl pkcs8 -in mykey.pem -topk8 -outform DER -out mykey.pk8 -passout stdin**\n```", "```\n$ **java -jar signapk.jar cert.cer key.pk8 test.apk test-signed.apk**\n```", "```\n-rw-r--r-- system   system   ... /data/app/com.example.app-1.apk➊\n-rwxr-xr-x system   system   ... /data/app-lib/com.example.app-1/libapp.so➋\n-rw-r--r-- system   all_a215 ... /data/dalvik-cache/data@app@com.example.app-1.apk@classes.dex➌\ndrwxr-x--x u0_a215  u0_a215  ... /data/data/com.example.app➍\ndrwxrwx--x u0_a215  u0_a215  ... /data/data/com.example.app/databases➎\ndrwxrwx--x u0_a215  u0_a215  ... /data/data/com.example.app/files\nlrwxrwxrwx install  install  ... /data/data/com.example.app/lib -> /data/app-lib/com.example.app-1➏\ndrwxrwx--x u0_a215  u0_a215  ... /data/data/com.example.app/shared_prefs\n```", "```\n<package name=\"com.google.android.apps.chrometophone\"\n         codePath=\"/data/app/com.google.android.apps.chrometophone-2.apk\"\n         nativeLibraryPath=\"/data/app-lib/com.google.android.apps.chrometophone-2\"\n         flags=\"572996\"\n         ft=\"142dfa0e588\"\n         it=\"142cbeac305\"\n         ut=\"142dfa0e8d7\"\n         version=\"16\"\n         userId=\"10088\"\n         installer=\"com.android.vending\">➊\n    <sigs count=\"1\">\n        <cert index=\"7\" key=\"30820252...\" />\n    </sigs>➋\n    <perms>\n        <item name=\"android.permission.USE_CREDENTIALS\" />\n        <item name=\"com.google.android.apps.chrometophone.permission.C2D_MESSAGE\" />\n        <item name=\"android.permission.GET_ACCOUNTS\" />\n        <item name=\"android.permission.INTERNET\" />\n        <item name=\"android.permission.WAKE_LOCK\" />\n        <item name=\"com.google.android.c2dm.permission.RECEIVE\" />\n    </perms>➌\n    <signing-keyset identifier=\"2\" />➍\n</package>\n```", "```\nstatic int compareSignatures(Signature[] s1, Signature[] s2) {\n    if (s1 == null) {\n        return s2 == null\n            ? PackageManager.SIGNATURE_NEITHER_SIGNED\n            : PackageManager.SIGNATURE_FIRST_NOT_SIGNED;\n    }\n    if (s2 == null) {\n        return PackageManager.SIGNATURE_SECOND_NOT_SIGNED;\n    }\n    HashSet<Signature> set1 = new HashSet<Signature>();\n    for (Signature sig : s1) {\n        set1.add(sig);\n    }\n    HashSet<Signature> set2 = new HashSet<Signature>();\n    for (Signature sig : s2) {\n        set2.add(sig);\n    }\n    // Make sure s2 contains all signatures in s1.\n    if (set1.equals(set2)) {➊\n        return PackageManager.SIGNATURE_MATCH;\n    }\n    return PackageManager.SIGNATURE_NO_MATCH;\n}\n```", "```\npublic class Signature implements Parcelable {\n    private final byte[] mSignature;\n    private int mHashCode;\n    private boolean mHaveHashCode;\n    --*snip*--\n    public Signature(byte[] signature) {\n        mSignature = signature.clone();\n    }\n\n    public PublicKey getPublicKey() throws CertificateException {\n        final CertificateFactory certFactory =\n                CertificateFactory.getInstance(\"X.509\");\n        final ByteArrayInputStream bais = new ByteArrayInputStream(mSignature);\n        final Certificate cert = certFactory.generateCertificate(bais);\n        return cert.getPublicKey();\n    }\n\n    @Override\n    public boolean equals(Object obj) {\n        try {\n            if (obj != null) {\n                Signature other = (Signature)obj;\n                return this == other\n                    || Arrays.equals(mSignature, other.mSignature);➊\n            }\n        } catch (ClassCastException e) {\n        }\n        return false;\n    }\n\n    @Override\n    public int hashCode() {\n        if (mHaveHashCode) {\n            return mHashCode;\n        }\n        mHashCode = Arrays.hashCode(mSignature);➋\n        mHaveHashCode = true;\n        return mHashCode;\n    }\n--*snip*--\n}\n```", "```\n<package name=\"com.google.android.keep\"\n         codePath=\"/data/app/com.google.android.keep-1.apk\"➊\n         nativeLibraryPath=\"/data/app-lib/com.google.android.keep-1\"\n         flags=\"4767461\"➋\n         ft=\"142ee64d980\"\n         it=\"14206f3e320\"\n         ut=\"142ee64dfcb\"\n         version=\"2101\"\n         userId=\"10053\"➌\n         installer=\"com.android.vending\">\n    <sigs count=\"1\">\n        <cert index=\"2\" />\n    </sigs>\n    <signing-keyset identifier=\"3\" />\n    <signing-keyset identifier=\"34\" />\n</package>\n--*snip*--\n<updated-package name=\"com.google.android.keep\"\n                 codePath=\"/system/app/Keep.apk\"\n                 nativeLibraryPath=\"/data/app-lib/Keep\"\n                 ft=\"ddc8dee8\"\n                 it=\"14206f3e320\"\n                 ut=\"ddc8dee8\"\n                 version=\"2051\"\n                 userId=\"10053\">➍\n    <perms>\n        <item name=\"android.permission.READ_EXTERNAL_STORAGE\" />\n        <item name=\"android.permission.USE_CREDENTIALS\" />\n        <item name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n        --*snip*--\n    </perms>\n</updated-package>\n```", "```\nadb install [-l] [-r] [-s] [--algo <algorithm name> --key <hex-encoded key>\n--iv <hex-encoded iv>] <file>\n```", "```\n$ **openssl enc -aes-128-cbc -K 000102030405060708090A0B0C0D0E0F**\n**-iv 000102030405060708090A0B0C0D0E0F -in my-app.apk -out my-app-enc.apk**\n```", "```\n$ **adb install --algo 'AES/CBC/PKCS5Padding' \\**\n**--key 000102030405060708090A0B0C0D0E0F \\**\n**--iv 000102030405060708090A0B0C0D0E0F my-app-enc.apk**\n        pkg: /data/local/tmp/my-app-enc.apk\nSuccess\n```", "```\npublic void installPackageWithVerificationAndEncryption(Uri packageURI,\n        IPackageInstallObserver observer, int flags,\n        String installerPackageName,\n        VerificationParams verificationParams,\n        ContainerEncryptionParams encryptionParams) {\n--*snip*--\n}\n```", "```\npublic class ContainerEncryptionParams implements Parcelable {\n    private final String mEncryptionAlgorithm;\n    private final IvParameterSpec mEncryptionSpec;\n    private final SecretKey mEncryptionKey;\n    private final String mMacAlgorithm;\n    private final AlgorithmParameterSpec mMacSpec;\n    private final SecretKey mMacKey;\n    private final byte[] mMacTag;\n    private final long mAuthenticatedDataStart;\n    private final long mEncryptedDataStart;\n    private final long mDataEnd;\n    --*snip*--\n}\n```", "```\n$ **openssl dgst -hmac 'hmac_key_1' -sha1 -hex my-app-enc.apk**\nHMAC-SHA1(my-app-enc.apk)= 962ecdb4e99551f6c2cf72f641362d657164f55a\n```", "```\n$ **pm install -r --algo 'AES/CBC/PKCS5Padding' \\**\n**--key 000102030405060708090A0B0C0D0E0F \\**\n**--iv 000102030405060708090A0B0C0D0E0F \\**\n**--macalgo HmacSHA1 --mackey 686d61635f6b65795f31 \\**\n**--tag 962ecdb4e99551f6c2cf72f641362d657164f55a /sdcard/my-app-enc.apk**\n        pkg: /sdcard/kr-enc.apk\nSuccess\n```", "```\n# **ls -l /mnt/asec/com.example.app-1**\ndrwxr-xr-x system   system             lib\ndrwx------ root     root               lost+found\n-rw-r----- system   u0_a96     1319057 pkg.apk\n-rw-r--r-- system   system      526091 res.zip\n```", "```\n# **vdc asec list**➊\nvdc asec list\n111 0 com.example.app-1\n111 0 org.foo.app-1\n200 0 asec operation succeeded\n\n# **vdc asec path com.example.app-1**➋\nvdc asec path com.example.app-1\n211 0 /mnt/asec/com.example.app-1\n\n# **vdc asec unmount org.example.app-1**➌\n200 0 asec operation succeeded\n\n# **vdc asec mount com.example.app-1 000102030405060708090a0b0c0d0e0f 1000**➍\ncom.example.app-1 000102030405060708090a0b0c0d0e0f 1000\n200 0 asec operation succeeded\n```", "```\n# **ls -l /data/misc/systemkeys**\n-rw------- system   system         16 AppsOnSD.sks\n# **od -t x1 /data/misc/systemkeys/AppsOnSD.sks**\n0000000 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f\n0000020\n```", "```\nclass AndroidAppDelivery$EncryptionParams {\n  --*snip*--\n  private String encryptionKey;\n  private String hmacKey;\n  private int version;\n}\n```", "```\n<receiver android:name=\".MyPackageVerificationReceiver\"\n          android:permission=\"android.permission.BIND_PACKAGE_VERIFIER\">\n    <intent-filter>\n        <action\n             android:name=\"android.intent.action.PACKAGE_NEEDS_VERIFICATION\" />\n        <action android:name=\"android.intent.action.PACKAGE_VERIFIED\" />\n        <data android:mimeType=\"application/vnd.android.package-archive\" />\n    </intent-filter>\n</receiver>\n```", "```\n<manifest \n        package=\"com.example.app\">\n        <package-verifier android:name=\"com.example.verifier\"\n                          android:publicKey=\"MIIB...\" />\n    <application ...>\n     --*snip*--\n    </application>\n</manifest>\n```"]