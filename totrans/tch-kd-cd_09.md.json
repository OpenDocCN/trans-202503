["```\nimport pygame                           # Setup\npygame.init()\nscreen = pygame.display.set_mode([800,600])\npygame.display.set_caption(\"Click to draw\")\n```", "```\nkeep_going = True\nRED = (255,0,0)                     # RGB color triplet for RED\nradius = 15\n```", "```\n   while keep_going:                      # Game loop\n       for event in pygame.event.get():   # Handling events\n➊         if event.type == pygame.QUIT:\n               keep_going = False\n➋         if event.type == pygame.MOUSEBUTTONDOWN:\n➌             spot = event.pos\n➍             pygame.draw.circle(screen, RED, spot, radius)\n```", "```\nimport pygame                           # Setup\npygame.init()\nscreen = pygame.display.set_mode([800,600])\npygame.display.set_caption(\"Click to draw\")\nkeep_going = True\nRED = (255,0,0)                         # RGB color triplet for RED radius = 15\n\nwhile keep_going:                       # Game loop\n    for event in pygame.event.get():    # Handling events\n        if event.type == pygame.QUIT:\n            keep_going = False\n        if event.type == pygame.MOUSEBUTTONDOWN:\n            spot = event.pos\n            pygame.draw.circle(screen, RED, spot, radius)\n    pygame.display.update()             # Update display\n\npygame.quit()                           # Exit\n```", "```\n   import pygame                           # Setup\n   pygame.init()\n   screen = pygame.display.set_mode([800,600])\n➊ pygame.display.set_caption(\"Click and drag to draw\")\n   keep_going = True\n➋ YELLOW = (255,255,0)                    # RGB color triplet for YELLOW\n   radius = 15\n➌ mousedown = False\n```", "```\n   while keep_going:                        # Game loop\n       for event in pygame.event.get():     # Handling events\n           if event.type == pygame.QUIT:\n               keep_going = False\n➊         if event.type == pygame.MOUSEBUTTONDOWN:\n➋             mousedown = True\n➌         if event.type == pygame.MOUSEBUTTONUP:\n➍             mousedown = False\n➎     if mousedown:                         # Draw/update graphics\n➏         spot = pygame.mouse.get_pos()\n➐         pygame.draw.circle(screen, YELLOW, spot, radius)\n➑     pygame.display.update()               # Update display\n```", "```\nimport pygame                           # Setup\npygame.init()\nscreen = pygame.display.set_mode([800,600])\npygame.display.set_caption(\"Click and drag to draw\")\nkeep_going = True\nYELLOW = (255,255,0)                    # RGB color triplet for YELLOW\nradius = 15\nmousedown = False\n\nwhile keep_going:                       # Game loop\n    for event in pygame.event.get():    # Handling events\n        if event.type == pygame.QUIT:\n            keep_going = False\n        if event.type == pygame.MOUSEBUTTONDOWN:\n            mousedown = True\n        if event.type == pygame.MOUSEBUTTONUP:\n            mousedown = False\n    if mousedown:                       # Draw/update graphics\n        spot = pygame.mouse.get_pos()\n        pygame.draw.circle(screen, YELLOW, spot, radius)\n    pygame.display.update()             # Update display\n\npygame.quit()                           # Exit\n```", "```\n   import pygame\n   import random\n\n   BLACK = (0,0,0)\n   pygame.init()\n   screen = pygame.display.set_mode([800,600])\n   pygame.display.set_caption(\"Smiley Explosion\")\n   mousedown = False\n   keep_going = True\n   clock = pygame.time.Clock()\n   pic = pygame.image.load(\"CrazySmile.bmp\")\n   colorkey = pic.get_at((0,0))\n   pic.set_colorkey(colorkey)\n➊ sprite_list = pygame.sprite.Group()\n```", "```\nclass Smiley(pygame.sprite.Sprite):\n    pos = (0,0)\n    xvel = 1\n    yvel = 1\n    scale = 100\n```", "```\n   def __init__(self, pos, xvel, yvel):\n➊     pygame.sprite.Sprite.__init__(self)\n➋     self.image = pic\n      self.rect = self.image.get_rect()\n➌    self.pos = pos\n➍    self.rect.x = pos[0] - self.scale/2\n      self.rect.y = pos[1] - self.scale/2\n➎    self.xvel = xvel\n      self.yvel = yvel\n```", "```\ndef update(self):\n    self.rect.x += self.xvel\n    self.rect.y += self.yvel\n    if self.rect.x <= 0 or self.rect.x > screen.get_width() - self.scale:\n        self.xvel = -self.xvel\n    if self.rect.y <= 0 or self.rect.y > screen.get_height() - self.scale:\n        self.yvel = -self.yvel\n```", "```\nself.scale = random.randrange(10,100)\nself.image = pygame.transform.scale(self.image, (self.scale,self.scale))\n```", "```\n   import pygame\n   import random\n\n   BLACK = (0,0,0)\n   pygame.init()\n   screen = pygame.display.set_mode([800,600])\n   pygame.display.set_caption(\"Smiley Explosion\")\n   mousedown = False\n   keep_going = True\n   clock = pygame.time.Clock()\n   pic = pygame.image.load(\"CrazySmile.bmp\")\n   colorkey = pic.get_at((0,0))\n   pic.set_colorkey(colorkey)\n   sprite_list = pygame.sprite.Group()\n\n   class Smiley(pygame.sprite.Sprite):\n       pos = (0,0)\n       xvel = 1\n       yvel = 1\n       scale = 100\n\n       def __init__(self, pos, xvel, yvel):\n           pygame.sprite.Sprite.__init__(self)\n           self.image = pic\n           self.scale = random.randrange(10,100)\n           self.image = pygame.transform.scale(self.image, (self.scale,self.scale))\n           self.rect = self.image.get_rect()\n           self.pos = pos\n           self.rect.x = pos[0] - self.scale/2\n           self.rect.y = pos[1] - self.scale/2\n           self.xvel = xvel\n           self.yvel = yvel\n\n      def update(self):\n          self.rect.x += self.xvel\n          self.rect.y += self.yvel\n          if self.rect.x <= 0 or self.rect.x > screen.get_width() - self.scale:\n              self.xvel = -self.xvel\n          if self.rect.y <= 0 or self.rect.y > screen.get_height() - self.scale:\n              self.yvel = -self.yvel\n   while keep_going:\n       for event in pygame.event.get():\n           if event.type == pygame.QUIT:\n               keep_going = False\n           if event.type == pygame.MOUSEBUTTONDOWN:\n               mousedown = True\n           if event.type == pygame.MOUSEBUTTONUP:\n               mousedown = False\n       screen.fill(BLACK)\n➊     sprite_list.update()\n➋     sprite_list.draw(screen)\n       clock.tick(60)\n       pygame.display.update()\n       if mousedown:\n           speedx = random.randint(-5, 5)\n           speedy = random.randint(-5, 5)\n➌         newSmiley = Smiley(pygame.mouse.get_pos(),speedx,speedy)\n➍         sprite_list.add(newSmiley)\n\npygame.quit()\n```", "```\nif event.type == pygame.MOUSEBUTTONDOWN:\n    mousedown = True\n```", "```\n         if event.type == pygame.MOUSEBUTTONDOWN:\n➊           if pygame.mouse.get_pressed()[0]:    # Regular left mouse button, draw\n                 mousedown = True\n➋       elif pygame.mouse.get_pressed()[2]:  # Right mouse button, pop\n➌           pos = pygame.mouse.get_pos()\n➍           clicked_smileys = [s for s in sprite_list if s.rect.collidepoint(pos)]\n➎           sprite_list.remove(clicked_smileys)\n```", "```\nimport pygame\nimport random\n\nBLACK = (0,0,0)\npygame.init()\nscreen = pygame.display.set_mode([800,600])\npygame.display.set_caption(\"Pop a Smiley\")\nmousedown = False\nkeep_going = True\nclock = pygame.time.Clock()\npic = pygame.image.load(\"CrazySmile.bmp\")\ncolorkey = pic.get_at((0,0))\npic.set_colorkey(colorkey)\nsprite_list = pygame.sprite.Group()\n\nclass Smiley(pygame.sprite.Sprite):\n    pos = (0,0)\n    xvel = 1\n    yvel = 1\n    scale = 100\n\n    def __init__(self, pos, xvel, yvel):\n        pygame.sprite.Sprite.__init__(self)\n        self.image = pic\n        self.scale = random.randrange(10,100)\n        self.image = pygame.transform.scale(self.image, (self.scale,self.scale))\n        self.rect = self.image.get_rect()\n        self.pos = pos\n        self.rect.x = pos[0] - self.scale/2\n        self.rect.y = pos[1] - self.scale/2\n        self.xvel = xvel\n        self.yvel = yvel\n\n    def update(self):\n        self.rect.x += self.xvel\n        self.rect.y += self.yvel\n        if self.rect.x <= 0 or self.rect.x > screen.get_width() - self.scale:\n            self.xvel = -self.xvel\n        if self.rect.y <= 0 or self.rect.y > screen.get_height() - self.scale:\n            self.yvel = -self.yvel\nwhile keep_going:\n    for event in pygame.event.get():\n        if event.type == pygame.QUIT:\n            keep_going = False\n        if event.type == pygame.MOUSEBUTTONDOWN:\n            if pygame.mouse.get_pressed()[0]:   # Regular left mouse button, draw\n                mousedown = True\n            elif pygame.mouse.get_pressed()[2]: # Right mouse button, pop\n                pos = pygame.mouse.get_pos()\n                clicked_smileys = [s for s in sprite_list if s.rect.collidepoint(pos)]\n                sprite_list.remove(clicked_smileys)\n        if event.type == pygame.MOUSEBUTTONUP:\n            mousedown = False\n    screen.fill(BLACK)\n    sprite_list.update()\n    sprite_list.draw(screen)\n    clock.tick(60)\n    pygame.display.update()\n    if mousedown:\n        speedx = random.randint(-5, 5)\n        speedy = random.randint(-5, 5)\n        newSmiley = Smiley(pygame.mouse.get_pos(),speedx,speedy)\n        sprite_list.add(newSmiley)\n\npygame.quit()\n```"]