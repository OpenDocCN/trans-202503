- en: Part 3
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三部分
- en: what open hardware means to me
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 开放硬件对我来说意味着什么
- en: Before there was open hardware, hardware was open.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在开放硬件出现之前，硬件本身就是开放的。
- en: A yellow, tattered sheet of paper hanging next to my monitors—the schematic
    for the Apple II computer—reminds me of that fact every day. When I got the schematic
    as a child, it became a blueprint for the rest of my life. I couldn’t understand
    the schematic, but that didn’t matter; it taught me that *hardware is knowable*.
    It empowered me to understand my world and master the technology I relied on.
    That empowerment propels me to this day.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 一张黄色的、破旧的纸张挂在我的显示器旁——那是Apple II计算机的电路图——每天都在提醒我这一事实。当我还是个孩子时拿到这张电路图，它成为了我一生的蓝图。我当时看不懂电路图，但那并不重要；它教会了我*硬件是可以了解的*。它让我有能力理解我的世界，并掌握我依赖的技术。这个赋能一直推动着我，直到今天。
- en: 'The legal doctrine of open source was still nascent when the Apple II was created,
    so while anyone can read the schematic, it bears no open source license. It simply
    shows the patent number 4,136,359\. Back then, people just shared ideas—until
    investors with lawyers came along and tragically spoiled the commons. The software
    community defended itself with the same tools used against it: primarily, copyright
    law.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 当Apple II被创造出来时，开源法律原则仍处于萌芽阶段，因此，虽然任何人都可以阅读这张电路图，但它并没有开源许可证。它仅显示了专利号4,136,359。那时，人们只是分享想法——直到带着律师的投资者出现，悲剧性地破坏了公共资源。软件社区用同样的工具来捍卫自己：主要是版权法。
- en: Copyright law originally applied to literary and artistic works. Today it also
    applies to computer code because, like literature and art, code is a form of expressive
    speech. In the same way that you can copyright a painting of the Grand Canyon
    but not the Grand Canyon itself, you can copyright an implementation of Quicksort
    in C but not Quicksort itself. To ensure source code could be shared freely, the
    software community created open source licenses. Those licenses range from *copyleft*
    (that is, openness begets openness) arrangements like the GNU Public License (GPL)
    to more permissive agreements that boil down to “acknowledge me, don’t sue me,
    and otherwise do as you wish,” like the Berkeley Software Distribution (BSD) licenses.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 版权法最初适用于文学和艺术作品。如今，它也适用于计算机代码，因为，像文学和艺术一样，代码是一种表现性语言。就像你可以为大峡谷的画作申请版权，但不能为大峡谷本身申请版权一样，你可以为C语言中的Quicksort实现申请版权，但不能为Quicksort本身申请版权。为了确保源代码可以自由共享，软件社区创建了开源许可证。这些许可证从*版权反向*（也就是说，开放带来开放）协议，比如GNU通用公共许可证（GPL），到更宽松的协议，比如伯克利软件分发许可证（BSD），这些协议的基本内容是“给我署名，不起诉我，其他的随你便”。
- en: Hardware blueprints can be protected by copyright, too, but blueprints are functional,
    so defining “open hardware” is trickier. Virtually every piece of hardware used
    to ship with a schematic. Somewhere along the way, however, it became impossible
    for users to service hardware themselves without breaking its warranty. Devices
    are now filled with trade secrets. This shift created an artificial distinction
    between closed and open hardware. I say “artificial” because while software can
    be encrypted with ciphers so strong you’d have to build a planetsized computer
    to break them, you can reverse any hardware design into a schematic, given a powerful
    enough microscope and the software to stitch and process the resulting images.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 硬件蓝图也可以受到版权保护，但蓝图是功能性的，因此定义“开放硬件”要更复杂。几乎每一件硬件都会附带电路图。然而，随着时间的推移，用户在不破坏保修的情况下自行修理硬件变得几乎不可能。现在的设备充满了商业机密。这一变化在人为地制造了封闭硬件与开放硬件之间的区别。我之所以说“人为”，是因为虽然软件可以通过加密算法进行加密，强到你得建造一个行星大小的计算机才能破解，但只要有足够强大的显微镜和处理这些图像的软件，你就能将任何硬件设计还原成电路图。
- en: 'The internet is littered with well-intentioned but misguided attempts to apply
    software-centric open copyright licenses to hardware. But using a software license
    on a piece of hardware is like filing a marriage license for a corporate merger:
    while the license conveys the author’s intent, it may not actually do anything.
    For example, the text of the GPL doesn’t use the word *hardware* once, meaning
    a court could rule that the GPL doesn’t legally apply to hardware.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 网络上充斥着许多出于良好意图但却错误的尝试，将以软件为中心的开放版权许可应用于硬件。但在硬件上使用软件许可证，就像为公司合并申请结婚证一样：虽然许可证传达了作者的意图，但实际上可能并没有任何作用。例如，GPL的文本中一次都没有提到*硬件*，这意味着法院可能会裁定GPL不适用于硬件。
- en: Some hardware-specific open licenses have been created to help rectify the situation
    (the CERN OHL is a decent copyleft-style hardware license), but the community
    is divided over how much of the creation process has to be open for a piece of
    hardware to be considered open. For instance, if I share schematics for a board
    I designed using a closed-source tool, many would argue that the design does not
    qualify as open source. But even if I designed the board using a schematic capture
    and layout tool that was free and open source software (F/OSS) compliant, what
    about the designs of the silicon chips it uses or the bits of firmware burned
    into the silicon? Do we need to see blueprints of the particle accelerators used
    to shoot dopants into the silicon? What about the machine used to engrave the
    masks used for silicon production? It’s turtles all the way down. Hardware can’t
    be purely open source, because at some point, ideas must translate into matter,
    and access to the objects required to transform and shape matter is rarely open
    to the community.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 一些针对硬件的特定开源许可证已被创建，以帮助解决这个问题（CERN OHL 是一个不错的类 copyleft 风格硬件许可证），但社区对硬件要开放到什么程度才能被认为是开源的问题存在分歧。例如，如果我分享我用闭源工具设计的板子的原理图，很多人会认为这个设计不算开源。但即便我使用符合自由开源软件（F/OSS）标准的原理图捕捉和布局工具来设计板子，那它使用的硅芯片设计或烧录到硅片中的固件怎么办？我们是否需要看到用来将掺杂物射入硅片的粒子加速器的蓝图？用于刻蚀硅生产掩膜的机器呢？问题层层叠加。硬件不能完全开源，因为在某个阶段，创意必须转化为物质，而用于转化和塑造物质的对象很少对社区开放。
- en: There are, however, much more pragmatic approaches to open hardware than doing
    electron microscopy or demanding open silicon foundries. Simply sharing blueprints
    at a given layer of abstraction takes much less effort, is more intuitive, and
    still has a positive effect. The shanzhai’s gray-market style of open source,
    which I referred to in earlier chapters as *gongkai*, reaps the benefits of such
    sharing. In China, blueprints are shared publicly, but under dubious terms. Most
    designs still bear “confidential” or “proprietary” copyright notices, and the
    shanzhai use pirated copies of professional-grade, closed source design software
    to create derivative works. But at the end of the day, this laissez-faire openness
    creates an ecosystem where hundreds of small companies make a living repairing
    or building mobile phones. Walking through the electronics markets of Shenzhen
    made me realize that building a phone isn’t difficult or scary. Communities outside
    the shanzhai just don’t feel empowered to peer inside the box, due to restrictive
    IP laws.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，针对开源硬件也有更加务实的方法，而不是做电子显微镜检查或要求开放硅厂。仅仅在某一抽象层级上共享蓝图，所需的努力要小得多，更直观，而且仍然能带来积极的效果。我在前面章节中提到的山寨式灰色市场开源（*gongkai*）就是通过这种共享获得了好处。在中国，蓝图会公开分享，但通常是以可疑的条款。大多数设计仍然标有“机密”或“专有”版权声明，山寨商们用盗版的专业闭源设计软件来创造衍生作品。但最终，这种自由放任的开放创造了一个生态系统，成百上千的小公司通过修理或制造手机谋生。走在深圳的电子市场中，我意识到制造一部手机并不难也不恐怖。只是山寨之外的社区，由于严格的知识产权法律，通常没有动力去探索盒子里的东西。
- en: 'The gongkai ecosystem, explored in Part 2, values intellectual and physical
    property almost equally. Schematics without a supply chain are useless: you can’t
    make a phone call with blueprints for a phone. Likewise, chipmakers have no business
    if no products use their chips. As a result, hardware creators have a natural
    incentive to share information, particularly the information necessary to design
    a given module or chip into a larger system. Getting a customer to adopt chip-specific
    design IP virtually guarantees that customer will purchase the same chips when
    they’re ready to bring a product to mass production. This balance between IP and
    the supply chain has been difficult to strike in IP-centric Western ecosystems,
    where ideas are much more valuable than factories. This may partially explain
    why so many manufacturing jobs have migrated to China, an ecosystem that more
    comparably values the production of products and the ideas behind them.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二部分探讨的**公开生态系统**中，知识产权和物理资产几乎同等重要。没有供应链的原理图是没有用的：你不能通过一张电话的蓝图打电话。同样，如果没有产品使用它们的芯片，芯片制造商也无法开展业务。因此，硬件创造者有着天然的动力去分享信息，特别是设计某个模块或芯片成为更大系统的一部分所需的信息。让客户采用特定芯片的设计IP几乎可以确保该客户在准备大规模生产时会购买相同的芯片。IP和供应链之间的这种平衡在以IP为中心的西方生态系统中很难实现，因为在这些生态系统中，创意的价值远高于工厂的价值。这也许可以部分解释为什么那么多制造业岗位流向了中国——一个在产品生产和背后创意之间更具平衡的生态系统。
- en: I’m optimistic that with consistent effort, growing public awareness, and the
    right economic conditions, the world’s hardware ecosystem will eventually yield
    an open silicon foundry. However, until then, “open hardware” has to be a more
    pragmatic concept that is constrained to exist within certain layers of abstraction.
    After all, just being able to share blueprints (even if the licenses aren’t perfect
    and the formats aren’t easily edited) dramatically affects innovation. The shanzhai
    are living proof.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我乐观地认为，随着持续的努力、日益增长的公众意识和适当的经济条件，全球的硬件生态系统最终会产生一个开放的硅片代工厂。然而，在此之前，“开放硬件”必须是一个更务实的概念，受限于某些抽象层级的存在。毕竟，能够分享蓝图（即使许可证不完美且格式不容易编辑）也会极大地推动创新。山寨产品就是最好的活生生的证明。
- en: Whether it’s gongkai or open source, open hardware is about empowering users
    to be the masters of their own technology, not about any specific legal arrangement.
    Damn the torpedoes—full speed ahead! The freedom to learn, tinker, and improve
    technology is so core to my person that I view it as a basic human right. Freedom
    atrophies if not exercised, which is why I actively defend this freedom. I share
    my work openly, hoping to empower others and raise awareness that technology is
    knowable. We’re not slaves to our computers or the corporations that build them.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 无论是公开还是开源，开放硬件的核心是赋予用户掌控自己技术的能力，而不是关于任何特定的法律安排。管它三七二十一，全速前进！学习、尝试和改进技术的自由对我来说是如此根本，以至于我视其为基本人权。如果自由不被行使，它就会萎缩，这也是为什么我积极捍卫这一自由。我公开分享我的工作，希望能够赋能他人，并提高人们对技术可知性的意识。我们不是计算机或那些构建它们的公司的奴隶。
- en: I also challenge legislative and legal attempts to curtail our freedoms. I was
    born into a DMCA-free world; I’d like to leave the world in a similar state by
    establishing that everyone has the right to understand, repair, and modify the
    things they own. This is more important than ever as we become increasingly dependent
    upon technology. If we allow technology to become a black box, we also surrender
    our agency to the companies and governments that produce and regulate it.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我还挑战那些立法和法律上的尝试，旨在限制我们的自由。我出生在一个没有DMCA的世界；我希望通过确保每个人都有权理解、修理和修改他们所拥有的事物，将世界留给后代时保持类似的状态。随着我们对技术的依赖日益增加，这一点变得比以往任何时候都更为重要。如果我们允许技术变成一个黑匣子，那么我们也就将我们的主权交给了生产和监管这些技术的公司和政府。
- en: 'This part of the book describes how I built three open hardware platforms:
    chumby, Novena, and chibitronics. I hope that by reading my stories, you’ll also
    realize hardware is knowable and be empowered by this knowledge.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的这一部分描述了我如何构建三个开源硬件平台：chumby、Novena和chibitronics。我希望通过阅读我的故事，你们也能意识到硬件是可以了解的，并通过这份知识获得力量。
