- en: Chapter 7. Retopology
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Sometimes it’s easier to create an object’s basic form using one method—for
    example, sculpting or combining simple primitives—before creating the final topology
    for texturing and the final renders another way, using the basic forms as a guide.
    This is what retopology allows us to do. *Retopology* is the process of creating
    new geometry over an existing mesh while maintaining the object’s basic shape
    and rebuilding its topology. Retopology allows us to split the tasks of creating
    the right shape and creating helpful topology, making it easier to produce the
    model we want.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, you’ll learn how to use Blender’s Snapping tools and other
    retopology techniques to model new geometry over the surface of highpoly, sculpted
    meshes, like the ones we sculpted in [Chapter 6](ch06.html "Chapter 6. Sculpting").
    The result will be a final mesh that captures the details of the sculpts with
    fewer polygons and produces topology that subdivides well and is suitable for
    rigging and animation.
  prefs: []
  type: TYPE_NORMAL
- en: The Basics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are several ways to retopologize, but the most direct is to use Blender’s
    projection Snapping tools to create geometry directly on the surface of the mesh
    you want to retopologize. (See [Snapping](ch04.html#snapping "Snapping") for more
    on these tools.)
  prefs: []
  type: TYPE_NORMAL
- en: Using Snapping to Retopologize
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To start retopologizing a mesh, take the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Add a new plane object in Object mode.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter **Edit mode** and turn on **Snapping**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the snapping target to **Faces** and enable **Project onto Surface**
    (see [Figure 4-10](ch04.html#snapping_icons "Figure 4-10. Snapping icons")) to
    make Blender snap selected vertices and edges onto the surface of other objects
    by projecting them from the current viewpoint.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Scale down the plane until it is the same size you want the faces to be in your
    final retopologized mesh. Next, grab and place the plane over a region of your
    mesh where you wish to start retopologizing.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Adjust the positions of the existing vertices. Then, select one edge of the
    face and start extruding out to create new faces, following the contours of the
    mesh.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Whenever you extrude a new face or grab an existing one, it will be projected
    onto the surface of any other mesh on screen (though other objects you selected
    before you entered Edit mode will be ignored).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Using the method described above, in a short time you should be able to cover
    the surface of even a complex mesh with the exact topology you want, creating
    a new mesh with the same shape as your original.
  prefs: []
  type: TYPE_NORMAL
- en: Alternative Methods for Retopology
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: There are other useful ways to retopologize quickly that are worth discussing.
    The first is to use the Shrinkwrap modifier to project simple topology over the
    surface of a mesh. With this method, you first model a basic cage around the outside
    of your original model (as shown in [Figure 7-1](ch07.html#quick_retopology_with_the_shrinkwrap_mod
    "Figure 7-1. Quick retopology with the Shrinkwrap modifier. First, create a simple
    mesh around your high-poly original. Next, add a Shrinkwrap modifier to project
    the new mesh onto the original. Here, an arm is retopologized just by extruding
    a circle along its length, roughly scaling and rotating it into place, and then
    adding Subsurf and Shrinkwrap modifiers to fit the new mesh to the sculpt.")),
    extruding areas to create the topology you want. The cage needs to match the original
    shape only roughly because the next step is to add a Subsurf (or Multires) modifier
    and a Shrinkwrap modifier to the mesh, setting your original model as the target
    for the Shrinkwrap modifier. The Shrinkwrap modifier then automatically conforms
    the new mesh to the surface of the old one.
  prefs: []
  type: TYPE_NORMAL
- en: Shrinkwrap has a few methods for doing this, and it’s best to experiment to
    see what works best for your model. I’ve generally found the most useful methods
    to be the Nearest Surface Point and Project modes. Note that there are some extra
    options for Project mode and that you’ll need to turn on both Negative and Positive
    in the direction checkboxes in order for your mesh to project in both directions
    to conform to the target (unless the surface of the new mesh is always above or
    below the surface of the target).
  prefs: []
  type: TYPE_NORMAL
- en: '![Quick retopology with the Shrinkwrap modifier. First, create a simple mesh
    around your high-poly original. Next, add a Shrinkwrap modifier to project the
    new mesh onto the original. Here, an arm is retopologized just by extruding a
    circle along its length, roughly scaling and rotating it into place, and then
    adding Subsurf and Shrinkwrap modifiers to fit the new mesh to the sculpt.](httpatomoreillycomsourcenostarchimages1538518.png.jpg)Figure 7-1. Quick
    retopology with the Shrinkwrap modifier. First, create a simple mesh around your
    high-poly original. Next, add a Shrinkwrap modifier to project the new mesh onto
    the original. Here, an arm is retopologized just by extruding a circle along its
    length, roughly scaling and rotating it into place, and then adding Subsurf and
    Shrinkwrap modifiers to fit the new mesh to the sculpt.'
  prefs: []
  type: TYPE_NORMAL
- en: This method of retopologizing works well when you want to quickly retopologize
    a sculpt that needs a better base mesh—for example, if you started a head or even
    a whole body from a cube and then wanted a base mesh with topology that does a
    better job of supporting the basic forms.
  prefs: []
  type: TYPE_NORMAL
- en: 'The Shrinkwrap method is also useful for combining models composed of multiple
    pieces into a single mesh. For example, to create a one-piece version of the Mayan
    glyphs discussed in [Chapter 6](ch06.html "Chapter 6. Sculpting"), you could project
    a simple grid mesh onto the glyphs, as shown in [Figure 7-2](ch07.html#projecting_a_grid_mesh_onto_the_glyphs_f
    "Figure 7-2. Projecting a grid mesh onto the glyphs from the Jungle Temple project
    results in a single mesh that captures all the details. This technique would make
    UV unwrapping and texturing very simple, but it would produce a much higher poly
    count. Top: The original glyphs. Bottom: The grid, projected onto the glyphs.
    Right: The modifier stack. The Shrinkwrap modifiers are repeated with a Subdivision
    Surface modifier and a Smooth modifier in between to help the second shrinkwrap
    get into all the tight corners."). Notice that I’ve repeated the Shrinkwrap and
    Subsurf modifiers to capture all the details. This repeating of modifiers is a
    useful trick, especially when you are projecting onto a mesh with a lot of sharp
    corners or deep creases and folds, because the first shrinkwrap will miss details
    that aren’t visible when looking straight at the surface of the target mesh. The
    resulting mesh can then be easily sculpted or unwrapped and textured without having
    to work with multiple part meshes.'
  prefs: []
  type: TYPE_NORMAL
- en: Another method for retopology uses Blender’s Bsurfaces add-on, which has some
    neat tools for retopology that allow you to draw lines with the grease pencil
    and have them automatically converted to a mesh, as shown in [Figure 7-3](ch07.html#retopologizing_with_bsurfaces_by_drawing
    "Figure 7-3. Retopologizing with Bsurfaces by drawing polygons with the grease
    pencil. First, draw your desired mesh with the grease pencil, crossing strokes
    where you want a vertex to be created. Then, use the Add Surface button (in Edit
    mode) to create a mesh from your strokes. Using the surface option for the grease
    pencil strokes will allow you to draw directly onto your sculpt, creating a mesh
    that follows its shape.").
  prefs: []
  type: TYPE_NORMAL
- en: '![Projecting a grid mesh onto the glyphs from the Jungle Temple project results
    in a single mesh that captures all the details. This technique would make UV unwrapping
    and texturing very simple, but it would produce a much higher poly count. Top:
    The original glyphs. Bottom: The grid, projected onto the glyphs. Right: The modifier
    stack. The Shrinkwrap modifiers are repeated with a Subdivision Surface modifier
    and a Smooth modifier in between to help the second shrinkwrap get into all the
    tight corners.](httpatomoreillycomsourcenostarchimages1538520.png.jpg)Figure 7-2. Projecting
    a grid mesh onto the glyphs from the Jungle Temple project results in a single
    mesh that captures all the details. This technique would make UV unwrapping and
    texturing very simple, but it would produce a much higher poly count. Top: The
    original glyphs. Bottom: The grid, projected onto the glyphs. Right: The modifier
    stack. The Shrinkwrap modifiers are repeated with a Subdivision Surface modifier
    and a Smooth modifier in between to help the second shrinkwrap get into all the
    tight corners.'
  prefs: []
  type: TYPE_NORMAL
- en: Retopologizing the Jungle Temple Trees
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'I created most of the Jungle Temple project using traditional modeling methods,
    without a lot of retopology. However, when blocking out the trees, I came up with
    nice placeholders by snapping curves over the surface of the background objects.
    These placeholder curves can easily be turned into more finished meshes using
    retopology. To apply this technique, take the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Create a duplicate (unlinked, SHIFT-D) of the tree placeholder. Then, convert
    it to a mesh with ALT-C▸**Mesh From Curve/Meta/Text**. This creates a mesh with
    roughly the topology we want, except that the roots and trunk are separate meshes.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Retopologizing with Bsurfaces by drawing polygons with the grease pencil.
    First, draw your desired mesh with the grease pencil, crossing strokes where you
    want a vertex to be created. Then, use the Add Surface button (in Edit mode) to
    create a mesh from your strokes. Using the surface option for the grease pencil
    strokes will allow you to draw directly onto your sculpt, creating a mesh that
    follows its shape.](httpatomoreillycomsourcenostarchimages1538522.png.jpg)Figure 7-3. Retopologizing
    with Bsurfaces by drawing polygons with the grease pencil. First, draw your desired
    mesh with the grease pencil, crossing strokes where you want a vertex to be created.
    Then, use the Add Surface button (in Edit mode) to create a mesh from your strokes.
    Using the surface option for the grease pencil strokes will allow you to draw
    directly onto your sculpt, creating a mesh that follows its shape.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Join the roots to the trunk by deleting the vertices in the areas where the
    two should join. Then, start creating new geometry to cover the join and bridge
    the gap (see [Figure 7-4](ch07.html#retopologizing_the_curve-based_trees_int "Figure 7-4. Retopologizing
    the curve-based trees into a single mesh using Blender’s Snapping tools. After
    I duplicated the original curve-based tree and converted it to a mesh, most of
    the work was done, leaving only the joins between roots and the trunk to be filled
    in.")). Select pairs of edges that roughly line up on either side of the join
    and create faces between them (**F**).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can then add some loop cuts (CTRL-R) across this face to split it into more
    even-sized quads.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Grab the new vertices this creates and release them again to snap them to the
    surface. Repeat the process to continue filling in the gaps, joining new faces
    together and trying to keep the topology as even and grid-like as you can.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Retopologizing the curve-based trees into a single mesh using Blender’s Snapping
    tools. After I duplicated the original curve-based tree and converted it to a
    mesh, most of the work was done, leaving only the joins between roots and the
    trunk to be filled in.](httpatomoreillycomsourcenostarchimages1538524.png.jpg)Figure 7-4. Retopologizing
    the curve-based trees into a single mesh using Blender’s Snapping tools. After
    I duplicated the original curve-based tree and converted it to a mesh, most of
    the work was done, leaving only the joins between roots and the trunk to be filled
    in.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Repeat the above steps for all of the joins between the roots and the trunk.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, close the open ends of the roots. It’s also worthwhile at this stage
    to adjust the density of edge loops around the roots and trunk, deleting some
    (**X**▸**Edge Loop**) in areas where they are too dense and adding them in sparser
    areas (CTRL-R).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Retopologizing the Bat Creature
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: While the original Bat Creature’s base mesh was a good start, it lacked the
    necessary topology to support all the features of the head and more detailed anatomy.
    Additionally, the wings were initially constructed and sculpted as separate pieces.
    Now, I needed to create a final mesh with more detailed topology that combines
    the two parts.
  prefs: []
  type: TYPE_NORMAL
- en: Decimation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Before using retopology, I needed to deal with the fact that the full sculpt
    was in the millions of polygons and was getting unwieldy. Of course, this was
    the reason for retopologizing it, but still, it would be good to have a stand-in
    mesh that captures the details with a lower polygon count for me to draw my new
    topology over. The answer is decimation.
  prefs: []
  type: TYPE_NORMAL
- en: '*Decimation* is a process whereby a high-poly mesh is automatically simplified
    by collapsing small edges and polygons to reduce the model’s complexity while
    losing as little detail as possible. Blender has a Decimate modifier, but it’s
    a little slow and not always effective, so I often use another open source application
    called MeshLab (*[http://www.meshlab.sourceforge.net/](http://www.meshlab.sourceforge.net/)*).
    To use MeshLab on a Blender sculpt, take the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Export your object as a wavefront object (*.obj*) file (**File**▸**Export**),
    making sure that the **Selected Only** and **Apply Modifiers** options are checked
    so that all modifiers are applied (including Multires) and that the details of
    your sculpt are preserved. This will create a fairly huge *.obj* file that contains
    your high-poly sculpted mesh.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To import your sculpt into MeshLab, just run the program and then use **File**▸**Import**
    to import your mesh in *.obj* format.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: MeshLab has a huge array of options for processing meshes, but for our purposes,
    we’ll use the Quadratic Edge Collapse Decimation tool (**Filters**▸**Remeshing**▸**Quadratic
    Edge Collapse Decimation**). This brings up a menu allowing you to specify a target
    polycount for your mesh, among other options (see [Figure 7-5](ch07.html#decimating_sculpts_in_meshlabdot_the_qua
    "Figure 7-5. Decimating sculpts in MeshLab. The Quadratic Edge Collapse Decimation
    tool allows you to set a target poly count, to which MeshLab will then reduce
    your mesh by merging close-together vertices.")).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the target poly count to around 150,000 and turn on **Planar Simplification**
    in the options. Then run the filter. After a short wait, you should be presented
    with a much lower polygon count version of your sculpt that still encompasses
    much of the detail. You can export this from MeshLab using the File menu and then
    re-import it back into Blender.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Decimating sculpts in MeshLab. The Quadratic Edge Collapse Decimation tool
    allows you to set a target poly count, to which MeshLab will then reduce your
    mesh by merging close-together vertices.](httpatomoreillycomsourcenostarchimages1538526.png.jpg)Figure 7-5. Decimating
    sculpts in MeshLab. The Quadratic Edge Collapse Decimation tool allows you to
    set a target poly count, to which MeshLab will then reduce your mesh by merging
    close-together vertices.'
  prefs: []
  type: TYPE_NORMAL
- en: Retopologizing the Body
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: With the sculpt decimated and re-imported back into Blender, I could start laying
    some new topology over it. I began by adding a new plane in Object mode and applying
    a Mirror modifier to it. Then, I turned on Projection in the Snapping tools buttons.
    Next, I grabbed my plane in Edit mode and scaled and positioned it where I wanted
    to start my retopology from (the torso, in this case).
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*At this point, I thought carefully about what density of polygons I wanted
    in the final model. Scaling the first plane up or down and working to this scale
    made a big difference in the final poly count of the retopologized mesh. I generally
    tried to work at a similar scale to most of the important details of the original
    mesh.*'
  prefs: []
  type: TYPE_NORMAL
- en: With a starting point set, I began extruding (**E**) from one edge of my original
    quad along the forms of the model (see [Figure 7-6](ch07.html#begin_by_creating_a_single_important_fac
    "Figure 7-6. Begin by creating a single important face loop quad by quad. Then,
    move on to others and fill in the areas in between.")), following the outline
    of the ribcage and torso muscles. This created a face loop that ran along an important
    form within the model. By filling in the surrounding areas and creating further
    face loops along other forms, we can work toward completely retopologizing our
    sculpt with topology that supports the forms we have sculpted. This creates a
    more efficient mesh for capturing the fine details when we subdivide it and makes
    it easy to unwrap and rig if we desire to later.
  prefs: []
  type: TYPE_NORMAL
- en: As I progressed over the model, many of the same general positions for face
    loops that I used in the base mesh were useful again. While overall the topology
    was more complex, creating face loops that ran around the armpit and shoulder
    and around the arms, legs, and neck resulted in clean, easy-to-modify topology
    (see [Figure 7-7](ch07.html#important_face_loopsdot_a_good_tip_when "Figure 7-7. Important
    face loops. A good tip when doing retopology is to view your new mesh on its own
    by pressing/(forward slash) to view just the selected objects. This will let you
    see how your retopologized mesh is progressing before pressing/to return to global
    view and continue modeling.")). Also, because the mesh was still broadly symmetrical,
    I only needed to retopologize half the body and use a Mirror modifier to fill
    in the other half.
  prefs: []
  type: TYPE_NORMAL
- en: For some areas, like the face, I began to shrink the polygons in order to pack
    more into the area’s smaller, more detailed forms. I created loops that ran around
    the eyes, nose, mouth, and outside of the ears (see [Figure 7-8](ch07.html#retopologizing_a_face_to_create_new_topo
    "Figure 7-8. Retopologizing a face to create new topology that follows the sculpted
    forms")). These loops both supported the forms of the face so that they weren’t
    lost or softened too much when subdivided and added extra density to these areas
    to allow for the addition of more details with the Multires modifier. (For specific
    tips on face topology, see [Head Topology](ch07.html#head_topology "Head Topology").)
  prefs: []
  type: TYPE_NORMAL
- en: To create a mouth cavity, I extruded back from the edge loop surrounding the
    mouth and filled in the hole (see [Figure 7-9](ch07.html#adding_a_cavity_for_the_mouth
    "Figure 7-9. Adding a cavity for the mouth")). When we return to sculpt on this
    retopologized mesh, we’ll need to resculpt this area, but the mouth will now be
    able to be opened and posed.
  prefs: []
  type: TYPE_NORMAL
- en: For objects like the wings, where it can be difficult to see into tight areas,
    it can be handy to switch to perspective view (**5**), which allows the camera
    to be moved in and around tight spaces. It can also be useful to restrict the
    view with ALT-B. This lets you select a part of your model to show in the 3D Viewport,
    allowing you to see a small area without other parts of your model getting in
    the way, as shown in [Figure 7-10](ch07.html#restricting_blenderapostrophes_view_to_a
    "Figure 7-10. Restricting Blender’s view to a small selection (ALT-B) makes it
    easier to work on tight areas. Hit ALT-B again to return the display to normal.").
  prefs: []
  type: TYPE_NORMAL
- en: '![Begin by creating a single important face loop quad by quad. Then, move on
    to others and fill in the areas in between.](httpatomoreillycomsourcenostarchimages1538528.png.jpg)Figure 7-6. Begin
    by creating a single important face loop quad by quad. Then, move on to others
    and fill in the areas in between.![Important face loops. A good tip when doing
    retopology is to view your new mesh on its own by pressing/(forward slash) to
    view just the selected objects. This will let you see how your retopologized mesh
    is progressing before pressing/to return to global view and continue modeling.](httpatomoreillycomsourcenostarchimages1538530.png.jpg)Figure 7-7. Important
    face loops. A good tip when doing retopology is to view your new mesh on its own
    by pressing/(forward slash) to view just the selected objects. This will let you
    see how your retopologized mesh is progressing before pressing/to return to global
    view and continue modeling.![Retopologizing a face to create new topology that
    follows the sculpted forms](httpatomoreillycomsourcenostarchimages1538532.png.jpg)Figure 7-8. Retopologizing
    a face to create new topology that follows the sculpted forms![Adding a cavity
    for the mouth](httpatomoreillycomsourcenostarchimages1538534.png.jpg)Figure 7-9. Adding
    a cavity for the mouth![Restricting Blender’s view to a small selection (ALT-B)
    makes it easier to work on tight areas. Hit ALT-B again to return the display
    to normal.](httpatomoreillycomsourcenostarchimages1538536.png.jpg)Figure 7-10. Restricting
    Blender’s view to a small selection (ALT-B) makes it easier to work on tight areas.
    Hit ALT-B again to return the display to normal.'
  prefs: []
  type: TYPE_NORMAL
- en: Creating new topology that bridges the join between the wings and body is as
    simple as continuing to retopologize over the join (see [Figure 7-10](ch07.html#restricting_blenderapostrophes_view_to_a
    "Figure 7-10. Restricting Blender’s view to a small selection (ALT-B) makes it
    easier to work on tight areas. Hit ALT-B again to return the display to normal."),
    which shows the mesh covering both the wing and shoulder of the Bat Creature).
    Doing so allows you to create a single mesh that combines the wings and body (see
    [Figure 7-11](ch07.html#retopologized_body_meshcomma_now_incorpo "Figure 7-11. The
    retopologized body mesh, now incorporating both the wings and body and with enough
    detail to capture the broader features of the face and musculature")).
  prefs: []
  type: TYPE_NORMAL
- en: '![The retopologized body mesh, now incorporating both the wings and body and
    with enough detail to capture the broader features of the face and musculature](httpatomoreillycomsourcenostarchimages1538538.png.jpg)Figure 7-11. The
    retopologized body mesh, now incorporating both the wings and body and with enough
    detail to capture the broader features of the face and musculature'
  prefs: []
  type: TYPE_NORMAL
- en: Retopologizing the Spider Bot
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: My goal for the Spider Bot was to turn the rough sculpt into a smooth, hard-surface
    model. To do this, I needed to replace the original, simple topology of the base
    mesh with a denser mesh, tailored to the shapes of the body. Additionally, retopology
    allowed me to embellish as I went along, turning parts of the model into hollow
    shells, adding holes, or adding supplementary details to the retopologized surface.
  prefs: []
  type: TYPE_NORMAL
- en: '![Retopologizing the body. Note how the polygons flow around the edges of the
    sculpt. Later, we’ll add support loops to refine the edge to make it sharper and
    cleaner.](httpatomoreillycomsourcenostarchimages1538540.png.jpg)Figure 7-12. Retopologizing
    the body. Note how the polygons flow around the edges of the sculpt. Later, we’ll
    add support loops to refine the edge to make it sharper and cleaner.'
  prefs: []
  type: TYPE_NORMAL
- en: Beginning with the body, I added a plane (SHIFT-A) as before, with Snapping
    turned on and set to project new geometry onto the surface of the sculpt. Next,
    I added a Mirror modifier to my plane and began following the major lines across
    the surface (see [Figure 7-12](ch07.html#retopologizing_the_bodydot_note_how_the
    "Figure 7-12. Retopologizing the body. Note how the polygons flow around the edges
    of the sculpt. Later, we’ll add support loops to refine the edge to make it sharper
    and cleaner.")). The final step was to fill in quads to complete the rest of the
    surface, while trying to keep the size and distribution of polygons even. To smooth
    out any dents in the surface, you should select an area you’ve already retopologized—avoiding
    edges and corners—and use the Smooth tool a few times to even out the distribution
    of geometry.
  prefs: []
  type: TYPE_NORMAL
- en: '![Replacing some areas of the sculpt with new, cleaner geometry. Here, cubes
    are placed by hand and subdivided a couple of times before being connected to
    the retopologized geometry.](httpatomoreillycomsourcenostarchimages1538542.png.jpg)Figure 7-13. Replacing
    some areas of the sculpt with new, cleaner geometry. Here, cubes are placed by
    hand and subdivided a couple of times before being connected to the retopologized
    geometry.'
  prefs: []
  type: TYPE_NORMAL
- en: For some parts of the sculpt, I wanted to replace the rough forms sculpted freehand
    with more precise geometry. To do this, I simply added a primitive, such as a
    cube or cylinder with approximately the right shape, and moved it into place.
    For example, in [Figure 7-13](ch07.html#replacing_some_areas_of_the_sculpt_with
    "Figure 7-13. Replacing some areas of the sculpt with new, cleaner geometry. Here,
    cubes are placed by hand and subdivided a couple of times before being connected
    to the retopologized geometry."), I added cubes to form the sockets for the legs,
    deleting their front and bottom faces and subdividing them to give the right shape
    while adjusting the surrounding geometry to fit them in.
  prefs: []
  type: TYPE_NORMAL
- en: To further refine the model, I added support loops around its main hard edges
    (see [Figure 7-14](ch07.html#using_support_loops_to_tighten_the_shape "Figure 7-14. Using
    support loops to tighten the shape of the retopologized sculpt")). You can do
    this using tools like Loop Cut (CTRL-R), Subdivide (**W**▸**Subdivide**), and
    Edge Slide (CTRL-E▸**Edge Slide**), or you can use the **Inset Faces** operator,
    which adds an edge loop around the selected faces with a constant thickness. Combining
    these operators lets you build up support loops around the key hard edges of your
    model.
  prefs: []
  type: TYPE_NORMAL
- en: '![Using support loops to tighten the shape of the retopologized sculpt](httpatomoreillycomsourcenostarchimages1538544.png.jpg)Figure 7-14. Using
    support loops to tighten the shape of the retopologized sculpt'
  prefs: []
  type: TYPE_NORMAL
- en: You can add embellishments to the retopologized mesh in several ways. For example,
    the piece on the left in [Figure 7-15](ch07.html#adding_embellishments_by_combining_retop
    "Figure 7-15. Adding embellishments by combining retopology with regular modelling
    techniques") was created by duplicating (SHIFT-D) some of the faces of the retopologized
    mesh in Edit mode and moving them up (with snapping turned off) to create a new
    piece. Then, by extruding the new part to give it some thickness and adding some
    support loops around the edges, I created a raised area on the surface of the
    model. The circular element on the head in [Figure 7-15](ch07.html#adding_embellishments_by_combining_retop
    "Figure 7-15. Adding embellishments by combining retopology with regular modelling
    techniques") was made by creating a new circle, projecting the circle onto the
    surface of the model with Blender’s Snapping tools, and then turning off snapping
    and extruding out to create a raised area. To flatten the top of it, I scaled
    the central part along its normals by changing the transform orientation for the
    3D manipulator widget to Normals and then using S▸Z▸Z▸0 to scale the selection
    along the surface normals to zero, making it perfectly flat.
  prefs: []
  type: TYPE_NORMAL
- en: '![Adding embellishments by combining retopology with regular modelling techniques](httpatomoreillycomsourcenostarchimages1538546.png.jpg)Figure 7-15. Adding
    embellishments by combining retopology with regular modelling techniques'
  prefs: []
  type: TYPE_NORMAL
- en: I repeated the same process for the abdomen (see [Figure 7-16](ch07.html#retopologizing_the_abdomendot_the_part_i
    "Figure 7-16. Retopologizing the abdomen. The part in the middle was separated
    from the main body of the abdomen to break up the shape of the abdomen a bit,
    giving it a more interesting appearance.")) and the legs (see [Figure 7-17](ch07.html#retopologizing_the_legsdot_for_some_area
    "Figure 7-17. Retopologizing the legs. For some areas, I had to either clean up
    the retopologized mesh manually or simply model new areas, such as the underside
    of the legs, from scratch. Some extra embellishments, like rivets and so on, I
    placed by hand.")). In some areas, my sculpt had lumps or areas that didn’t quite
    polish well enough while sculpting, so I had to tweak things a bit once retopology
    was finished in order to get nice clean edges.
  prefs: []
  type: TYPE_NORMAL
- en: Because I sculpted only a couple of variations for the different leg pieces,
    I had an easy time when retopologizing. Each unique piece was retopologized only
    once (as shown in [Figure 7-17](ch07.html#retopologizing_the_legsdot_for_some_area
    "Figure 7-17. Retopologizing the legs. For some areas, I had to either clean up
    the retopologized mesh manually or simply model new areas, such as the underside
    of the legs, from scratch. Some extra embellishments, like rivets and so on, I
    placed by hand.")) and then duplicated as linked duplicates to create the copies
    needed for the legs. As in the case of the body, I also used a Mirror modifier
    to mirror the leg pieces across their axis of symmetry.
  prefs: []
  type: TYPE_NORMAL
- en: Duplicating Groups of Objects
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Because I didn’t really need to copy the legs to the other side of the body
    properly at this stage, I added all of the leg pieces to the left side of the
    body as a group (CTRL-G in Object mode) and then created another instance of this
    group (SHIFT-A▸Add▸Group Instance▸*Name of group*). The result was a noneditable,
    duplicate instance of all the objects in the group. I then scaled this group by
    –1 on its *x*-axis to flip it to the other side of the body. Later, I could use
    the Make Duplicates Real operator (CTRL-SHIFT-A) to convert this group to real
    geometry (still as linked duplicates of the original objects), but for now, this
    was a convenient way to preview the entire model without creating unnecessary
    objects (see [Figure 7-18](ch07.html#combined_elements_of_the_spider_bot_that
    "Figure 7-18. The combined elements of the Spider Bot that required retopology,
    with the legs in place. The legs are mirrored to the other side of the body.")).
  prefs: []
  type: TYPE_NORMAL
- en: Tips for Retopologizing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In summary, here are some general tips to follow when retopologizing your models:'
  prefs: []
  type: TYPE_NORMAL
- en: Model the important edge loops first and then fill in the rest.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use support loops or creasing to tighten edges.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use Blender’s retopology tools to add extra embellishments to your model.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Try to keep an even polygon density, unless you are specifically adding more
    detail in a certain area.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pay attention to the silhouette of your model. Usually you will be looking at
    the area you are retopologizing face on, so be sure to look at it from other angles
    to see that it works.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Try to work with larger polys where possible. Don’t use more than you have to!
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Retopologizing the abdomen. The part in the middle was separated from the
    main body of the abdomen to break up the shape of the abdomen a bit, giving it
    a more interesting appearance.](httpatomoreillycomsourcenostarchimages1538548.png.jpg)Figure 7-16. Retopologizing
    the abdomen. The part in the middle was separated from the main body of the abdomen
    to break up the shape of the abdomen a bit, giving it a more interesting appearance.![Retopologizing
    the legs. For some areas, I had to either clean up the retopologized mesh manually
    or simply model new areas, such as the underside of the legs, from scratch. Some
    extra embellishments, like rivets and so on, I placed by hand.](httpatomoreillycomsourcenostarchimages1538550.png.jpg)Figure 7-17. Retopologizing
    the legs. For some areas, I had to either clean up the retopologized mesh manually
    or simply model new areas, such as the underside of the legs, from scratch. Some
    extra embellishments, like rivets and so on, I placed by hand.![The combined elements
    of the Spider Bot that required retopology, with the legs in place. The legs are
    mirrored to the other side of the body.](httpatomoreillycomsourcenostarchimages1538552.png.jpg)Figure 7-18. The
    combined elements of the Spider Bot that required retopology, with the legs in
    place. The legs are mirrored to the other side of the body.'
  prefs: []
  type: TYPE_NORMAL
- en: Head Topology
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The head is such a complex subject that it deserves some special attention here.
    While there is no one topology for every conceivable head, there are some important
    principles to consider. Mainly, when retopologizing a head, you should concentrate
    on creating face loops around the key features of the face, particularly the mouth
    and eyes, which will make it easy to deform the face into familiar shapes (see
    [Figure 7-19](ch07.html#headcomma_with_the_major_face_loops_high "Figure 7-19. The
    head, with the major face loops highlighted")). These principles apply whether
    you are retopologizing a sculpted head or modeling one from scratch.
  prefs: []
  type: TYPE_NORMAL
- en: By constructing the important areas of the face with nice topology first, it’s
    easier to join the rest of the head together. In general, I begin with the eyes
    and work down from the nose into the mouth. Then, I work backward through the
    cheeks, forehead, and ears. Lastly, I cover the rest of the head and on down the
    neck. By first building outward from the most important and complex parts of the
    head, you’ll have to sort out fewer problems with the topology in the areas that
    matter most.
  prefs: []
  type: TYPE_NORMAL
- en: '![The head, with the major face loops highlighted](httpatomoreillycomsourcenostarchimages1538554.png.jpg)Figure 7-19. The
    head, with the major face loops highlighted'
  prefs: []
  type: TYPE_NORMAL
- en: Eyes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'When creating or retopologizing a head, there should almost always be a clean
    ring of face loops around the eyes (see [Figure 7-20](ch07.html#eyesdot_adding_edge_loops_around_the_eye
    "Figure 7-20. The eyes. Adding edge loops around the eyes makes them much easier
    to edit, pose, and rig. Note the tear duct in the inner corner of the eye, where
    the gap between the upper and lower eyelids has been bridged. To create the eye
    socket, the innermost loop around the eyelids is simply extruded back and then
    optionally filled in to close up the hole.")). These face loops should extend
    out from the outline of the eyelid to encompass the brows, the outer area of the
    bridge of the nose, and the upper surface of the cheekbones. This ring will make
    it easy to close the eyes or raise the eyebrows or cheeks, and it mirrors the
    underlying anatomy of the face: The *orbicularis oculi* muscle surrounding the
    eye circles the eye in exactly the same fashion as this ring of face loops.'
  prefs: []
  type: TYPE_NORMAL
- en: '![The eyes. Adding edge loops around the eyes makes them much easier to edit,
    pose, and rig. Note the tear duct in the inner corner of the eye, where the gap
    between the upper and lower eyelids has been bridged. To create the eye socket,
    the innermost loop around the eyelids is simply extruded back and then optionally
    filled in to close up the hole.](httpatomoreillycomsourcenostarchimages1538556.png.jpg)Figure 7-20. The
    eyes. Adding edge loops around the eyes makes them much easier to edit, pose,
    and rig. Note the tear duct in the inner corner of the eye, where the gap between
    the upper and lower eyelids has been bridged. To create the eye socket, the innermost
    loop around the eyelids is simply extruded back and then optionally filled in
    to close up the hole.'
  prefs: []
  type: TYPE_NORMAL
- en: Mouth
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As with the eyes, the *orbicularis oris* muscle encircles the mouth and is responsible
    for widening and narrowing it (see [Figure 7-21](ch07.html#mouthdot_note_at_the_corners_of_the_mout
    "Figure 7-21. The mouth. Note at the corners of the mouth that the edge loops
    on the surface of the lips bunch up and flow around inside the mouth. Try to keep
    the same edge or face loop flowing around the outline of both the upper and lower
    lips. The easiest way to do this is to start with this edge loop and work inward.")).
    To make it easy to produce common motions of the mouth, we’ll create a ring of
    edge loops around the mouth in the same way. This ring will also make it simple
    to define the outline of the lips and deform them easily.
  prefs: []
  type: TYPE_NORMAL
- en: Nose/Nasolabial Fold
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The complex features of the nose are the nostrils and its tip. By incorporating
    face loops that run around these areas, the rest of the nose becomes relatively
    easy to define.
  prefs: []
  type: TYPE_NORMAL
- en: '![The mouth. Note at the corners of the mouth that the edge loops on the surface
    of the lips bunch up and flow around inside the mouth. Try to keep the same edge
    or face loop flowing around the outline of both the upper and lower lips. The
    easiest way to do this is to start with this edge loop and work inward.](httpatomoreillycomsourcenostarchimages1538558.png.jpg)Figure 7-21. The
    mouth. Note at the corners of the mouth that the edge loops on the surface of
    the lips bunch up and flow around inside the mouth. Try to keep the same edge
    or face loop flowing around the outline of both the upper and lower lips. The
    easiest way to do this is to start with this edge loop and work inward.'
  prefs: []
  type: TYPE_NORMAL
- en: The nasolabial fold is an important feature of the nose and is most obvious
    in snarling or older faces. Adding a face loop that runs over the bridge of the
    nose and down the sides of the mouth, connecting under or at the chin, allows
    us to define this area (see [Figure 7-22](ch07.html#nosedot_herecomma_the_face_loops_running
    "Figure 7-22. The nose. Here, the face loops running along the nasolabial fold
    and over the bridge of the nose are highlighted in blue, and a face loop running
    around the nostrils and the tip of the nose is highlighted in green. It is also
    useful to create face loops around the inside of the nostrils.")). The bridge
    of the nose is formed simply by bridging across between the loops encircling the
    two eyes.
  prefs: []
  type: TYPE_NORMAL
- en: '![The nose. Here, the face loops running along the nasolabial fold and over
    the bridge of the nose are highlighted in blue, and a face loop running around
    the nostrils and the tip of the nose is highlighted in green. It is also useful
    to create face loops around the inside of the nostrils.](httpatomoreillycomsourcenostarchimages1538560.png.jpg)Figure 7-22. The
    nose. Here, the face loops running along the nasolabial fold and over the bridge
    of the nose are highlighted in blue, and a face loop running around the nostrils
    and the tip of the nose is highlighted in green. It is also useful to create face
    loops around the inside of the nostrils.'
  prefs: []
  type: TYPE_NORMAL
- en: Ears
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Ears are highly variable from person to person, but their overall construction
    is reasonably constant. Because the ear is mainly cartilage with no musculature
    or articulation, it is a pretty static feature of the head and thus a good place
    to hide awkward triangles if necessary. By defining the helix and antihelix (the
    outer and inner curved parts of the ear, shown in blue and green respectively
    in [Figure 7-23](ch07.html#ear "Figure 7-23. The ear")) with edge loops that run
    down into the earlobe, we can make it easy to define the ear’s overall structure.
    The other main feature of the ear is the ear canal. In addition, it is sometimes
    handy when constructing the ear to try to have a single edge loop encircling the
    ear to make it easier to attach the ear to the head. One way to do this is to
    construct the ear as a separate mesh initially and then create a loop around the
    outside before placing the ear and connecting it with the head.
  prefs: []
  type: TYPE_NORMAL
- en: '![The ear](httpatomoreillycomsourcenostarchimages1538562.png.jpg)Figure 7-23. The
    ear'
  prefs: []
  type: TYPE_NORMAL
- en: In Review
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this chapter, you’ve learned how to retopologize meshes with arbitrary topology,
    be they high-poly sculpts or a collection of separate primitives, to create smooth,
    clean topology that subdivides well. We’ve discussed ways to use Blender’s Snapping
    tools to retopologize meshes, as well as alternative methods, such as the Bsurfaces
    add-on and the Shrinkwrap modifier. We moved on to using these tools to retopologize
    the meshes we created in earlier chapters with new, better topology.
  prefs: []
  type: TYPE_NORMAL
- en: In [Chapter 8](ch08.html "Chapter 8. UV Unwrapping"), we’ll unwrap this new
    topology to provide it with texture coordinates before baking and painting textures
    for our final models in [Chapter 10](ch10.html "Chapter 10. Texture Baking") and
    [Chapter 11](ch11.html "Chapter 11. Texture Painting"). The improvements that
    we’ve made to our models in this chapter will make that process easier and will
    also improve our render times when we reach [Chapter 14](ch14.html "Chapter 14. Rendering
    and Compositing").
  prefs: []
  type: TYPE_NORMAL
