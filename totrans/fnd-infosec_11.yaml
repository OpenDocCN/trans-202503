- en: '11'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '11'
- en: OPERATING SYSTEM SECURITY
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 操作系统安全
- en: '![Image](../images/common.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/common.jpg)'
- en: When you seek to protect your data, processes, and applications against concerted
    attacks, you’re likely to find weaknesses on the operating system that hosts all
    of these. The *operating system* is the software that supports the basic functionality
    of the device. The primary operating systems in current use are several varieties
    of Linux and the server and desktop operating systems offered by Microsoft and
    Apple. If you don’t take care to protect your operating systems, you have no basis
    for getting to a strong security footing.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 当你试图保护你的数据、进程和应用程序免受精心策划的攻击时，你可能会发现托管所有这些内容的操作系统存在一些弱点。*操作系统*是支撑设备基本功能的软件。当前常用的操作系统有多种Linux版本，以及由微软和苹果提供的服务器和桌面操作系统。如果你不注意保护操作系统，就没有基础建立强大的安全防线。
- en: You can mitigate threats to the operating system in several ways. One of the
    easiest methods is *operating system hardening*, or the process of decreasing
    the number of openings through which an attacker might reach you. You can use
    this technique when you’re configuring hosts (individual computers or network
    devices) that might face hostile action.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过多种方式减轻对操作系统的威胁。最简单的方法之一是*操作系统硬化*，即减少攻击者可能利用的入侵途径。当你配置可能面临敌对行为的主机（单独的计算机或网络设备）时，可以使用这种技术。
- en: You can also add applications to your operating system designed to combat some
    of the tools attackers might use against you. The most common and obvious of these,
    particularly on internet-facing devices, are the anti-malware tools that protect
    you from malicious code. The software firewalls and host-based intrusion detection
    systems discussed in earlier chapters can also block unwanted traffic or alert
    you when it passes through your systems.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以在操作系统上添加一些应用程序，旨在对抗攻击者可能用来攻击你的工具。特别是在面向互联网的设备上，最常见和明显的就是反恶意软件工具，它们能保护你免受恶意代码的侵害。前面章节中讨论的防火墙和基于主机的入侵检测系统也能阻止不必要的流量或在流量通过系统时发出警告。
- en: Other security tools can detect potentially vulnerable areas on your hosts by
    finding services that you didn’t know were running, locating network services
    known to contain exploitable flaws, and generally inspecting your systems.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 其他安全工具可以通过发现你未曾注意到正在运行的服务、定位已知存在可利用漏洞的网络服务，以及一般性地检查你的系统，来检测主机上潜在的易受攻击区域。
- en: By applying the concept of defense in depth and combining these efforts, you
    can mitigate many of the security issues on the hosts for which you’re responsible.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 通过应用深度防御的概念并结合这些努力，你可以减轻许多你负责的主机上的安全问题。
- en: Operating System Hardening
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 操作系统硬化
- en: A relatively new concept in information security, operating system hardening
    is a technique that aims to reduce the number of available avenues through which
    your operating system might be attacked. We call the sum of these areas the *attack
    surface*.[¹](notes.xhtml#ch11fn1) The larger your attack surface is, the greater
    chance an attacker has of successfully penetrating your defenses.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 操作系统硬化是信息安全中的一个相对较新的概念，它旨在减少可供攻击者攻击操作系统的途径。我们将这些区域的总和称为*攻击面*。[¹](notes.xhtml#ch11fn1)
    攻击面越大，攻击者成功突破防御的机会就越大。
- en: You can decrease your attack surface in six main ways, as shown in [Figure 11-1](#ch11fig1).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过六种主要方式减少攻击面，如[图11-1](#ch11fig1)所示。
- en: '![Image](../images/11fig01.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/11fig01.jpg)'
- en: '*Figure 11-1: The six primary means of operating system hardening*'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*图11-1：操作系统硬化的六种主要方式*'
- en: I’ll walk you through each of these strategies.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我将逐一讲解这些策略。
- en: '*Remove All Unnecessary Software*'
  id: totrans-14
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '*移除所有不必要的软件*'
- en: Each piece of software installed on your operating system adds to your attack
    surface. If you’re seeking to harden your operating system, you should take a
    hard look at the software you load onto it and ensure that you’re installing the
    bare minimum.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 安装在操作系统上的每一款软件都会增加你的攻击面。如果你想要加强操作系统的安全性，就应仔细审视你加载到系统中的软件，并确保只安装最基本的程序。
- en: If you’re preparing a web server, for instance, you’ll need to install the web
    server software, any libraries or code interpreters needed to support the web
    server, and any utilities that involve the administration and maintenance of the
    operating system, such as backup software or remote access tools. You have no
    reason to install anything else.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 比如，如果你正在准备一台网页服务器，你需要安装网页服务器软件、任何支持网页服务器所需的库或代码解释器，以及涉及操作系统管理和维护的任何工具，如备份软件或远程访问工具。你没有理由安装其他任何东西。
- en: '**MEASURE TWICE, CUT ONCE**'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**三思而后行**'
- en: Always exercise great care when making changes to operating system settings,
    tools, and software. Some of the changes you make could have unintended effects
    on the way your operating system functions, and you don’t want to learn this through
    experience on a machine that services a critical function. Research changes carefully
    before you make them.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在更改操作系统设置、工具和软件时，一定要非常小心。你所做的某些更改可能会对操作系统的功能产生意想不到的影响，而你肯定不希望通过在执行关键功能的机器上亲自体验来发现这一点。在进行更改之前，务必仔细研究这些更改。
- en: Problems begin to arise once you install other software on the machine, even
    with the best of intentions. For example, let’s say that one of your developers
    logs into the server remotely. They need to make a change to a web page, so they
    install the web development software they need. Then they need to evaluate the
    changes, so they install their favorite web browser and the associated media plug-ins,
    such as Adobe Flash and Acrobat Reader, as well as a video player to test some
    video content. Soon, not only does the system contain software that shouldn’t
    be there, but the software quickly becomes outdated since it isn’t patched or
    updated as a result of not being officially supported and maintained by the IT
    department. At this point, you have a relatively serious security issue on an
    internet-facing machine.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦在机器上安装了其他软件，即使是出于最好的意图，问题也会开始出现。例如，假设你的某个开发人员远程登录到服务器。他们需要修改一个网页，因此安装了所需的网页开发软件。接着他们需要评估更改，于是安装了自己最喜欢的网页浏览器以及相关的媒体插件，如Adobe
    Flash和Acrobat Reader，还安装了一个视频播放器来测试一些视频内容。很快，系统不仅包含了不该存在的软件，而且这些软件由于没有IT部门的正式支持和维护，未被打补丁或更新，迅速变得过时。此时，你的互联网面向机器上已经存在了一个相对严重的安全问题。
- en: '*Remove All Unessential Services*'
  id: totrans-20
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '*移除所有不必要的服务*'
- en: In the same vein, you should also remove or disable unessential *services* (software
    that loads automatically when the system starts). Many operating systems ship
    with a wide variety of services to share information over the network, locate
    other devices, synchronize the time, allow you to access or transfer files, and
    perform other tasks. Various applications might also install some services to
    provide the tools and resources they need to function.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，你还应该移除或禁用不必要的*服务*（系统启动时自动加载的软件）。许多操作系统都附带了各种各样的服务，用于通过网络共享信息、查找其他设备、同步时间、允许你访问或传输文件以及执行其他任务。各种应用程序也可能会安装一些服务来提供它们所需的工具和资源。
- en: Attempting to turn off services can be a frustrating exercise, and it might
    take some experimentation. In many cases, the services’ names don’t indicate their
    actual function, and tracking down what each of them does may require a bit of
    research. One of the best ways to start is to determine the network ports on which
    the system is listening for network connections, as this can often give you a
    clue as to what might be on the back end of the open port. For instance, if the
    system is listening on port 80, you’re likely looking for a web server service.
    Many operating systems have built-in utilities that allow you to do this, such
    as netstat on Microsoft operating systems or Nmap, discussed in [Chapter 10](ch10.xhtml).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试关闭服务可能是一项令人沮丧的任务，可能需要一些实验。在许多情况下，服务的名称并不能指示其实际功能，追踪它们的功能可能需要一些研究。开始时，最好的方法之一是确定系统监听网络连接的端口，因为这通常能给你提供关于开放端口后端服务的一些线索。例如，如果系统正在监听80端口，那么你很可能是在寻找一个网页服务器服务。许多操作系统都内建了允许你执行此操作的工具，如微软操作系统上的netstat或第[10章](ch10.xhtml)中讨论的Nmap。
- en: 'In addition to locating the devices on your networks, Nmap can allow you to
    determine network ports on which a given system is listening. (To install Nmap,
    download it from *[https://nmap.org/](https://nmap.org/)*.) Run the following
    Nmap command in your system’s command line:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 除了定位网络上的设备外，Nmap还可以帮助你确定系统正在监听的网络端口。（要安装Nmap，可以从*[https://nmap.org/](https://nmap.org/)*下载。）在系统的命令行中运行以下Nmap命令：
- en: nmap <IP address>
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: nmap <IP地址>
- en: Replace <IP address> with your device’s IP address. You’ll see results like
    those shown in [Figure 11-2](#ch11fig2).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 将<IP地址>替换为你设备的IP地址。你将看到类似于[图11-2](#ch11fig2)所示的结果。
- en: '![Image](../images/11fig02.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/11fig02.jpg)'
- en: '*Figure 11-2: Locating services using Nmap*'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '*图11-2：使用Nmap定位服务*'
- en: '[Figure 11-2](#ch11fig2) reveals several common services running on the system,
    listed here:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[图11-2](#ch11fig2)揭示了系统中运行的几种常见服务，列表如下：'
- en: '**Port 21** File Transfer Protocol (FTP), which allows files to be transferred'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**21端口** 文件传输协议（FTP），允许文件传输'
- en: '**Port 23** Telnet, which allows remote access to the device'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**23端口** Telnet，允许远程访问设备'
- en: '**Port 80** Hypertext Transfer Protocol (HTTP), which serves web content'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**80端口** 超文本传输协议（HTTP），用于提供网页内容'
- en: '**Port 443** Hypertext Transfer Protocol Secure (HTTPS), which serves web pages
    secured with Secure Sockets Layer (SSL) or Transport Layer Security (TLS)'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**443端口** 安全超文本传输协议（HTTPS），用于通过安全套接层（SSL）或传输层安全性（TLS）协议提供安全的网页'
- en: Several other ports are open as well, running services that indicate that the
    device in the example is a printer. You can use this information as a starting
    place for closing undesirable services. For example, if you didn’t intend to allow
    remote access to the system or serve web content, you’d want to take note of the
    fact that ports 21, 23, 80, and 443 are open. From there, you could attempt to
    reconfigure it in order to not run the unneeded services.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 其他几个端口也处于打开状态，运行的服务表明该示例设备是一个打印机。你可以利用这些信息作为关闭不必要服务的起点。例如，如果你不打算允许远程访问该系统或提供网页内容，你会注意到端口21、23、80和443是开放的。然后，你可以尝试重新配置该设备，以便不运行这些不需要的服务。
- en: '*Alter Default Accounts*'
  id: totrans-34
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '*更改默认账户*'
- en: Many operating systems come with standard accounts. These usually include the
    equivalent of a guest account and an administrator account. There might also be
    others, such as accounts intended for support personnel or to allow specific services
    or utilities to operate.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 许多操作系统都配有标准账户。通常包括等同于访客账户和管理员账户的账户。可能还有其他账户，例如供支持人员使用的账户，或者允许特定服务或实用程序运行的账户。
- en: In some cases, the default accounts may come equipped with excessively liberal
    permissions regulating the actions they can carry out, which can cause a great
    deal of trouble when an informed attacker gains access to them. The default accounts
    might have a standard password or no password at all. If you allow these accounts
    to remain on the system with their default settings, attackers might be able to
    stroll right in and make themselves at home.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，默认账户可能配有过于宽松的权限，允许执行它们能够进行的操作，这可能会给有经验的攻击者带来麻烦，尤其是在他们成功入侵时。默认账户可能有一个标准密码或根本没有密码。如果你允许这些账户保留在系统中，并且没有更改默认设置，攻击者可能轻松进入并占据系统。
- en: To mitigate these security risks, you should first decide whether you need these
    default accounts at all and disable or remove any you won’t be using. You can
    usually turn off or remove guest accounts and support accounts without causing
    problems. In the case of administrative accounts, which often have names such
    as *administrator*, *admin*, or *root*, you may not be able to safely remove them
    from the system without causing it to malfunction, or the operating system may
    prevent you from doing so. However, you might be able to rename these accounts
    to confound attackers who attempt to make use of them. Lastly, you shouldn’t leave
    a default password on any account, no matter its status, since those passwords
    are often documented and well known.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 为了减少这些安全风险，你应该首先决定是否真的需要这些默认账户，并禁用或删除任何你不会使用的账户。你通常可以关闭或删除访客账户和支持账户，而不会导致问题。在管理账户的情况下，通常有像*administrator*、*admin*或*root*这样的名称，你可能无法安全地从系统中删除它们，否则可能会导致系统故障，或者操作系统可能会阻止你这样做。然而，你可以尝试重命名这些账户，以迷惑那些试图利用它们的攻击者。最后，无论账户的状态如何，你都不应留下默认密码，因为这些密码通常已被记录并广为人知。
- en: '*Apply the Principle of Least Privilege*'
  id: totrans-38
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '*应用最小特权原则*'
- en: As discussed in [Chapter 3](ch03.xhtml), the principle of least privilege dictates
    that you should allow a party only the absolute minimum permission needed for
    it to carry out its function. Operating systems may put this concept into practice
    to varying extents.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如在[第3章](ch03.xhtml)中讨论的，最小权限原则要求你只给予某个方其完成任务所需的最基本权限。操作系统可以在不同程度上实践这一概念。
- en: Most modern operating systems separate tasks into those that require administrative
    privileges and those that don’t. In general, normal operating system users can
    read and write files, and perhaps execute scripts or programs, but they can do
    so only within a certain restricted portion of the file system. They generally
    can’t modify the way hardware functions, make changes to the files on which the
    operating system itself depends, or install software that can change or affect
    the entire operating system. You typically need administrative access to perform
    those activities.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数现代操作系统将任务分为需要管理员权限和不需要管理员权限的两类。一般来说，普通的操作系统用户可以读取和写入文件，可能还可以执行脚本或程序，但他们只能在文件系统的某个受限区域内进行操作。他们通常不能修改硬件的功能，不能更改操作系统本身依赖的文件，也不能安装可能会改变或影响整个操作系统的软件。通常你需要管理员权限才能执行这些操作。
- en: The administrators of UNIX and Linux-like operating systems tend to strictly
    enforce these roles. Although the administrators could allow all users to act
    with the privileges of an administrator, they rarely do so. On Microsoft operating
    systems, the exact opposite is typically true. Administrators of a Windows operating
    system are typically more apt to give users administrative rights. While Microsoft
    has gotten better at making its operating systems usable by, and useful for, nonadministrative
    users, there is still a large difference in mind-set between the two camps of
    administrators.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: UNIX 和类 Linux 操作系统的管理员往往会严格执行这些角色。虽然管理员可以允许所有用户以管理员权限操作，但他们很少这样做。在 Microsoft
    操作系统中，情况通常是完全相反的。Windows 操作系统的管理员通常更倾向于给予用户管理员权限。尽管微软在使其操作系统对非管理员用户更易用、更有用方面有所改进，但两类管理员之间的心态差异依然很大。
- en: When you allow the average system user to regularly function with administrative
    privileges, you leave yourself open to a wide array of security issues. If the
    user executes a malware-infected file or application, they do so as the administrator,
    which means that the program has considerably more freedom to alter the operating
    system and other software installed on the host. If an attacker compromises a
    user’s account and that account has been given administrative rights, the attacker
    now has keys to the entire system. Nearly any type of attack, launched from nearly
    any source, will have more impact when allowed access to administrative rights
    on a host.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 当你允许普通系统用户定期以管理员权限操作时，你就给自己带来了各种安全问题。如果用户执行了一个被恶意软件感染的文件或应用程序，他们是以管理员身份执行的，这意味着该程序拥有更大的自由度去修改操作系统以及宿主上安装的其他软件。如果攻击者入侵了用户账户，而该账户已经被赋予管理员权限，那么攻击者就掌握了整个系统的钥匙。几乎任何类型的攻击，只要获得了主机的管理员权限，都将产生更大的影响。
- en: If, instead, you limit the privileges on your systems to the minimum needed
    in order for users to perform their required tasks, you’ll go a long way toward
    mitigating many security issues. In many cases, attacks will fail entirely when
    an attacker attempts to run them from a user account with a limited set of permissions.
    This is a cheap and easy security measure you can put in place, and it’s simple
    to implement.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果相反，你将系统的权限限制到用户执行所需任务所需的最低权限，那么你将大大减少许多安全问题的发生。在许多情况下，当攻击者试图从权限受限的用户账户执行攻击时，这些攻击将完全失败。这是一种廉价且容易实施的安全措施。
- en: '*Perform Updates*'
  id: totrans-44
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '*执行更新*'
- en: To maintain strong security, you must perform regular and timely updates to
    your operating systems and applications. Researchers publish new attacks on a
    regular basis, and if you don’t apply the security patches released by the operating
    system and application vendors to mitigate those vulnerabilities, you’ll likely
    fall victim to attacks quickly.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保持强大的安全性，你必须定期及时地更新操作系统和应用程序。研究人员定期发布新的攻击方法，如果你没有及时应用操作系统和应用程序厂商发布的安全补丁来缓解这些漏洞，你很可能会迅速成为攻击的受害者。
- en: To see an example of this in action, take a look at the news regarding malware
    propagating over the internet at any given time.[²](notes.xhtml#ch11fn2) Many
    pieces of malware continue to spread by exploiting known vulnerabilities that
    have long since been patched by the software vendors. Although it pays to be prudent
    when planning to install software updates and it’s a good idea to test them thoroughly
    before doing so, it’s generally unwise to delay updating for long.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看这一操作的示例，可以查看关于恶意软件在互联网上传播的新闻。[²](notes.xhtml#ch11fn2) 许多恶意软件依然通过利用那些已经被软件供应商修复的已知漏洞继续传播。尽管在计划安装软件更新时保持谨慎是明智的，而且在安装之前彻底测试它们也是一个好主意，但通常不建议长时间拖延更新。
- en: One of the most crucial times to ensure that your system is properly patched
    is directly after you’ve finished installing it. If you connect a newly installed
    and completely unpatched system to your network, it may become compromised in
    short order, even on internal networks, because it lacks the latest patches and
    secure configurations. The best practice in such a situation is to download the
    patches onto removable media and use this media to patch the system before you
    connect it to a network.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 确保系统在安装完毕后及时打好补丁是至关重要的。如果你将一个全新安装且完全未打补丁的系统连接到网络，它可能会迅速被攻陷，即使是在内部网络上也是如此，因为它缺少最新的补丁和安全配置。在这种情况下，最佳做法是将补丁下载到可移动介质上，并在将系统连接到网络之前使用该介质打补丁。
- en: '*Turn On Logging and Auditing*'
  id: totrans-48
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '*开启日志记录和审计*'
- en: Last, but certainly not least, you should configure and turn on the appropriate
    logging and auditing features for your system, such as those that record failed
    login attempts. Although the steps for configuring such services may vary slightly
    depending on the operating system in question and its intended use, you generally
    need to be able to keep an accurate and complete record of the important processes
    and activities that take place on your systems. You should log significant events,
    such as administrative privileges being exercised, users logging in to and out
    of the system (or failing to log in), changes made to the operating system, and
    similar activities.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，但绝对不容忽视的是，你应该为你的系统配置并开启适当的日志记录和审计功能，例如那些记录失败登录尝试的功能。虽然配置这些服务的步骤可能会根据操作系统和使用目的的不同而略有不同，但你通常需要能够准确完整地记录系统上发生的重要进程和活动。你应该记录重要事件，如管理员权限的使用、用户登录和登出系统（或登录失败）、对操作系统的更改，以及类似的活动。
- en: You may also want to include additional features to supplement the tools built
    into the operating system for these purposes. You could install monitoring tools
    that alert you to issues with the system itself or anomalies that might show in
    the various system or application logs. You could also install supplementary logging
    architecture to monitor the activities of multiple machines or simply to maintain
    duplicate remote copies of logs outside the system to help ensure that you have
    an unaltered record of all activities.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可能想要增加一些额外的功能来补充操作系统内置的这些工具。你可以安装监控工具，提醒你系统本身的问题或在各种系统或应用日志中可能出现的异常。你还可以安装补充的日志架构来监控多台机器的活动，或者仅仅为确保你拥有所有活动的未被篡改记录，维护系统外部的日志备份副本。
- en: It’s also important to note that reviewing the logs is a vital part of the process.
    If you collect logs but never review them, you might as well not collect them
    at all.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 还需要注意的是，查看日志是整个过程中的一个重要环节。如果你收集了日志却从不查看它们，那么收集日志的工作几乎等同于没有进行。
- en: Protecting Against Malware
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 防护恶意软件
- en: A mind-boggling amount of malware exists on the world’s networks, systems, and
    storage devices. Using these tools, attackers can disable systems, steal data,
    conduct social engineering attacks, blackmail users, and gather intelligence,
    among other attacks.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 世界上的网络、系统和存储设备中存在大量让人瞠目结舌的恶意软件。使用这些工具，攻击者可以禁用系统、窃取数据、进行社会工程攻击、敲诈用户、收集情报等。
- en: One particularly complex and impactful example of recent malware is Triton.
    First discovered in November 2017, it apparently attempted to subvert the mechanisms
    in industrial systems that respond to abnormal operating conditions and then potentially
    cause direct harm to them.[³](notes.xhtml#ch11fn3) The device that Triton targets
    exists in a variety of systems, including nuclear facilities, and has the potential
    to cause catastrophic damage.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 一个特别复杂且具有深远影响的恶意软件示例是Triton。它首次出现在2017年11月，显然试图破坏工业系统中响应异常操作条件的机制，从而可能对这些系统造成直接损害。[³](notes.xhtml#ch11fn3)
    Triton针对的设备存在于多种系统中，包括核设施，且具有造成灾难性损害的潜力。
- en: To protect your operating systems from malware, you can use some of the tools
    outlined here.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保护你的操作系统免受恶意软件的侵害，你可以使用这里概述的一些工具。
- en: '*Anti-malware Tools*'
  id: totrans-56
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '*反恶意软件工具*'
- en: Like the intrusion detection systems discussed in [Chapter 10](ch10.xhtml),
    most anti-malware applications detect threats by either matching a file to a signature
    or detecting unusual activities. Anti-malware tools tend to depend more heavily
    on signatures than on anomaly detection (often called *heuristics* in the anti-malware
    field), largely because signatures are easier to write and detect more reliably.
    The application vendor typically updates malware signatures at least once a day,
    or more often if the need arises, because malware changes quickly.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 就像在[第10章](ch10.xhtml)中讨论的入侵检测系统一样，大多数反恶意软件应用程序通过将文件与签名进行匹配或检测异常活动来识别威胁。反恶意软件工具通常比依赖异常检测（在反恶意软件领域通常称为*启发式*）更依赖签名，这主要是因为签名更容易编写并且检测更可靠。应用程序供应商通常每天至少更新一次恶意软件签名，或者在需要时更频繁地更新，因为恶意软件变化迅速。
- en: When a tool finds malware, it might respond by killing any associated processes
    and either deleting the detected files or quarantining them so that they’re not
    able to execute. Other times, it may simply leave the files alone. Anti-malware
    tools sometimes detect other security tools or files that aren’t malware, which
    you’ll want to leave alone and ignore in the future.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 当工具发现恶意软件时，它可能通过终止任何相关进程并删除检测到的文件或将其隔离，以防止它们执行。有时，它可能只是将文件保持原样。反恶意软件工具有时会检测到其他安全工具或文件，这些工具或文件不是恶意软件，你可能希望将它们忽略并在未来避免干扰。
- en: People generally install anti-malware tools on individual systems and servers
    as a matter of course or to comply with a policy. You might also find them installed
    on proxy servers to filter malware out of the incoming and outgoing traffic. This
    is common on proxies for email, as malware often uses email to propagate. The
    tool might reject the email entirely, strip the malware out of the message body,
    or remove the offending attachment.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 人们通常会在个人系统和服务器上安装反恶意软件工具，作为常规操作或为了遵守政策。你也可能会在代理服务器上找到这些工具，用来过滤进出流量中的恶意软件。在邮件代理中这种做法较为常见，因为恶意软件经常通过邮件传播。该工具可能完全拒绝邮件、从邮件正文中去除恶意软件，或移除有问题的附件。
- en: '*Executable Space Protection*'
  id: totrans-60
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '*可执行空间保护*'
- en: Executable space protection is a technology that prevents the operating system
    and applications from using certain portions of the memory to execute code. This
    means that classic attacks, such as buffer overflows (discussed in the “What Is
    a Buffer Overflow?” box on the next page), which depend on being able to execute
    their commands in hijacked portions of memory, may not function at all. Many operating
    systems also use *address space layout randomization (ASLR)*, a technique that
    shifts the contents of the memory in use around so that tampering with it is even
    more difficult.[⁴](notes.xhtml#ch11fn4)
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 可执行空间保护是一种技术，能够防止操作系统和应用程序使用某些内存部分来执行代码。这意味着经典攻击，例如缓冲区溢出（在下一页的“什么是缓冲区溢出？”框中讨论过），依赖于能够在劫持的内存部分执行命令，但这种攻击可能根本无法实现。许多操作系统还使用*地址空间布局随机化（ASLR）*，这是一种将内存内容随机移动的技术，使得篡改内存变得更加困难。[⁴](notes.xhtml#ch11fn4)
- en: '**WHAT IS A BUFFER OVERFLOW?**'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**什么是缓冲区溢出？**'
- en: A buffer overflow attack works by inputting more data than an application is
    expecting—for example, by entering 10 characters into a field that was expecting
    only 8, as shown in [Figure 11-3](#ch11fig3).
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 缓冲区溢出攻击通过输入超出应用程序预期的数据来工作——例如，在一个预期仅为8个字符的字段中输入10个字符，如[图 11-3](#ch11fig3)所示。
- en: '![Image](../images/11fig03.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/11fig03.jpg)'
- en: '*Figure 11-3: An example of buffer overflow*'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 11-3：缓冲区溢出的示例*'
- en: Depending on the application, the extra two characters might be written somewhere
    into memory, perhaps over memory locations used by other applications or the operating
    system. It’s sometimes possible to execute commands by specifically crafting the
    excess data.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 根据应用的不同，额外的两个字符可能会被写入内存的某个位置，可能会覆盖其他应用程序或操作系统使用的内存位置。有时可以通过特意构造多余的数据来执行命令。
- en: 'Executable space protection requires two components to function: a hardware
    component and a software component. The two main CPU chip manufacturers, Intel
    and AMD, have executable space protection components. Intel calls it the Execute
    Disable (XD) bit, and AMD calls it Enhanced Virus Protection.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 可执行空间保护需要两个组件才能发挥作用：一个硬件组件和一个软件组件。两大CPU芯片制造商，英特尔和AMD，都提供可执行空间保护组件。英特尔将其称为执行禁用（XD）位，而AMD则称之为增强病毒保护。
- en: Many common operating systems, including Microsoft’s, Apple’s, and several Linux
    distributions, implement the executable space protection software component.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 许多常见的操作系统，包括微软的、苹果的以及几个Linux发行版，都实现了可执行空间保护软件组件。
- en: '*Software Firewalls and Host Intrusion Detection*'
  id: totrans-69
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '*软件防火墙和主机入侵检测*'
- en: I’ve already discussed using firewalls and intrusion detection systems on the
    network to detect and filter out undesirable traffic. You can also add a layer
    of security at the host level by implementing a similar set of tools there. Although
    network firewalls and intrusion detection systems are usually purpose-built appliances
    implemented at the network, the actual functions they perform take place via specialized
    software resident on the devices. You can install similar software directly onto
    the hosts residing on your networks. In addition, using firewalls and IDS both
    on and off your hosts can increase your layers of security.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经讨论过如何在网络上使用防火墙和入侵检测系统来检测并过滤不良流量。你还可以通过在主机层面上实现类似的一套工具来增加一层安全性。尽管网络防火墙和入侵检测系统通常是专门构建的设备，部署在网络中，但它们执行的实际功能是通过驻留在设备上的专用软件来完成的。你可以将类似的软件直接安装到驻留在你网络中的主机上。此外，在主机上和主机外使用防火墙和入侵检测系统可以增加你的安全防护层。
- en: Properly configured software firewalls add a useful layer of security to the
    hosts residing on your networks. These firewalls generally contain only a subset
    of the features you might find on a large firewall appliance, but they’re often
    capable of similar packet filtering and stateful packet inspection. They can range
    from the relatively simple versions that are built into common operating systems
    to large versions, intended for use on corporate networks, that include centralized
    monitoring and considerably more complex rules and management options.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 正确配置的软件防火墙为驻留在你网络中的主机增加了一层有用的安全防护。这些防火墙通常只包含你可能在大型防火墙设备中找到的一部分功能，但它们通常也能够执行类似的包过滤和有状态的包检查。它们的形式可以从内置于常见操作系统中的相对简单版本，到为企业网络设计的大型版本，后者包括集中监控以及更多复杂的规则和管理选项。
- en: Host-based intrusion detection systems analyze the activities on or directed
    at a host’s network interface. They have many of the same advantages as network-based
    intrusion detection systems but with a considerably reduced scope of operation.
    As with software firewalls, these tools may range from simple consumer models
    to much more complex commercial versions.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 主机型入侵检测系统分析主机网络接口上的活动或指向该接口的活动。它们与基于网络的入侵检测系统有许多相同的优点，但操作范围显著缩小。与软件防火墙类似，这些工具可能从简单的消费级版本到复杂的商业版都有。
- en: A potential flaw in centrally managed host intrusion detection systems is that,
    for the software to report an attack to the management mechanism in real time,
    the information needs to be communicated over the network. If the host in question
    is under attack via the same network, the software may not be able to do this.
    You can attempt to mitigate this issue by sending a regular beacon from the device
    to the management mechanism, allowing you to assume that there’s a problem if
    the beacon doesn’t appear, but this might not be a complete approach, as no news
    doesn’t always equal good news.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 集中管理的主机入侵检测系统可能存在的一个潜在缺陷是，为了使软件能够实时报告攻击情况，信息需要通过网络传输。如果该主机正通过同一网络受到攻击，软件可能无法完成这一任务。你可以尝试通过从设备向管理机制发送定期信标来缓解这个问题，这样如果信标没有出现，你就可以假设存在问题，但这可能不是一个完全的解决方法，因为没有消息并不总是意味着好消息。
- en: Operating System Security Tools
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 操作系统安全工具
- en: Many of the same tools you can use to evaluate your network security (discussed
    in [Chapter 10](ch10.xhtml)) can help you assess the security of your hosts. For
    example, you can use scanners to examine how your hosts interact with the rest
    of the devices on the network, or you could use vulnerability assessment tools
    to help point out particular areas that might contain applications or services
    that are vulnerable to attack—or tools already in your environment that someone
    might use against you to subvert your security. The tools I will discuss in this
    section aren’t an exhaustive list, but I’ll hit a few of the highlights.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以用来评估网络安全的许多相同工具（在[第10章](ch10.xhtml)中讨论过）也能帮助你评估主机的安全性。例如，你可以使用扫描工具检查主机如何与网络上的其他设备交互，或者你可以使用漏洞评估工具帮助指出可能包含易受攻击的应用程序或服务的特定区域，或者指出已经在你环境中的工具，攻击者可能会用它们来破坏你的安全。我要讨论的这一节中的工具并不是一个详尽无遗的列表，但我会讲解一些重点内容。
- en: '*Scanners*'
  id: totrans-76
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '*扫描器*'
- en: You can use the scanning tools mentioned in [Chapter 10](ch10.xhtml) to detect
    security flaws in your hosts. For example, you could look for open ports and versions
    of services that are running, examine banners that services display upon connection
    to give you information about things such as the version of the software, or examine
    the information your systems display over the network.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用[第10章](ch10.xhtml)中提到的扫描工具来检测主机中的安全漏洞。例如，你可以查找开放的端口和正在运行的服务版本，检查服务在连接时显示的横幅信息，这些信息可能包括软件版本，或者检查你的系统在网络上展示的信息。
- en: 'Earlier in this chapter, when I discussed operating system hardening, you learned
    how to use Nmap to discover ports that had services listening on them. Nmap has
    many uses, and it can give you considerably more information—for example, specific
    vendor or version information. [Figure 11-4](#ch11fig4) shows the results of an
    Nmap scan directed against a network printer using the following command:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章早些时候，我讨论了操作系统强化时，你学习了如何使用Nmap发现有服务监听的端口。Nmap有很多用途，它可以提供更多的信息——例如，特定的供应商或版本信息。[图11-4](#ch11fig4)展示了使用以下命令对网络打印机进行Nmap扫描的结果：
- en: nmap -sS -sU -A -v 10.0.0.121
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: nmap -sS -sU -A -v 10.0.0.121
- en: '![Image](../images/11fig04.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/11fig04.jpg)'
- en: '*Figure 11-4: Nmap results*'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '*图11-4：Nmap结果*'
- en: In this case, I used `-sS` to run a TCP SYN port scan and `-sU` to run a UDP
    port scan. I enabled OS detection, version detection, and script scanning (`-A`),
    and I enabled verbose output as it ran (`-v`). If you try this command, you’ll
    notice that it takes considerably longer to complete than the one I ran earlier.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我使用了`-sS`来运行TCP SYN端口扫描，使用`-sU`来运行UDP端口扫描。我启用了操作系统检测、版本检测和脚本扫描（`-A`），并且在运行时启用了详细输出（`-v`）。如果你尝试这个命令，你会发现它的完成时间要比我之前运行的命令长得多。
- en: In [Figure 11-4](#ch11fig4), the port listing displays several extra ports,
    as well as quite a bit of information about the specific services and versions
    that are running. The `http-title` returned tells you that this is a Brother HL-L8350CDW
    series printer. Armed with this information, you might have a much better chance
    of successfully attacking the device in question.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在[图11-4](#ch11fig4)中，端口列表显示了几个额外的端口，并且展示了有关正在运行的特定服务和版本的许多信息。返回的`http-title`告诉你这是一台Brother
    HL-L8350CDW系列打印机。掌握这些信息后，你可能会更有机会成功攻击该设备。
- en: '**YOU FOUND A WHAT?**'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**你发现了什么？**'
- en: When scanning with Nmap with OS detection enabled, you may notice that it reports
    the device fingerprints found as running something odd or even wrong entirely.
    Sometimes Nmap’s OS fingerprints can be a little skewed, so it’s often best to
    verify the output from Nmap with another tool if something looks odd.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用启用操作系统检测的Nmap进行扫描时，你可能会注意到它报告的设备指纹显示运行着一些奇怪的，甚至是完全错误的东西。有时，Nmap的操作系统指纹可能会有所偏差，因此如果某些输出看起来不对，最好通过其他工具验证Nmap的结果。
- en: In addition to the many features built into Nmap, you can create custom Nmap
    functionality of your own using the Nmap Scripting Engine, which is a custom language
    and scripting engine that enables you to add functionality to Nmap. Nmap is a
    capable tool with a dizzying array of switches, features, and capabilities. Fortunately,
    there is also a great set of documentation to refer to at *[https://nmap.org/book/man.html](https://nmap.org/book/man.html)*.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 除了Nmap内置的许多功能外，您还可以使用Nmap脚本引擎创建自定义的Nmap功能。Nmap脚本引擎是一个自定义语言和脚本引擎，允许您向Nmap添加功能。Nmap是一个功能强大的工具，拥有丰富的选项、功能和能力。幸运的是，您也可以参考一个很棒的文档，网址是*[https://nmap.org/book/man.html](https://nmap.org/book/man.html)*。
- en: '*Vulnerability Assessment Tools*'
  id: totrans-87
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '*漏洞评估工具*'
- en: Vulnerability assessment tools, which often include many of the same features
    found in a tool such as Nmap, attempt to find and report network services on hosts
    that have known vulnerabilities.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 漏洞评估工具，通常包括许多与Nmap类似的功能，旨在寻找并报告主机上的网络服务，这些服务存在已知漏洞。
- en: One such well-known scanning tool is OpenVAS (*[http://www.openvas.org/](http://www.openvas.org/)*).
    You can use OpenVAS from the command line, but it also has a convenient graphical
    interface called Greenbone, shown in [Figure 11-5](#ch11fig5). OpenVAS can conduct
    a port scan on a target and then attempt to determine what services (and which
    versions) are running on any ports it finds open. OpenVAS will then report back
    with a specific list of possible vulnerabilities for a given device.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一个著名的扫描工具是OpenVAS (*[http://www.openvas.org/](http://www.openvas.org/)*)。您可以通过命令行使用OpenVAS，但它也有一个方便的图形界面，称为Greenbone，如[图11-5](#ch11fig5)所示。OpenVAS可以对目标进行端口扫描，然后尝试确定在它发现开放的端口上运行的服务（及其版本）。OpenVAS随后会返回一个给定设备可能存在的漏洞的具体列表。
- en: '![Image](../images/11fig05.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/11fig05.jpg)'
- en: '*Figure 11-5: The OpenVAS interface*'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '*图11-5：OpenVAS界面*'
- en: OpenVAS includes a port scanner, which finds the listening services so you can
    identify vulnerabilities in them.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: OpenVAS包括一个端口扫描器，用于找到监听服务，从而帮助您识别其中的漏洞。
- en: '*Exploit Frameworks*'
  id: totrans-93
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '*利用框架*'
- en: '*Exploits* are small bits of software that take advantage of flaws in other
    software to cause them to behave in ways that their creators didn’t intend. Attackers
    commonly use exploits to gain access to systems or get additional privileges on
    those systems. As a security professional, you can also use these tools and techniques
    to assess the security of your own systems so that you can fix any issues before
    attackers find them.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '*漏洞利用*是利用其他软件中的缺陷，使其以创建者未预期的方式行为的小程序。攻击者通常使用漏洞利用来获得系统访问权限或在系统上获取更高权限。作为一名安全专家，您也可以使用这些工具和技术来评估自己系统的安全性，以便在攻击者发现问题之前修复它们。'
- en: An *exploit framework* is a collection of prepackaged exploits and tools, such
    as network mapping tools and sniffers. These frameworks make exploits simple to
    use, and they give you access to a large library of them. Exploit frameworks gained
    popularity in the first few years of the 2000s and are still going strong. Some
    notable ones include Rapid7’s Metasploit (shown in [Figure 11-6](#ch11fig6)),
    Immunity CANVAS, and Core Impact.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '*漏洞利用框架*是一个包含预打包漏洞利用和工具的集合，例如网络映射工具和嗅探器。这些框架使得漏洞利用变得简单，并提供了一个庞大的漏洞利用库。漏洞利用框架在2000年代初期变得流行，并且至今仍在使用。一些著名的漏洞利用框架包括Rapid7的Metasploit（如[图11-6](#ch11fig6)所示）、Immunity
    CANVAS和Core Impact。'
- en: '![Image](../images/11fig06.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/11fig06.jpg)'
- en: '*Figure 11-6: The Metasploit framework*'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '*图11-6：Metasploit框架*'
- en: Many exploit frameworks are graphically interfaced tools that you can run in
    much the same way as any other application functions. You can even configure some
    tools to automatically seek out and attack systems, spreading further into the
    network as they gain additional access.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 许多漏洞利用框架是图形化界面工具，您可以像运行其他应用程序一样运行它们。您甚至可以配置一些工具，自动寻找并攻击系统，随着获得更多的访问权限，它们会进一步传播到网络中。
- en: Summary
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 总结
- en: To secure your operating systems, you can start by hardening it. Hardening involves
    removing all unnecessary software and services, altering the default accounts
    on the system, applying the principle of least privilege, updating software often,
    and conducting logging and auditing.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保操作系统的安全，您可以从加固操作系统开始。加固包括移除所有不必要的软件和服务，修改系统上的默认账户，应用最小权限原则，频繁更新软件，并进行日志记录和审计。
- en: You can also implement additional software to secure your operating systems.
    Anti-malware tools can detect, prevent, and remove malware, and you can put firewall
    technology to use directly on your hosts to filter out undesirable traffic as
    it enters or exits your network interfaces. You can also install host intrusion
    detection systems to detect attacks as they come at you over the network.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以实现额外的软件来保护你的操作系统。反恶意软件工具可以检测、预防并移除恶意软件，你还可以直接在主机上使用防火墙技术，以便在网络接口进出时过滤掉不希望的流量。你还可以安装主机入侵检测系统来检测通过网络发起的攻击。
- en: Finally, you can make use of a variety of security tools to find security flaws.
    Several scanning tools, like Nmap, can give you information about your systems
    and the software running on them. Vulnerability assessment tools such as OpenVAS
    can locate specific security flaws in your services or network-enabled software.
    Additionally, you can use exploit frameworks like Metasploit to attack systems
    to gain access to them or to elevate your privilege levels. Using some of the
    same techniques that attackers use can help you to find and mitigate security
    issues.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你可以利用各种安全工具来发现安全漏洞。一些扫描工具，如 Nmap，可以为你提供关于你的系统及其运行的软件的信息。像 OpenVAS 这样的漏洞评估工具可以定位你服务或网络启用软件中的具体安全漏洞。此外，你还可以使用像
    Metasploit 这样的攻击框架，攻击系统以获取访问权限或提升你的权限级别。使用一些攻击者所使用的相同技术，可以帮助你发现并解决安全问题。
- en: Exercises
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习题
- en: What does address space layout randomization do?
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 地址空间布局随机化（ASLR）有什么作用？
- en: What is an exploit framework?
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是攻击框架？
- en: What is the difference between a port scanner and a vulnerability assessment
    tool?
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 端口扫描器和漏洞评估工具之间有什么区别？
- en: Explain the concept of an attack surface.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解释攻击面（attack surface）的概念。
- en: Why might you want a firewall on your host if one already exists on the network?
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果网络上已经有防火墙，为什么你还需要在主机上安装防火墙？
- en: What is operating system hardening?
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是操作系统强化？
- en: What is the XD bit, and why do you use it?
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是 XD 位，为什么要使用它？
- en: What does executable space protection do for you?
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可执行空间保护为你做了什么？
- en: How does the principle of least privilege apply to operating system hardening?
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最小特权原则如何应用于操作系统强化？
- en: Download Nmap from *[https://www.nmap.org/](https://www.nmap.org/)* and install
    it. Conduct a basic scan of *[scanme.nmap.org](http://scanme.nmap.org)* using
    either the Zenmap GUI or the command line (`nmap <`IP address`>` is a good place
    to start). What ports can you find open?
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 *[https://www.nmap.org/](https://www.nmap.org/)* 下载 Nmap 并安装。使用 Zenmap GUI
    或命令行 (`nmap <`IP 地址`>`) 进行基本扫描。你能找到哪些开放的端口？
