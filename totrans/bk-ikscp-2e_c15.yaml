- en: '15'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Text
  prefs: []
  type: TYPE_NORMAL
- en: As you would expect with a vector editor, any text you add to an Inkscape drawing
    remains fully editable *as text* at any time, no matter what styling, filters,
    or transformations you apply to it. Creating and editing text objects is the domain
    of the Text tool that allows you to type or delete words, wrap text into columns
    (manually or automatically), apply style to text spans, adjust kerning and spacing,
    and so on.
  prefs: []
  type: TYPE_NORMAL
- en: Inkscape does not compete with word processors or desktop publishing software;
    it is not very convenient for handling large amounts of text. Inkscape has no
    structural formatting tools, such as automatic headings or style libraries. Instead,
    as a visual design tool, Inkscape will give you complete and precise control over
    every glyph, word, and paragraph, in most cases without sacrificing text editability.
  prefs: []
  type: TYPE_NORMAL
- en: 15.1 Basic Editing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you have an existing text object, select it and switch to the Text tool (F8
    or T). This places the text editing cursor (a blinking vertical line) at the end
    of the text object. You can now click anywhere within the text to position the
    cursor, or you can move the cursor with the arrow keys. Or, in the Selector tool,
    just double-click a text object—this will switch tools, select the object, and
    place the cursor where you clicked, all at the same time.
  prefs: []
  type: TYPE_NORMAL
- en: Clicking or double-clicking a text object is only possible when your mouse cursor
    has an "I" shape and a blue frame appears around the text—these are the indications
    that you are over a clickable text object ([Figure 15-1](#fig15-1)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](16/tx-cursor.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 15-1: Placing the text editing cursor by clicking'
  prefs: []
  type: TYPE_NORMAL
- en: Typing and editing text works the same way in Inkscape as in a word processing
    application. Use Delete or Backspace to erase characters (including newlines);
    press Enter to start a new line. You can move the text cursor with the arrow keys
    (with Ctrl to jump by words), Home and End (with Ctrl to move to the beginning
    or end of the text object), and Page Up and Page Down. The canvas will automatically
    scroll, when necessary, so that the text cursor is always visible.
  prefs: []
  type: TYPE_NORMAL
- en: If, for some reason, editing text on the canvas is inconvenient, open the**Text
    and Font** dialog ([15.3.2](#section15.3.2)) and, on the **Text** tab, edit the
    selected text object in a standard text area. Unfortunately, clicking Apply loses
    any formatting you may have applied to spans within your text ([15.3.1](#section15.3.1)),
    but if you just open the dialog to read the text or copy it to the clipboard without
    making any changes, it is perfectly safe.
  prefs: []
  type: TYPE_NORMAL
- en: 15.1.1 Selecting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can select inside a text object by dragging *over* some characters (as with
    clicking, you must start with a character body, not empty space) or by moving
    the text editing cursor with the Shift-arrow keys ([Figure 15-2](#fig15-2)). This
    *text selection*, visible as a greenish-blue rectangle overlay, is not to be confused
    with the program-wide *object selection* ([Chapter 5](c05.xhtml#ch5)); text selection
    is unique to the Text tool and allows you to style, kern, or delete spans inside
    the selected text object. When editing text with the Text tool, pressing Ctrl-A
    selects not all objects but all text inside this text object.
  prefs: []
  type: TYPE_NORMAL
- en: '![](16/tx-selection.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 15-2: Text selection with the Text tool'
  prefs: []
  type: TYPE_NORMAL
- en: Copying a text selection with Ctrl-C (or cutting with Ctrl-X) and pasting at
    the cursor location with Ctrl-V is an easy way to move pieces of text around—within
    the same text object, among text objects in the same document, across documents,
    or even between Inkscape and other applications. For example, you can copy a piece
    of text in a word processor and insert it into a text object in Inkscape. Copy/paste
    in Inkscape never transfers formatting, only textual content.
  prefs: []
  type: TYPE_NORMAL
- en: 15.2 Types of Text Objects
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: How do you create a new text object? This depends on the type of object you
    want to create. Text objects in Inkscape can belong to different types that are
    broadly similar but differ in details of their capabilities and behavior.
  prefs: []
  type: TYPE_NORMAL
- en: 15.2.1 Regular Text
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To create a *regular text object*, switch to the Text tool (F8), click the canvas
    (not an existing text object!) to place a text cursor, and start typing. (If you
    drag instead of click, you will create a text-in-a-shape object, [15.2.2](#section15.2.2).)
    Press Enter to start a new line.
  prefs: []
  type: TYPE_NORMAL
- en: Once you have typed at least one character, the new text object is added to
    the document. At that point, you can switch to any other tool to deal with the
    newly created object as you would with any other object—for example, transform
    it with the Selector tool ([Figure 15-3](#fig15-3)), paint it by clicking a palette
    color (this can be done in any tool), or draw a gradient across it with the Gradient
    tool.
  prefs: []
  type: TYPE_NORMAL
- en: '![](16/tx-new.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 15-3: The status bar description of a text object in the Text and Selector
    tools'
  prefs: []
  type: TYPE_NORMAL
- en: 15.2.1.1 Line Wrapping in Regular Text
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: In regular text objects, by default there's no automatic line wrapping; you
    need to press Enter to start a new line. If you don't do that and just keep typing,
    there's no limit to the length of the line.
  prefs: []
  type: TYPE_NORMAL
- en: To enable automatic line wrapping in a regular text object, notice the diamond-shaped
    handle at the right end of the text. (The smaller square mark on the left is the
    baseline origin mark, which is not draggable.) As soon as the handle is moved
    away from its default position, the text displays two vertical guides that define
    the column into which the text is flown (these guides are visible only in the
    Text tool). You can adjust the width by dragging the handle. Any text line wider
    than the column is wrapped, as shown in [Figure 15-4](#fig15-4).
  prefs: []
  type: TYPE_NORMAL
- en: '![](16/tx-reg-reflow.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 15-4: Wrapping long lines in a regular text object'
  prefs: []
  type: TYPE_NORMAL
- en: In right-to-left text ([15.4.1](#section15.4.1)), the baseline origin mark is
    on the right and the column width handle is on the left, and you can adjust only
    the guide on the left of the column. With vertical text, the guides are horizontal;
    you can reflow text by moving the bottom guide.
  prefs: []
  type: TYPE_NORMAL
- en: Regular text can be aligned to the left, center, or right ([15.4.2](#section15.4.2)),
    but full justification is not available even when the text is autowrapped into
    a column. If you need a fully justified column of text, use text-in-a-shape ([15.2.2](#section15.2.2)).
  prefs: []
  type: TYPE_NORMAL
- en: If the column is narrower than the longest word of your text, Inkscape faces
    the tough choice of what to do with the words that don't fit. Inkscape has no
    idea how to break words properly (if only because word-breaking rules depend on
    language, and Inkscape does not know what language your text is in); one thing
    it does try is to break any hyphenated words at the hyphen. Eventually, Inkscape
    gives up and truncates the text—hiding everything starting from the first word
    that doesn't fit; such a truncated text object displays red column guides instead
    of blue. To fix a truncated text object, make the column wider, or reduce the
    font size, or edit the text so that all words fit.
  prefs: []
  type: TYPE_NORMAL
- en: 15.2.2 Text-in-a-Shape
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As you have seen, a regular text object may or may not have a specific column
    width, depending on whether you have dragged the diamond handle. By contrast,
    a *text-in-a-shape* always has its own intrinsic width and height—more generally,
    a *frame*—and it automatically wraps the text to fill its frame. When typing in
    such a text object, pressing Enter starts a new paragraph. A text-in-a-shape can
    be *truncated* if it is too long to fit completely into the frame (compare [15.2.1.1](#section15.2.1.1)).
  prefs: []
  type: TYPE_NORMAL
- en: 15.2.2.1 Internal Frame
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The easiest way to create a text-in-a-shape is by *dragging*, not clicking,
    over the canvas using the Text tool. This creates a rectangular frame, much like
    dragging with the Rectangle tool creates a rectangle ([Figure 15-5](#fig15-5)).
    After releasing the mouse, you can type or paste your text, which will wrap upon
    reaching the edge of the frame. You can also drag the handle in the bottom-right
    corner to resize the frame and see the text automatically reflow to the new size.
  prefs: []
  type: TYPE_NORMAL
- en: '![](16/tx-flowed.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 15-5: Text-in-a-shape with an internal frame'
  prefs: []
  type: TYPE_NORMAL
- en: Text is wrapped at word boundaries; automatic hyphenation is not supported.
    If there's more text than fits the frame, extra text (starting at a word boundary)
    will be truncated—hidden but not lost; if you reduce font size, or delete some
    text, the end will move in and become visible.
  prefs: []
  type: TYPE_NORMAL
- en: 'This kind of text object is said to have an *internal frame*: its rectangular
    frame is part of the object itself, not a separate object. For example, when you
    transform the text, it is transformed with its frame as a whole.'
  prefs: []
  type: TYPE_NORMAL
- en: 15.2.2.2 External Frame
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Instead of its own internal rectangular frame, a text object can be linked to
    any external path as its frame. For this, select two objects—any text (regular
    or text-in-a-shape) and a path—and choose**Text ▶ Flow into Frame**, as shown
    in [Figure 15-6](#fig15-6).
  prefs: []
  type: TYPE_NORMAL
- en: '![](16/tx-flowed-external.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 15-6: A text object with an external frame'
  prefs: []
  type: TYPE_NORMAL
- en: This command does not delete or hide the frame object; the text and the frame
    remain separate, and the text is said to be *linked* to its frame, much like a
    clone is linked to its original ([Chapter 16](c16.xhtml#ch16)). Editing the shape
    of the frame object forces the linked text to reflow to the changed shape, but
    styling the frame (for example, hiding it by making fully transparent) does not
    affect the text.
  prefs: []
  type: TYPE_NORMAL
- en: You can move or transform the linked text separately from the frame, but moving
    or transforming the frame affects the text as well (compare with the Move according
    to transform clone compensation mode, [16.2](c16.xhtml#section16.2)). Selecting
    a linked text object and pressing Shift-D will select its frame, just as it does
    with a clone and its original ([16.4](c16.xhtml#section16.4)).
  prefs: []
  type: TYPE_NORMAL
- en: To get rid of the frame, use the **Unflow** command in the **Text** menu. This
    deletes the text-in-a-shape's internal frame (or breaks the link to the external
    frame) and converts it into a regular text object. Each paragraph becomes a line.
  prefs: []
  type: TYPE_NORMAL
- en: 15.2.3 Flowed Text
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you open a file created in an old version of Inkscape, you may find another
    type of text object that looks and behaves almost exactly like text-in-a-shape
    but is called *flowed text* in the status bar description. This type of object
    (represented in SVG by a non-standard `svg:flowRoot` element and its children)
    remained, for many years, the only way to create automatically wrapped text in
    Inkscape. This kind of flowed text was never supported outside Inkscape, and while
    you can still view and edit flowed text objects in old Inkscape files, it is a
    good idea to convert them to regular wrapped text objects by the Text ▶ Convert
    to Text command.
  prefs: []
  type: TYPE_NORMAL
- en: 15.2.4 Text on a Path
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Aside from using a path as a frame ([15.2.2.2](#section15.2.2.2)), a single-line
    text object in Inkscape can link to a path to use it as a guide to bend the text's
    baseline. Just select both the text and the path and choose **Text ▶ Put on Path**,
    as shown in [Figure 15-7](#fig15-7).
  prefs: []
  type: TYPE_NORMAL
- en: '![](16/tx-onpath.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 15-7: Putting text on a path'
  prefs: []
  type: TYPE_NORMAL
- en: 'This connection is live—both the text and the path remain editable, and reshaping
    the path makes the text follow the new shape. If the text is longer than the path,
    its end is hidden (but it is still there: if you delete some text at the beginning,
    the end will move in and become visible). If the path consists of more than one
    subpath ([12.1.1](c12.xhtml#section12.1.1)), the text will continue from one subpath
    to the next at character boundaries (but not word boundaries).'
  prefs: []
  type: TYPE_NORMAL
- en: 'It makes no difference whether the path has any stroke or fill; the only thing
    that matters for text is its geometric shape. Path direction also matters: if
    you want to put text on the other side of the path and in the reverse direction,
    choose **Path ▶ Reverse** on the path, as [Figure 15-8](#fig15-8) demonstrates.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](16/tx-onpath-direction.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 15-8: Path direction affects the text on the path.'
  prefs: []
  type: TYPE_NORMAL
- en: You can easily hide the guide path by making it fully transparent or by removing
    both its fill and stroke. Transforming the path (for example, moving it around)
    affects its linked text-on-a-path; however, you can scale, rotate, or move the
    text object away from its path and it will keep this separate transformation without
    breaking the link.
  prefs: []
  type: TYPE_NORMAL
- en: More than one text object can be linked to the same path. Use **Text ▶ Remove
    from Path** to convert text on a path into regular linear text, cutting its link
    to the path.
  prefs: []
  type: TYPE_NORMAL
- en: 15.3 Styling Text
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In many ways, text objects are no different from other object types: you can
    transform and style (choose fill or stroke, adjust opacity, apply filters) a text
    object as a whole without ever going into the Text tool (and, of course, without
    losing the ability to edit the text). However, only the Text tool allows you to
    change style properties specific to text (such as font family and font size) as
    well as apply style to *spans* (fragments) inside a text object.'
  prefs: []
  type: TYPE_NORMAL
- en: The two places where you can change text styles are the controls bar of the
    Text tool (above the canvas) and the Text and Font dialog (Shift-Ctrl-T). The
    former is faster and more convenient, while the latter provides access to additional
    options.
  prefs: []
  type: TYPE_NORMAL
- en: 15.3.1 Non-Text Style Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When you have a text span selected in the Text tool, most (but not all) style-changing
    commands and style-reporting UI elements apply to that text span, not to the entire
    text object. For example, you can easily change the color of a span of text by
    selecting it and clicking a color swatch in the palette, using the Fill and Stroke
    dialog ([8.2](c08.xhtml#section8.2)) or color gestures ([8.7](c08.xhtml#section8.7)),
    as shown in [Figure 15-9](#fig15-9). Similarly, you can assign or remove a stroke
    or adjust opacity of the span. However, blur or other filters cannot be applied
    to a span; if you try this, the entire text object will be blurred or filtered.
  prefs: []
  type: TYPE_NORMAL
- en: Assigning a gradient or pattern fill to a span is possible, though it is tricky.
    You need to create a separate object with the gradient or pattern you want, copy
    it (Ctrl-C), then select a text span with the Text tool, and paste the style (Shift-Ctrl-V)
    onto it. Unfortunately, you cannot then edit such a gradient on a span using handles
    in the Gradient tool.
  prefs: []
  type: TYPE_NORMAL
- en: '![](16/tx-spans.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 15-9: Styling text spans'
  prefs: []
  type: TYPE_NORMAL
- en: In general, the paste style trick is handy when styling text spans—it allows
    you to transfer styles (including not only color but also font, size, letter spacing,
    and so on) between objects and parts of your text. To copy a style from a text
    span, you don't even need to select it; just place the text editing cursor anywhere
    inside the span and press Ctrl-C.
  prefs: []
  type: TYPE_NORMAL
- en: 15.3.2 Fonts and Variants
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Inkscape allows you to use any outline fonts (TrueType, OpenType, Type 1) that
    are installed in your operating system. You can also provide additional fonts,
    that only Inkscape will be able to use, by placing them in the folder inkscape/fonts
    under the Inkscape data folder that you can look up in the Preferences, System
    page. In addition, you can instruct Inkscape to look into other font folders by
    listing them in the Preferences, Tools ▶ Text page under Additional font directories.
  prefs: []
  type: TYPE_NORMAL
- en: A list of all font families (not individual fonts), with graphic samples for
    each family, opens from the controls bar of the Text tool; you can choose a family
    by scrolling through the list. If you know the name of the font you need, click
    to place the cursor in the editing field (or press Alt-X) and start typing; a
    drop-down list of possible completions will appear ([Figure 15-10](#fig15-10)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](16/tx-fontchooser.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 15-10: Choosing a font family and style in the Text tool'
  prefs: []
  type: TYPE_NORMAL
- en: Most fonts contain variants (styles) within the same family; apart from italic/slanted
    and weight variations (light, medium, bold, heavy, and so on), they may include
    variations along the width axis (condensed or stretched). On the controls bar,
    the list of styles for the selected family is to the right of the family drop-down.
    When editing, the Ctrl-I and Ctrl-B shortcuts will try to toggle the selected
    text to the italic or slanted (with the same weight, if possible) or to the bold
    style of the current font.
  prefs: []
  type: TYPE_NORMAL
- en: The same lists of font families and styles are also available in the Text and
    Font dialog (Shift-Ctrl-T, [Figure 15-11](#fig15-11)). Here, instead of a small
    generic sample, you can see a preview of the selected text object in the chosen
    font with the chosen font size. Once you choose the style you want in the dialog,
    click **Apply** for the changes to take effect.
  prefs: []
  type: TYPE_NORMAL
- en: '![](16/tx-dialog.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 15-11: The Text and Font dialog'
  prefs: []
  type: TYPE_NORMAL
- en: 15.3.2.1 Variable fonts
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'A *variable* font, instead of providing distinct styles as separate font files,
    has one or more *design axes* that allow you to smoothly vary some font parameter—most
    commonly weight or width. This is a feature of OpenType fonts (OpenType is a successor
    to TrueType); a number of freely available fonts, including those on Google Fonts
    ([https://fonts.google.com/](https://fonts.google.com/)), make use of it. Inkscape
    supports variable fonts in its Text and Font dialog: when a variable font is selected,
    its design axis (or axes) is shown as slider (or sliders) above the font sample
    that reflects, live, the values of the variable parameters.'
  prefs: []
  type: TYPE_NORMAL
- en: 15.3.3 Font Size
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In many cases, you don't even need to set font size numerically; you can simply
    scale an entire text object with the Selector tool ([6.2](c06.xhtml#section6.2))
    or keyboard shortcuts. Otherwise, use the font size controls on the controls bar
    (with a unit chooser) or in the Text and Font dialog (which always uses px units).
    Both font size controls will then take this scaling into account when displaying
    font sizes; for example, if you set a text object to 12 px font size but then
    scale it up twice, you will see its font size reported as 24 px.
  prefs: []
  type: TYPE_NORMAL
- en: 15.4 Text Layout
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 15.4.1 Writing Mode and Orientation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Not all languages write left to right, top to bottom like English. Some languages
    are written right-to-left (for example, Hebrew), and some prefer vertical placement
    of glyphs (for example, Japanese).
  prefs: []
  type: TYPE_NORMAL
- en: 'Of the three drop-down switches that control language-specific text parameters
    (at the far right end of the Text tool''s controls bar), the first one switches
    the text to vertical (top to bottom). For vertical text, it also controls the
    *block progression* (blocks in this context refer to paragraphs or lines within
    a paragraph) that can go right to left or left to right. This gives three options
    in this switch: horizontal text, vertical text with right-to-left block progression,
    and vertical text with left-to-right block progression.'
  prefs: []
  type: TYPE_NORMAL
- en: The second switch controls the orientation of individual glyphs inside vertical
    text. This makes a distinction between those characters that are normally always
    in horizontal text (such as those in western languages) and those that are usual
    in vertical text (such as Japanese characters). The three options—mixed, upright,
    and sideways—are illustrated in [Figure 15-12](#fig15-12).
  prefs: []
  type: TYPE_NORMAL
- en: '![](16/tx-direction.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 15-12: Text direction, block progression, and glyph orientation options'
  prefs: []
  type: TYPE_NORMAL
- en: The last of the three buttons sets the inline writing direction of the text
    (left-to-right or right-to-left). Normally, right-to-left text (such as Hebrew)
    works just as well without touching this option; it does not actually reverse
    the order of characters in your string but marks your text as right-to-left as
    well as reverses alignment and changes the way cursor movement and selection keys
    work.
  prefs: []
  type: TYPE_NORMAL
- en: 15.4.2 Alignment
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Each text object has a certain alignment: *left* (default), *right*, or*center*,
    which you can choose with the drop-down on the Text tool''s controls bar ([Figure 15-13](#fig15-13)).
    For example, when editing left-aligned text, pressing Enter moves the cursor horizontally
    to the*beginning* of the next line, and the text you type grows to the right of
    this alignment edge, moving the cursor with it. In contrast, with right-aligned
    text, Enter moves the cursor under the *end* of the previous line, and the text
    you type shifts to the left while the cursor remains in place.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](16/tx-align.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 15-13: Text alignment and justification'
  prefs: []
  type: TYPE_NORMAL
- en: 'For text-in-a-shape, there''s an additional alignment option: *justify*, which
    expands the spaces in each line to make both edges of the text column line up.'
  prefs: []
  type: TYPE_NORMAL
- en: 15.4.3 Subscript and Superscript
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To turn part of your text into superscript, select it and click the superscript
    button (**x^y**) on the controls bar. For example, type `1.496 × 1011`, then select
    the last two characters and turn them into a superscript to record the Earth to
    Sun distance in meters in scientific notation: `1.496 × 10^(11)`. Another button
    produces subscript; if you want to have both subscript and superscript attached
    to the same character, as in*T*²[2*n* + 1], you will likely need to apply some
    horizontal kerning ([15.4.4](#section15.4.4)) to make it look good.'
  prefs: []
  type: TYPE_NORMAL
- en: 15.4.4 Kerning
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When working with text, Inkscape gives you the freedom of moving each individual
    character and adjusting the spacing between letters.
  prefs: []
  type: TYPE_NORMAL
- en: Position your cursor before a character and press Alt-→. The rest of the line
    to the right of the cursor will move to the right by 1 screen pixel at the current
    zoom; with Shift-Alt, the arrow keys move 10 times the distance of Alt (compare
    [6.5.1](c06.xhtml#section6.5.1)). That's an interactive way to adjust the*kerning
    interval* between the two characters; you can also do it numerically via the Horizontal
    kerning value in the controls bar (which works in px units).
  prefs: []
  type: TYPE_NORMAL
- en: You can kern any pair of characters closer together or further apart to achieve
    the best overall balance and visual rhythm in a line of text. You can also kern
    spaces to move*words* closer together or farther apart as needed. To visualize
    the kerning you have added, simply select the text (Ctrl-A). Whenever two letters
    were manually kerned closer together, their selection rectangles will overlap,
    and you will see a darker band; contrastingly, a kerned-out pair of characters
    will have a gap in the selection overlay between them ([Figure 15-14](#fig15-14)).
    The width of the darker band or gap corresponds exactly to the amount of kerning
    you have added at that point.
  prefs: []
  type: TYPE_NORMAL
- en: '![](16/tx-kern.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 15-14: Adjusting kerning intervals in a string'
  prefs: []
  type: TYPE_NORMAL
- en: By zooming in closer, you can make finer kerning adjustments. Don't get carried
    away, however; always zoom out to see how your interval looks in the context of
    the entire text line.
  prefs: []
  type: TYPE_NORMAL
- en: Horizontal kerning is especially useful for text on a path. As you can see in
    [Figure 15-7](#fig15-7), letters tend to be too close together in concave bends
    and too far apart on convex arcs. With manual kerning, it is easy to counteract
    this effect and make the characters spread evenly along the curve.
  prefs: []
  type: TYPE_NORMAL
- en: Many fonts contain built-in kerning instructions; for example, a font may specify
    that whenever *Y* and *a* are next to each other, they are kerned together by
    0.03 of the font size. Inkscape honors these automatic font kerning instructions.
    However, if you try to adjust kerning in such a pair of characters manually, you
    will disable the automatic kern. This is why the first Alt-← to kern *Y* and *a*
    closer together may result in these two letters jumping, unexpectedly, further
    apart. Don't worry; just keep pressing Alt-← to achieve the interval you need.
  prefs: []
  type: TYPE_NORMAL
- en: You can also kern characters *vertically* by pressing Alt-↑ and Alt-↓ or via
    another controls bar widget. A combination of horizontal and vertical kerning
    gives you an absolute freedom in positioning individual letters in a text string,
    as [Figure 15-15](#fig15-15) demonstrates.
  prefs: []
  type: TYPE_NORMAL
- en: '![](16/tx-kern-v.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 15-15: Combining horizontal and vertical kerning'
  prefs: []
  type: TYPE_NORMAL
- en: If you select one or more characters (with a mouse drag or by pressing Shift-arrows),
    kerning shortcuts will effectively move the selected fragment relative to the
    rest of the text by inserting two opposite kerns before and after it, as shown
    in [Figure 15-16](#fig15-16).
  prefs: []
  type: TYPE_NORMAL
- en: '![](16/tx-kern-move.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 15-16: Moving a selection via kerning shortcuts'
  prefs: []
  type: TYPE_NORMAL
- en: Finally, you can *rotate* any character in a text object by pressing Alt-[ or
    Alt-] when the cursor is before that character ([Figure 15-17](#fig15-17)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](16/tx-kern-rot.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 15-17: Rotating characters'
  prefs: []
  type: TYPE_NORMAL
- en: This rotation is around the character's *baseline origin*—its leftmost point
    on the *baseline* (the line on which lie the bottoms of most letters without extenders,
    such as *i* or *m*). The baseline origin of the first character in a selected
    text object is shown on the canvas as a little square in the Selector and Text
    tools.
  prefs: []
  type: TYPE_NORMAL
- en: 15.4.5 Letter, Word, and Line Spacing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: What if you want to kern all characters in your text—not just some particular
    pair—closer together or farther apart? This kind of adjustment is called *letter
    spacing* (in other software, it may be called *tracking*). Select all or part
    of the text and press Alt-> to space the characters apart or Alt-< to move them
    closer together (these are the same shortcuts that scale an object in the Selector
    tool), or modify the **Spacing between letters** value in the Text tool's controls
    bar ([Figure 15-18](#fig15-18)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](16/tx-letterspacing.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 15-18: Spacing letters further apart (top) or squeezing them together
    (bottom)'
  prefs: []
  type: TYPE_NORMAL
- en: The ideal amount of letter spacing depends on the final viewing size of your
    text. Usually, a smaller font size requires more airy spacing, while larger text
    should be tighter.
  prefs: []
  type: TYPE_NORMAL
- en: Similarly, you can adjust the spacing between words—that is, change the default
    width of the space character. For example, if you put 10 in the Spacing between
    words field on the controls bar, each space in the selected text will be 10 px
    wider than the default.
  prefs: []
  type: TYPE_NORMAL
- en: To adjust the spacing between lines in a text object, press Ctrl-Alt-> or Ctrl-Alt-<.
    On the controls bar, the corresponding Spacing between baselines value can be
    expressed in relative units (lines or %, which refer to the size of the font)
    or in absolute units such as inches ([Figure 15-19](#fig15-19)). For example,
    text in a 20 px font with line spacing set to 1.2 lines will have 24 px between
    adjacent baselines. Changing line spacing affects the entire text object, regardless
    of whether any text is selected.
  prefs: []
  type: TYPE_NORMAL
- en: '![](16/tx-linespacing.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 15-19: Adjusting line spacing'
  prefs: []
  type: TYPE_NORMAL
- en: 15.4.6 Ligatures
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Some fonts have, in addition to single characters, *ligatures*—combined glyphs
    for pairs (or triples, or more) of certain characters. By default, Inkscape uses
    the ligatures defined in the font. For example, the Alef font has a ligature for
    the characters "fi," as [Figure 15-20](#fig15-20) demonstrates.
  prefs: []
  type: TYPE_NORMAL
- en: '![](16/tx-ligature.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 15-20: Ligatures in Inkscape'
  prefs: []
  type: TYPE_NORMAL
- en: 'Having a single glyph for two or more characters, however, makes Inkscape behave
    weirdly when you move cursor with the arrow keys: you still need two keystrokes
    to pass the "fi" ligature (because it''s two characters), but the visible cursor
    doesn''t move on one of these keystrokes because Inkscape can''t place the cursor
    inside a ligature. You need to imagine a "virtual" cursor between "f" and "i"
    when you start before the "fi" and press → once but the visible cursor doesn''t
    move.'
  prefs: []
  type: TYPE_NORMAL
- en: This suggests a way to get rid of a ligature you don't want. When the "virtual"
    cursor is inside the ligature, press Alt-← or Alt-→ once. Inkscape inserts a kern,
    which breaks the ligature.
  prefs: []
  type: TYPE_NORMAL
- en: 'To look up which types of ligatures a font supports, open the **Text and Font**
    dialog (Shift-Ctrl-T). On the Features tab for the selected font, you will see
    check marks against some of the ligature classes: Common (this includes the "fi,"
    "fl," and some others), Discretionary ("sp," "st," "rt," and others in certain
    decorative fonts), Historical (mostly those with an old-style "long s"), and Contextual
    (those that are supposed to be used only in certain contexts but not others).'
  prefs: []
  type: TYPE_NORMAL
- en: 15.4.7 Special Characters
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: From time to time, you may need to enter a character that your keyboard doesn't
    have a key for. In the Unicode Characters dialog (from the Text menu), you can
    look up and insert any Unicode character in any of the fonts available to Inkscape.
  prefs: []
  type: TYPE_NORMAL
- en: '*Unicode* is a worldwide standard that covers all existing and most historical
    alphabets, as well as a plethora of other special characters. The wealth of Unicode
    characters can be divided by *script* (for example, Common, Cyrillic, or Katakana)
    and, more narrowly, by *range* (for example, General Punctuation, Cyrillic Supplement,
    or Katakana Phonetic Extensions). The best place to look up the details of the
    extremely complex Unicode standard is [https://unicode.org/](https://unicode.org/).'
  prefs: []
  type: TYPE_NORMAL
- en: If you leave the Script and Range choosers in the Unicode Characters dialog
    set to all, the dialog will show you all the characters that exist in the selected
    font ([Figure 15-21](#fig15-21)). Double-click the character you need to place
    it into the editing field in the bottom left, and then click **Append** to add
    it to the current text object.
  prefs: []
  type: TYPE_NORMAL
- en: '![](16/tx-unicode-dialog.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 15-21: The Unicode Characters dialog'
  prefs: []
  type: TYPE_NORMAL
- en: At the bottom, the Unicode Characters dialog displays the hexadecimal Unicode
    number of the character you select in the table (for example, 00A9 for the copyright
    mark character). If you know that number, you can insert the character without
    opening the dialog. Just press Ctrl-U while editing a text object, type the number
    (watch the status bar for feedback), and press Enter. The character will be inserted
    at the text cursor.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are a few commonly used special characters:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Name** | **Character** | **Hexadecimal number** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| em dash | — | 2014 |'
  prefs: []
  type: TYPE_TB
- en: '| en dash | – | 2013 |'
  prefs: []
  type: TYPE_TB
- en: '| left curly double quote | “ | 201C |'
  prefs: []
  type: TYPE_TB
- en: '| right curly double quote | ” | 201D |'
  prefs: []
  type: TYPE_TB
- en: '| left curly single quote | ‘ | 2018 |'
  prefs: []
  type: TYPE_TB
- en: '| right curly single quote | ’ | 2019 |'
  prefs: []
  type: TYPE_TB
- en: '| left double guillemet | « | 00AB |'
  prefs: []
  type: TYPE_TB
- en: '| right double guillemet | » | 00BB |'
  prefs: []
  type: TYPE_TB
- en: '| ellipsis | … | 2026 |'
  prefs: []
  type: TYPE_TB
- en: '| multiplication | × | 00D7 |'
  prefs: []
  type: TYPE_TB
- en: '| copyright | © | 00A9 |'
  prefs: []
  type: TYPE_TB
- en: '| registered sign | ® | 00AE |'
  prefs: []
  type: TYPE_TB
- en: '| trademark | ™ | 2122 |'
  prefs: []
  type: TYPE_TB
- en: '| round bullet | • | 2022 |'
  prefs: []
  type: TYPE_TB
- en: 15.5 Converting Text to Path
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For all of Inkscape's text-editing capabilities, sometimes you will want to
    convert text to path—for example, to edit the shapes of individual letters, to
    clip something with your text (that requires a path), or to send your SVG document
    to someone who may not have the font you're using. The commandPath ▶ Object to
    Path (Shift-Ctrl-C) will work on text objects just as it does on shapes ([13.1](c13.xhtml#section13.1)).
  prefs: []
  type: TYPE_NORMAL
- en: Unlike a shape, however, a text object becomes not a single path but a *group*
    of paths, one for each glyph (character) of the original text. This allows Inkscape
    to fully preserve the appearance of the text, including any styling applied to
    spans inside it. Now you can select any individual letter with Ctrl-click in the
    Selector or with a simple click in the Node tool. If you really need a single
    path for the entire text object, choose **Path ▶ Object to Path** as above, then
    use **Path ▶ Combine** (Ctrl-K) to combine all of the characters into a single
    path object with a uniform style.
  prefs: []
  type: TYPE_NORMAL
- en: 15.6 Spellcheck
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Inkscape's built-in spellchecker can use up to three dictionaries at the same
    time. To set it up, go to the **Spellcheck** page of the **Preferences** dialog
    ([Figure 15-22](#fig15-22)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](16/tx-spell-setup.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 15-22: Setting up the Inkscape spellchecker inPreferences'
  prefs: []
  type: TYPE_NORMAL
- en: For example, you can use French as your primary language but add English and
    Russian as second and third languages. This way, you can check spelling in any
    of those languages or a mix of them, and only the words that are missing in all
    three languages will be flagged as misspelled. If you need only a single language,
    leave the second and third options set to**None**.
  prefs: []
  type: TYPE_NORMAL
- en: Many languages have more than one dictionary. For example, English (en) has
    variants for USA (en_US), UK (en_GB), Canada (en_CA), and Australia (en_AU); the
    UK variant additionally breaks into subvariants by the preferred verb suffix (en_GB-ise
    or en_GB-ize), and so on.
  prefs: []
  type: TYPE_NORMAL
- en: Once you invoke the spellchecker with Ctrl-Alt-K (or Text ▶ Check Spelling),
    it checks all the visible text objects in your document (they need not be selected)
    in turn, going top to bottom and left to right. When a misspelled word is found,
    Inkscape displays a red frame around the word and lists the suggestions in the
    dialog, as shown in [Figure 15-23](#fig15-23).
  prefs: []
  type: TYPE_NORMAL
- en: '![](16/tx-spell.svg.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 15-23: Spellchecking a document'
  prefs: []
  type: TYPE_NORMAL
- en: 'The object with the misspelling is selected; if you are using the Text tool,
    the editing cursor is placed at the beginning of the misspelled word. Here''s
    what you can do next:'
  prefs: []
  type: TYPE_NORMAL
- en: Choose one of the listed suggestions andAccept it.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Ignore once: the next time this word is encountered, the spellchecker will
    flag it again.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Ignore the word *for the rest of this session*: any other instances of the
    word during this check will be ignored, but the next time you run the spellchecker,
    it will flag it again.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add the word to one of the active dictionaries so that it is never flagged as
    misspelled again in this or subsequent sessions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Also, since the dialog does not lock the Inkscape window, you can simply edit
    the word with the Text tool, as you would normally do. Once you edit it to something
    acceptable, the spellchecker will automatically turn off the red frame and continue
    checking the document.
  prefs: []
  type: TYPE_NORMAL
- en: You can stop the spellcheck at any time by clicking **Stop** (or simply closing
    the **Check Spelling** dialog). Restart a stopped check by clicking **Start**
    again.
  prefs: []
  type: TYPE_NORMAL
- en: 15.7 Text Extensions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A number of extensions in Extensions ▶ Text are useful for working with text.
    They include:'
  prefs: []
  type: TYPE_NORMAL
- en: A group of case manipulation extensions will convert selected text objects to
    UPPERCASE,lowercase, Sentence case (capitalizes first letter of each sentence),Title
    Case (capitalizes first letter of each word), fLIP cASE (converts lowercase to
    uppercase and vice versa), or rANdOm CasE. All these extensions work only on selected
    objects.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A simple Replace Font extension will search and replace a specific font in the
    document, or replace all fonts with a single one, or just give you a list of the
    fonts used in the document.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Split text will break the selected text object into lines, words, or individual
    characters, adding them to the document as separate text objects (unfortunately,
    it does not preserve positions of words and characters).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 15.8 Creating Fonts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Creating new fonts is not for a casual user. The sheer amount of terminology
    you would need to master is daunting. And yet it may be tempting to have an original
    font of your own creation that you can use anywhere. The best part is that you
    can do it (mostly) in Inkscape, too!
  prefs: []
  type: TYPE_NORMAL
- en: Inkscape's font editing functionality is based on SVG 1.1, which included provisions
    for storing custom fonts right in an SVG document that can use them for text.
    Unfortunately, this part of the standard was removed in SVG 2.0 because it had
    failed to achieve widespread support in browsers. Still, Inkscape supports creating
    SVG 1.1 files with embedded SVG fonts, and then you can use the open source font
    editor called FontForge ([https://fontforge.org/](https://fontforge.org/)) to
    convert such an SVG file to a standard font format such as OpenType. You probably
    won't want to use this route for serious marketable fonts with advanced features,
    but for something simple, such as a letters-only font imitating your handwriting,
    it is perfectly workable.
  prefs: []
  type: TYPE_NORMAL
- en: I will not describe this functionality in detail because the whole story of
    font creation could easily fill a book. Instead, below is a high-level overview
    of the process that should get you started.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can begin with any empty document, but there''s a convenient Typography
    Canvas template (File ▶ New from Template) that provides a 1024 by 1024 px square
    with horizontal guides at the levels that define a Latin-alphabet letter: the
    baseline, the ascenders and descenders of the lowercase characters, and the height
    of the capitals. Create each of your letter shapes in a layer of its own; each
    letter must be a single path.'
  prefs: []
  type: TYPE_NORMAL
- en: Then, open the **Text ▶ SVG Font Editor** dialog. Create a new font by clicking
    the **New** button. Then, go to the **Glyphs** tab and start adding glyphs by
    clicking **Add Glyph**; the Glyph name can be descriptive (for example, "lowercase
    a"), but the Matching string must contain the exact character for which this glyph
    will be used (that is, just "a" for a lowercase *a*). In the **Advance** column,
    enter the distance this character takes in the string (that is, its width plus
    some default spacing).
  prefs: []
  type: TYPE_NORMAL
- en: Finally, you need to copy the letter shape path you have made to the font's
    glyph ([Figure 15-24](#fig15-24)). Make sure you have the path selected on the
    canvas and the corresponding glyph selected in the list and click the **Get curves
    from selection** button. Later, if you edit the shape of a glyph in its layer,
    you will need to do this copying again to update the font. To preview how your
    glyphs look together in a string, type something into **Preview Text** and see
    the result in the preview pane. You can also specify automatic kerns for specific
    pairs of glyphs by going to the Kerning tab of the dialog.
  prefs: []
  type: TYPE_NORMAL
- en: '![](16/tx-fontdialog.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 15-24: Creating a font: draw characters in layers, then create a new
    font in the document and copy each path to a glyph.'
  prefs: []
  type: TYPE_NORMAL
- en: When your glyphs are ready, save the SVG file and open it in FontForge to check.
    If it looks good, save it in OpenType format with **File ▶ Generate fonts** in
    FontForge. You then can install the resulting .otf file into your operating system
    for use by any program. If you need to change some parameters of the font, you
    can probably do that in FontForge; if you want to edit the glyphs in Inkscape,
    however, you would need to go back to the original SVG file, edit the paths in
    their layers, and make sure to copy each changed glyph path into the font (Get
    curves from selection).
  prefs: []
  type: TYPE_NORMAL
