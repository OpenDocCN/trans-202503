["```\n   #!/bin/bash\n   # bulkrename--Renames specified files by replacing text in the filename\n\n➊ printHelp()\n   {\n     echo \"Usage: $0 -f find -r replace FILES_TO_RENAME*\"\n     echo -e \"\\t-f The text to find in the filename\"\n     echo -e \"\\t-r The replacement text for the new filename\"\n     exit 1\n   }\n\n➋ while getopts \"f:r:\" opt\n   do\n     case \"$opt\" in\n       r ) replace=\"$OPTARG\"    ;;\n       f ) match=\"$OPTARG\"      ;;\n       ? ) printHelp            ;;\n     esac\n   done\n\n   shift $(( $OPTIND - 1 ))\n\n   if [ -z $replace➌ ] || [ -z $match➍ ]\n   then\n     echo \"You need to supply a string to find and a string to replace\";\n     printHelp\n   fi\n\n➎ for i in $@\n   do\n     newname=$(echo $i | ➏sed \"s/$match/$replace/\")\n     mv $i $newname\n     && echo \"Renamed file $i to $newname\"\n   done\n```", "```\n   $ ls ~/tmp/bulk\n   1_dave  2_dave  3_dave  4_dave\n   $ bulkrename\n   You need to supply a string to find and a string to replace\n   Usage: bulkrename -f find -r replace FILES_TO_RENAME*\n     -f The text to find in the filename\n     -r The replacement text for the new filename\n➊ $ bulkrename -f dave -r brandon ~/tmp/bulk/*\n   Renamed file /Users/bperry/tmp/bulk/1_dave to /Users/bperry/tmp/bulk/1_brandon\n   Renamed file /Users/bperry/tmp/bulk/2_dave to /Users/bperry/tmp/bulk/2_brandon\n   Renamed file /Users/bperry/tmp/bulk/3_dave to /Users/bperry/tmp/bulk/3_brandon\n   Renamed file /Users/bperry/tmp/bulk/4_dave to /Users/bperry/tmp/bulk/4_brandon\n   $ ls ~/tmp/bulk\n   1_brandon  2_brandon  3_brandon  4_brandon\n```", "```\n   #!/bin/bash\n   # bulkrun--Iterates over a directory of files, running a number of\n   #   concurrent processes that will process the files in parallel\n\n   printHelp()\n   {\n     echo \"Usage: $0 -p 3 -i inputDirectory/ -x \\\"command -to run/\\\"\"\n➊   echo -e \"\\t-p The maximum number of processes to start concurrently\"\n➋   echo -e \"\\t-i The directory containing the files to run the command on\"\n➌   echo -e \"\\t-x The command to run on the chosen files\"\n     exit 1\n   }\n\n➍ while getopts \"p:x:i:\" opt\n   do\n     case \"$opt\" in\n       p ) procs=\"$OPTARG\"    ;;\n       x ) command=\"$OPTARG\"  ;;\n       i ) inputdir=\"$OPTARG\" ;;\n       ? ) printHelp          ;;\n     esac\n   done\n\n   if [[ -z $procs || -z $command || -z $inputdir ]]\n   then\n➎   echo \"Invalid arguments\"\n     printHelp\n   fi\n\n   total=➏$(ls $inputdir | wc -l)\n   files=\"$(ls -Sr $inputdir)\"\n\n➐ for k in $(seq 1 $procs $total)\n   do\n➑   for i in $(seq 0 $procs)\n     do\n       if [[ $((i+k)) -gt $total ]]\n       then\n         wait\n         exit 0\n       fi\n\n       file=➒$(echo \"$files\" | sed $(expr $i + $k)\"q;d\")\n       echo \"Running $command $inputdir/$file\"\n       $command \"$inputdir/$file\"&\n     done\n\n➓ wait\n   done\n```", "```\n$ bulkrun -p 3 -i tmp/ -x \"mogrify -resize 50%\"\nRunning mogrify -resize 50% tmp//1024-2006_1011_093752.jpg\nRunning mogrify -resize 50% tmp//069750a6-660e-11e6-80d1-001c42daa3a7.jpg\nRunning mogrify -resize 50% tmp//06970ce0-660e-11e6-8a4a-001c42daa3a7.jpg\nRunning mogrify -resize 50% tmp//0696cf00-660e-11e6-8d38-001c42daa3a7.jpg\nRunning mogrify -resize 50% tmp//0696cf00-660e-11e6-8d38-001c42daa3a7.jpg\n--snip--\n```", "```\n   #!/bin/bash\n\n   # moonphase--Reports the phase of the moon (really the percentage of\n   #   illumination) for today or a specified date\n\n   # Format of Moongiant.com query:\n   #   http://www.moongiant.com/phase/MM/DD/YYYY\n\n   # If no date is specified, use \"today\" as a special value.\n\n   if [ $# -eq 0 ] ; then\n     thedate=\"today\"\n   else\n     # Date specified. Let's check whether it's in the right format.\n      mon=\"$(echo $1 | cut -d/ -f1)\"\n      day=\"$(echo $1 | cut -d/ -f2)\"\n     year=\"$(echo $1 | cut -d/ -f3)\"\n\n➊   if [ -z \"$year\" -o -z \"$day\" ] ; then     # Zero length?\n       echo \"Error: valid date format is MM/DD/YYYY\"\n       exit 1\n     fi\n     thedate=\"$1\" # No error checking = dangerous\n   fi\n\n   url=\"http://www.moongiant.com/phase/$thedate\"\n➋ pattern=\"Illumination:\"\n\n➌ phase=\"$( curl -s \"$url\" | grep \"$pattern\" | tr ',' '\\\n   ' | grep \"$pattern\" | sed 's/[^0-9]//g')\"\n\n   # Site output format is \"Illumination: <span>NN%\\n<\\/span>\"\n\n   if [ \"$thedate\" = \"today\" ] ; then\n     echo \"Today the moon is ${phase}% illuminated.\"\n   else\n     echo \"On $thedate the moon = ${phase}% illuminated.\"\n   fi\n\n   exit 0\n```", "```\n$ moonphase 08/03/2121\nOn 08/03/2121 the moon = 74% illuminated.\n\n$ moonphase\nToday the moon is 100% illuminated.\n\n$ moonphase 12/12/1941\nOn 12/12/1941 the moon = 43% illuminated.\n```"]