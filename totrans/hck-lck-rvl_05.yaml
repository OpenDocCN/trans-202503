- en: <hgroup>
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <hgroup>
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">3</samp> <samp class="SANS_Dogma_OT_Bold_B_11">THE
    COMMAND LINE INTERFACE</samp>
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">3</samp> <samp class="SANS_Dogma_OT_Bold_B_11">命令行界面</samp>
- en: </hgroup>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: </hgroup>
- en: '*Back in the days of the command-line interface, users were all Morlocks who
    had to convert their thoughts into alphanumeric symbols and type them in, a grindingly
    tedious process that stripped away all ambiguity, laid bare all hidden assumptions,
    and cruelly punished laziness and imprecision.*'
  id: totrans-3
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*在命令行界面的时代，用户都像莫洛克人一样，必须将他们的思维转化为字母数字符号并输入，这是一个繁琐的过程，剥去了所有的模糊性，揭示了所有隐藏的假设，严厉惩罚懒惰和不精确。*'
- en: ''
  id: totrans-4
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: —Neal Stephenson, *In the Beginning … Was the Command Line*
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: —尼尔·斯蒂芬森，*《命令行的起源》*
- en: 'If you’re like most people, you interface with your computer primarily via
    its graphical desktop environment: you move the pointer with your mouse or trackpad
    and click icons to run programs and open documents. Programs open in windows that
    you can resize, maximize, minimize, and drag around the screen. You can run various
    programs at once in separate windows and switch between them. However, there’s
    an alternative, incredibly powerful interface you can use to communicate with
    your computer and give it instructions: the *command line interface (CLI)*.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你像大多数人一样，主要通过图形桌面环境与计算机交互：你通过鼠标或触控板移动指针，点击图标来运行程序和打开文档。程序在窗口中打开，你可以调整窗口大小、最大化、最小化并在屏幕上拖动。你可以同时运行多个程序，每个程序都在不同的窗口中运行，并在它们之间切换。然而，还有一种替代方法，你可以用来与计算机进行交流并给出指令：*命令行界面
    (CLI)*。
- en: Command line interfaces are text-based, rather than graphical, interfaces to
    interact with your computer. Instead of clicking on icons, you enter commands
    to run programs in a *terminal emulator* (normally referred to just as a *terminal*).
    After running a command, you’ll typically see text-based output displayed in the
    terminal.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 命令行界面是基于文本的，而不是图形化的，用来与计算机交互。你不再是点击图标，而是输入命令，通过*终端仿真器*（通常简称为*终端*）来运行程序。在运行命令后，你通常会看到终端中显示的基于文本的输出。
- en: In this chapter, you’ll learn the basic command line skills you need to follow
    along with the rest of this book. Whether you’re using Windows, macOS, or Linux,
    you’ll learn how to install and uninstall software via the command line, how filepaths
    work, how to navigate around the folders on your computer, and how to use text
    editors. You’ll also write your first *shell script*, a file containing a series
    of commands.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习一些基本的命令行技能，帮助你跟随本书的其余部分。不论你使用的是 Windows、macOS 还是 Linux，你将学习如何通过命令行安装和卸载软件，文件路径如何工作，如何在计算机中的文件夹之间导航，以及如何使用文本编辑器。你还将编写你的第一个*shell
    脚本*，这是一种包含一系列命令的文件。
- en: <samp class="SANS_Futura_Std_Bold_B_11">Introducing the Command Line</samp>
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">介绍命令行</samp>
- en: 'To prepare you to start working on the command line, this section explains
    some fundamentals: what shells are, how users and paths work in different operating
    systems, and the concept of privilege escalation.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让你准备好开始使用命令行，本节将解释一些基本概念：什么是 shell，用户和路径在不同操作系统中的工作方式，以及权限提升的概念。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">The Shell</samp>
  id: totrans-11
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Shell</samp>
- en: The *shell* is the program that lets you run text-based commands, while the
    terminal is the graphical program that runs your shell. When you open a terminal
    and see a blinking text cursor waiting for commands, you’re using a shell. When
    hackers try to break into a computer, their initial goal is to “pop a shell,”
    or access the text-based interface that allows them to run whatever commands they
    want.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*shell* 是让你运行基于文本的命令的程序，而终端是运行 shell 的图形程序。当你打开一个终端并看到一个闪烁的文本光标等待输入命令时，你正在使用一个
    shell。当黑客试图突破计算机时，他们的初步目标是“弹出一个 shell”，即访问允许他们运行任意命令的文本界面。'
- en: All operating systems, even mobile ones like Android and iOS, have shells. This
    book focuses on Unix shells, the kind that come with macOS and Linux (but Windows
    users can also use them). Most versions of Linux use a shell called bash, and
    macOS uses one called zsh. These shells are very similar, and for the purposes
    of this book you can think of them as interchangeable.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 所有操作系统，甚至像 Android 和 iOS 这样的移动操作系统，都有 shell。本书主要介绍 Unix shell，这种 shell 是 macOS
    和 Linux 自带的（但 Windows 用户也可以使用）。大多数 Linux 版本使用名为 bash 的 shell，而 macOS 使用的是名为 zsh
    的 shell。这些 shell 非常相似，为了本书的目的，你可以将它们视为可以互换的。
- en: 'Windows, on the other hand, comes with two shells: an older one called Command
    Prompt (or *cmd.exe*) and a newer one called PowerShell. The *syntax*—rules that
    define what different commands mean—used by Windows shells is very different from
    that used by Unix shells. If you’re a Windows user, you’ll primarily work in a
    Unix shell for the examples in this book. Setting up your computer to run Linux
    directly in Windows will be this chapter’s first exercise.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，Windows 提供了两个命令行界面：一个较旧的命令提示符（或 *cmd.exe*）和一个较新的 PowerShell。Windows 命令行使用的
    *语法*——定义不同命令含义的规则——与 Unix 命令行使用的语法非常不同。如果你是 Windows 用户，本书中的示例将主要在 Unix 命令行下运行。为
    Windows 配置直接运行 Linux 的环境将是本章的第一个练习。
- en: 'To make your shell do something, such as run a program, you carefully enter
    the desired command and then press ENTER (or RETURN on Mac keyboards). To quit
    the shell, enter <samp class="SANS_TheSansMonoCd_W7Bold_B_11">exit</samp> and
    press ENTER. Shells are finicky: you need to enter commands using the correct
    capitalization, punctuation, and spacing, or they won’t work. Typos usually result
    in nothing more serious than error messages, however, and it’s easy to go back
    and fix a mistake in a command. I’ll explain how to do so in the “Editing Commands”
    section on page 68.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 要让你的命令行执行某个操作，例如运行程序，你需要小心输入所需的命令，然后按下 ENTER（或 Mac 键盘上的 RETURN）。要退出命令行，输入 <samp
    class="SANS_TheSansMonoCd_W7Bold_B_11">exit</samp> 然后按 ENTER。命令行对输入非常敏感：你需要正确输入命令的大小写、标点符号和空格，否则命令不会执行。通常拼写错误只会导致错误信息，但它很容易修正。我会在第
    68 页的“编辑命令”部分详细解释如何修正命令错误。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Users and Paths</samp>
  id: totrans-16
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">用户与路径</samp>
- en: Although operating systems like Windows, macOS, and Linux are different in some
    ways, they all share basic building blocks, including users and paths.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管操作系统如 Windows、macOS 和 Linux 在某些方面有所不同，但它们都共享一些基本构件，包括用户和路径。
- en: All operating systems have *users*, separate accounts that different people
    use to log in to the same computer. Users generally have home folders, also known
    as home directories, where their files live. [Figure 3-1](#fig3-1) shows my terminal
    in Ubuntu, a popular Linux distribution.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 所有操作系统都有 *用户*，这些是不同的人用来登录同一台计算机的独立账户。用户通常有自己的家目录，也叫做用户目录，存放他们的文件。[图 3-1](#fig3-1)
    显示了我在 Ubuntu（一个流行的 Linux 发行版）中的终端界面。
- en: '![A screenshot of the author’s terminal app in Ubuntu.](Images/Figure3-1.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![作者在 Ubuntu 上的终端应用截图。](Images/Figure3-1.png)'
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 3-1: My Ubuntu terminal</samp>'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">图 3-1: 我的 Ubuntu 终端</samp>'
- en: My username is *micah* and the name of my Ubuntu computer is *rogue*. Your terminal
    will look different depending on your operating system, username, and computer
    name.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我的用户名是 *micah*，我的 Ubuntu 计算机的名字是 *rogue*。你的终端界面会因操作系统、用户名和计算机名的不同而有所差异。
- en: 'All operating systems also have filesystems, the collection of files and folders
    available on the computer (you got a brief introduction to filesystems in [Chapter
    1](chapter1.xhtml) while encrypting your USB disk). In a filesystem, each file
    and folder has a *path*, which you can think of like the location, or address,
    of that file. For example, if your username is *alice*, the path of your home
    folder in different operating systems would look as follows:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 所有操作系统都有文件系统，它是计算机中可用的文件和文件夹的集合（在[第 1 章](chapter1.xhtml)中，你在加密 USB 磁盘时就已经了解了文件系统的基础）。在文件系统中，每个文件和文件夹都有一个
    *路径*，你可以把它看作是文件的所在位置或地址。例如，如果你的用户名是 *alice*，那么在不同操作系统中，你的家目录路径如下所示：
- en: 'Windows: *C:\Users\alice*'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Windows: *C:\Users\alice*'
- en: 'macOS: */Users/alice*'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'macOS: */Users/alice*'
- en: 'Linux: */home/alice*'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Linux: */home/alice*'
- en: 'Windows filesystems operate differently from macOS or Linux filesystems in
    a few key ways. First, in Windows, disks are labeled with letters. The main disk,
    where Windows itself is installed, is the *C: drive*. Other disks, like USB disks,
    are assigned other letters. In Windows, folders in a path are separated with a
    backslash (<samp class="SANS_TheSansMonoCd_W5Regular_11">\</samp>), while other
    operating systems use forward slashes (<samp class="SANS_TheSansMonoCd_W5Regular_11">/</samp>).
    In Linux, paths are case sensitive, but not in Windows and macOS (by default).
    For example, in Linux you can store one file called *Document.pdf* and another
    called *document.pdf* in the same folder. If you try to do the same in Windows,
    saving the second file overwrites the first.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Windows文件系统在几个关键方面与macOS或Linux文件系统有所不同。首先，在Windows中，磁盘被标记为字母。安装Windows本身的主磁盘是*C:驱动器*。其他磁盘，例如USB磁盘，会被分配其他字母。在Windows中，路径中的文件夹使用反斜杠(<samp
    class="SANS_TheSansMonoCd_W5Regular_11">\</samp>)分隔，而其他操作系统使用正斜杠(<samp class="SANS_TheSansMonoCd_W5Regular_11">/</samp>)。在Linux中，路径区分大小写，而在Windows和macOS中（默认情况下）不区分。例如，在Linux中，你可以将一个名为*Document.pdf*的文件和一个名为*document.pdf*的文件存储在同一文件夹中。如果你在Windows中尝试这样做，保存第二个文件将覆盖第一个文件。
- en: 'Let’s look at some example paths. If your username is *alice* and you download
    a file called *Meeting Notes.docx* into the *Downloads* folder, here’s what that
    path would look like:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一些示例路径。如果你的用户名是*alice*，并且你将名为*Meeting Notes.docx*的文件下载到*Downloads*文件夹中，路径可能如下所示：
- en: 'Windows: *C:\Users\alice\Downloads\Meeting Notes.docx*'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Windows: *C:\Users\alice\Downloads\Meeting Notes.docx*'
- en: 'macOS: */Users/alice/Downloads/Meeting Notes.docx*'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'macOS: */Users/alice/Downloads/Meeting Notes.docx*'
- en: 'Linux: */home/alice/Downloads/Meeting Notes.docx*'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Linux: */home/alice/Downloads/Meeting Notes.docx*'
- en: 'When you plug in a USB disk, it’s mounted to different paths for different
    operating systems. If your disk is labeled *datasets*, the path representing the
    location of that disk might look as follows:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 当你插入一个USB磁盘时，它会在不同的操作系统中挂载到不同的路径。如果你的磁盘标记为*datasets*，那么表示该磁盘位置的路径可能如下所示：
- en: 'Windows: *D:* (or whatever drive letter Windows decides to mount the disk to)'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Windows: *D:*（或者Windows决定为磁盘分配的其他驱动器字母）'
- en: 'macOS: */Volumes/datasets*'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'macOS: */Volumes/datasets*'
- en: 'Linux: */media/alice/datasets*'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Linux: */media/alice/datasets*'
- en: It’s important to understand how to read paths, since you’ll need to include
    the location of your dataset or files it contains in the commands you run.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 了解如何读取路径非常重要，因为你需要在执行命令时包含数据集或其包含的文件的位置。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">User Privileges</samp>
  id: totrans-36
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">用户权限</samp>
- en: Most users have limited privileges in an operating system. However, the *root
    user* in Linux and macOS and the *administrator user* in Windows have absolute
    power. While *alice* may not be able to save files into *bob*’s home folder, for
    example, the root user has permissions to save files anywhere on the computer.
    When a Mac asks you to enter your user password to change system preferences or
    install software, or when a Windows machine asks if you want to allow a program
    to make changes to your computer, the operating system is asking for your consent
    before switching from your unprivileged user account to the root or administrator
    user account.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数用户在操作系统中拥有有限的权限。然而，Linux和macOS中的*root用户*以及Windows中的*管理员用户*拥有绝对权限。例如，*alice*可能无法将文件保存到*bob*的主文件夹中，但root用户有权限将文件保存到计算机的任何位置。当Mac提示你输入用户密码以更改系统偏好设置或安装软件，或者Windows提示你是否允许某个程序对计算机进行更改时，操作系统是在请求你的同意，允许从你的普通用户帐户切换到root或管理员用户帐户。
- en: Most of the time when you’re working in a terminal, you run commands as an unprivileged
    user. To run a command that requires root (or administrative) privileges in Linux
    and macOS, such as to install a new program, just put <samp class="SANS_TheSansMonoCd_W5Regular_11">sudo</samp>
    in front of it and press ENTER, and you’ll be prompted to enter the password for
    your regular user account.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在终端中工作时，大多数时候你是以一个没有权限的用户身份运行命令。要在Linux和macOS中运行需要root（或管理员）权限的命令，例如安装新程序，只需在命令前加上<samp
    class="SANS_TheSansMonoCd_W5Regular_11">sudo</samp>并按下ENTER键，系统将提示你输入常规用户帐户的密码。
- en: 'As an example, the <samp class="SANS_TheSansMonoCd_W5Regular_11">whoami</samp>
    command tells you which user just ran a command. On my computer, if I enter <samp
    class="SANS_TheSansMonoCd_W5Regular_11">whoami</samp> without <samp class="SANS_TheSansMonoCd_W5Regular_11">sudo</samp>,
    the output is <samp class="SANS_TheSansMonoCd_W5Regular_11">micah</samp>. However,
    if I enter <samp class="SANS_TheSansMonoCd_W5Regular_11">sudo whoami</samp>, which
    requires me to type my password, the output is <samp class="SANS_TheSansMonoCd_W5Regular_11">root</samp>:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 作为示例，<samp class="SANS_TheSansMonoCd_W5Regular_11">whoami</samp> 命令会告诉您刚刚运行命令的用户是谁。在我的计算机上，如果我输入
    <samp class="SANS_TheSansMonoCd_W5Regular_11">whoami</samp> 而不加 <samp class="SANS_TheSansMonoCd_W5Regular_11">sudo</samp>，输出结果是
    <samp class="SANS_TheSansMonoCd_W5Regular_11">micah</samp>。然而，如果我输入 <samp class="SANS_TheSansMonoCd_W5Regular_11">sudo
    whoami</samp>，需要输入密码，输出结果是 <samp class="SANS_TheSansMonoCd_W5Regular_11">root</samp>：
- en: '[PRE0]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If you recently ran <samp class="SANS_TheSansMonoCd_W5Regular_11">sudo</samp>,
    you can run it again for a few minutes without having to re-enter your password.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您最近使用过 <samp class="SANS_TheSansMonoCd_W5Regular_11">sudo</samp>，您可以在几分钟内再次运行它，而无需重新输入密码。
- en: <samp class="SANS_Dogma_OT_Bold_B_21">WARNING</samp>
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Dogma_OT_Bold_B_21">警告</samp>
- en: '*Be very careful when running commands as root, since running the wrong commands
    as the root user can accidentally delete all of your data or break your operating
    system. Before using sudo, make sure you have a clear understanding of what you’re
    about to do.*'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '*在以 root 身份运行命令时要非常小心，因为以 root 用户身份运行错误的命令可能会意外删除您的所有数据或破坏操作系统。在使用 sudo 之前，确保您清楚即将执行的操作。*'
- en: You can use <samp class="SANS_TheSansMonoCd_W5Regular_11">sudo</samp> to gain
    root access only if your current user has administrator access. If you’re the
    only user on your computer, you’re probably an administrator. To find out, try
    using <samp class="SANS_TheSansMonoCd_W5Regular_11">sudo</samp> and see whether
    you get a “permission denied” error.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 只有当前用户具有管理员权限时，您才能使用 <samp class="SANS_TheSansMonoCd_W5Regular_11">sudo</samp>
    获得 root 访问权限。如果您是计算机上的唯一用户，那么您很可能是管理员。要确认这一点，可以尝试使用 <samp class="SANS_TheSansMonoCd_W5Regular_11">sudo</samp>，看是否会出现“权限被拒绝”错误。
- en: '[Figure 3-2](#fig3-2) shows a comic by Randall Munroe from his XKCD website
    that succinctly demonstrates the power of <samp class="SANS_TheSansMonoCd_W5Regular_11">sudo</samp>.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 3-2](#fig3-2)展示了 Randell Munroe 从他的 XKCD 网站上得到的一幅漫画，简洁地展示了 <samp class="SANS_TheSansMonoCd_W5Regular_11">sudo</samp>
    的强大功能。'
- en: '![In this XKCD comic, a person says, “Make me a sandwich.” Another says, “What?
    Make it yourself.” The first person says, “Sudo make me a sandwich.” The other
    responds, “Okay.”](Images/Figure3-2.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![在这幅 XKCD 漫画中，一人说：“做个三明治给我。”另一人回应：“什么？自己做。”第一个人说：“Sudo 做个三明治给我。”对方答道：“好吧。”](Images/Figure3-2.png)'
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 3-2: Demanding a sandwich
    with sudo</samp>'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Book_Oblique_I_11">图 3-2：使用 sudo 要求三明治</samp>
- en: Before learning more command line code, Windows users must install Ubuntu (see
    Exercise 3-1). Mac or Linux users can skip to the “Basic Command Line Usage” section
    on page 62.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在学习更多命令行代码之前，Windows 用户必须先安装 Ubuntu（请参阅练习 3-1）。Mac 或 Linux 用户可以跳到第 62 页的“基本命令行使用”部分。
- en: '<samp class="SANS_Futura_Std_Heavy_B_21">Exercise 3-1: Install Ubuntu in Windows</samp>'
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Heavy_B_21">练习 3-1：在 Windows 上安装 Ubuntu</samp>
- en: To work with Ubuntu on a Windows machine, you could install both Windows and
    Linux or use a virtual machine within Windows, as mentioned in [Chapter 1](chapter1.xhtml).
    However, for this book’s purposes, it’s simplest to use the *Windows Subsystem
    for Linux (WSL)*, a Microsoft technology that lets you run Linux programs directly
    in Windows. Opening an Ubuntu window in WSL will, in turn, open a bash shell and
    let you install and run Ubuntu software. (Technically, WSL does use a VM, but
    it’s fast, managed by Windows, and unobtrusive, running entirely behind the scenes.)
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Windows 机器上使用 Ubuntu，您可以安装 Windows 和 Linux 双系统，或者在 Windows 内使用虚拟机，如[第 1 章](chapter1.xhtml)所述。然而，考虑到本书的目的，最简单的方法是使用*Windows
    Subsystem for Linux (WSL)*，这是微软的技术，可以让您直接在 Windows 中运行 Linux 程序。在 WSL 中打开一个 Ubuntu
    窗口，反过来会打开一个 bash shell，让您安装并运行 Ubuntu 软件。（从技术上讲，WSL 确实使用虚拟机，但它运行快速，由 Windows 管理，并且是无干扰的，完全在后台运行。）
- en: 'To install WSL, open a PowerShell window as an administrator: click **Start**,
    search for **powershell**, right-click **Windows PowerShell**, choose **Run as
    Administrator**, and click **Yes**. [Figure 3-3](#fig3-3) shows this process,
    which may look slightly different depending on your version of Windows.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 WSL，请以管理员身份打开 PowerShell 窗口：点击**开始**，搜索**powershell**，右键点击**Windows PowerShell**，选择**以管理员身份运行**，然后点击**是**。[图
    3-3](#fig3-3)显示了此过程，具体操作可能会因您使用的 Windows 版本而略有不同。
- en: '![A screenshot of the Run as Administrator option in the drop-down menu after
    the user has right-clicked on Windows PowerShell](Images/Figure3-3.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![用户右键点击 Windows PowerShell 后，在下拉菜单中的“以管理员身份运行”选项截图](Images/Figure3-3.png)'
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 3-3: Running PowerShell
    as an administrator in Windows</samp>'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Book_Oblique_I_11">图 3-3：在 Windows 中以管理员身份运行 PowerShell</samp>
- en: 'In your administrator PowerShell window, enter the following command and press
    ENTER:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在管理员 PowerShell 窗口中，输入以下命令并按 ENTER：
- en: '[PRE1]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This installs the Windows Subsystem for Linux, then downloads and installs Ubuntu
    Linux on your computer.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这将安装 Windows 子系统 for Linux，然后下载并安装 Ubuntu Linux 到你的计算机。
- en: 'Your screen should now look something like this:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 你的屏幕现在应该看起来像这样：
- en: '[PRE2]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The final line of this output tells you to reboot your computer. Enter <samp
    class="SANS_TheSansMonoCd_W7Bold_B_11">exit</samp> and press ENTER (or just close
    the window) to quit PowerShell, then reboot. After you log in to Windows again,
    you should see an Ubuntu window informing you that the installation may take a
    few more minutes to complete. Then the window should present you with a prompt
    asking you to create a new user:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 该输出的最后一行提示你重启计算机。输入 <samp class="SANS_TheSansMonoCd_W7Bold_B_11">exit</samp>
    并按 ENTER（或者直接关闭窗口）退出 PowerShell，然后重启计算机。重新登录到 Windows 后，你应该会看到一个 Ubuntu 窗口，提示你安装可能需要再等几分钟完成。然后，窗口会呈现一个提示，要求你创建一个新用户：
- en: '[PRE3]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Ubuntu needs to keep track of its own users rather than the existing users on
    your Windows computer.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: Ubuntu 需要管理它自己的用户，而不是你 Windows 计算机上现有的用户。
- en: 'With the Ubuntu terminal window in focus, enter a username and press ENTER.
    The terminal should then prompt you to create a password:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在聚焦的 Ubuntu 终端窗口中，输入一个用户名并按 ENTER。终端应该提示你创建一个密码：
- en: '[PRE4]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Either use the same password you use to log in to your Windows account or create
    a new one and save it in your password manager. Enter your password and press
    ENTER. While you’re typing, nothing will appear in the Ubuntu terminal.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用与登录 Windows 账户相同的密码，或者创建一个新密码并将其保存在密码管理器中。输入你的密码并按 ENTER。在你输入时，Ubuntu 终端中不会显示任何内容。
- en: 'The terminal should now prompt you to re-enter your new password; do so and
    press ENTER, which should drop you into an Ubuntu shell with a prompt and a blinking
    cursor. My prompt says <samp class="SANS_TheSansMonoCd_W5Regular_11">micah@cloak:~$</samp>
    because my username is *micah* and the name of my Windows computer is *cloak*:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 终端现在应该提示你重新输入新密码；输入并按 ENTER，这应该会将你带入一个 Ubuntu shell，显示一个提示符和一个闪烁的光标。我的提示符显示为
    <samp class="SANS_TheSansMonoCd_W5Regular_11">micah@cloak:~$</samp>，因为我的用户名是 *micah*，而我的
    Windows 计算机名是 *cloak*：
- en: '[PRE5]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: You can now open Ubuntu in your Windows computer. From this point on, when instructed
    to open a terminal or run some command line code, use an Ubuntu terminal window
    unless I specify otherwise.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可以在 Windows 计算机中打开 Ubuntu。从此以后，当需要打开终端或运行命令行代码时，除非另有说明，否则请使用 Ubuntu 终端窗口。
- en: From within your Ubuntu shell, you can access your Windows disks in the */mnt*
    folder. For example, you can access the *C:* drive in */mnt/c* and the *D:* drive
    in */mnt/d*. Suppose I download a document using my web browser and want to access
    it from Ubuntu. The path to my *Downloads* folder in Windows is */mnt/c/Users/micah/Downloads*,
    so the document would be in that folder. If I want to access the BlueLeaks data
    that I downloaded to my USB disk from Ubuntu, then assuming that *D:* is the USB
    disk’s drive, the path would be */mnt/d/BlueLeaks*.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Ubuntu shell 中，你可以通过 */mnt* 文件夹访问 Windows 磁盘。例如，你可以在 */mnt/c* 访问 *C:* 驱动器，在
    */mnt/d* 访问 *D:* 驱动器。假设我通过浏览器下载了一个文档，并希望在 Ubuntu 中访问它。我的 Windows 系统中 *Downloads*
    文件夹的路径是 */mnt/c/Users/micah/Downloads*，因此该文档将位于该文件夹。如果我想从 Ubuntu 访问下载到我的 USB 磁盘上的
    BlueLeaks 数据，假设 *D:* 是 USB 磁盘的驱动器，那么路径将是 */mnt/d/BlueLeaks*。
- en: For more details on using Windows and WSL, including information on common problems
    related to using USB disks in WSL, as well as disk performance issues and various
    ways to deal with them, check out Appendix A. Wait until you’ve worked through
    at least [Chapter 4](chapter4.xhtml) to start implementing these solutions, since
    the instructions involve more advanced command line concepts introduced in that
    chapter.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解更多关于使用 Windows 和 WSL 的详细信息，包括使用 USB 磁盘时常见问题、磁盘性能问题及其解决方法，请查阅附录 A。在你至少完成 [第
    4 章](chapter4.xhtml) 之前，不要开始实施这些解决方案，因为这些说明涉及第 4 章中介绍的更高级的命令行概念。
- en: <samp class="SANS_Futura_Std_Bold_B_11">Basic Command Line Usage</samp>
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">基本命令行使用</samp>
- en: In this section, you’ll learn to use the command line to explore files and folders
    on your computer. This is a prerequisite to working with datasets, which are just
    folders full of files and other folders. You’ll learn how to open a terminal,
    list files in any folder, distinguish between relative and absolute paths, switch
    to different folders in your shell, and look up documentation on commands from
    within your terminal.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将学习如何使用命令行浏览计算机上的文件和文件夹。这是处理数据集的前提，而数据集就是包含文件和其他文件夹的文件夹。你将学习如何打开终端、列出任何文件夹中的文件、区分相对路径和绝对路径、在Shell中切换不同文件夹，并从终端内部查找命令的文档。
- en: <samp class="SANS_Dogma_OT_Bold_B_21">NOTE</samp>
  id: totrans-72
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: <samp class="SANS_Dogma_OT_Bold_B_21">注意</samp>
- en: '*When learning command line skills, you can always look things up if you run
    into problems—I still do this every day. You’re likely not the first person to
    encounter any given command line issue, so with a few well-worded internet searches,
    you can find someone else’s solution.*'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '*在学习命令行技能时，如果遇到问题，你总是可以查找解决办法——我每天都这么做。你可能不是第一个遇到某个命令行问题的人，所以通过一些恰当的网络搜索，你可以找到别人已经找到的解决方案。*'
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Opening a</samp>
    <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Terminal</samp>
  id: totrans-74
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">打开一个</samp> <samp
    class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">终端</samp>
- en: To get started, skip to the subsection for your operating system to learn how
    to open a terminal. Throughout this chapter, keep a terminal open while you’re
    reading to test all the commands.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 为了开始，跳转到你操作系统的子章节，学习如何打开终端。在本章的阅读过程中，保持终端打开，以便测试所有命令。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">The Windows Terminal</samp>
  id: totrans-76
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">Windows终端</samp>
- en: Open the Ubuntu app by clicking **Start** in the bottom-left corner of the screen,
    searching for **ubuntu**, and clicking **Ubuntu**.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 通过点击屏幕左下角的**开始**，搜索**ubuntu**，然后点击**Ubuntu**来打开Ubuntu应用。
- en: You’ll use Ubuntu most often for this book, but you may need to open the native
    Windows terminals occasionally as well. You can likewise open PowerShell and Command
    Prompt by clicking **Start** and searching for them. Check out the Microsoft program
    Windows Terminal ([*https://<wbr>aka<wbr>.ms<wbr>/terminal*](https://aka.ms/terminal)),
    which lets you open different terminals in different tabs, choosing between PowerShell,
    Command Prompt, Ubuntu, and others. If you choose to install it, you can open
    it the same way.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中你将最常使用Ubuntu，但偶尔也需要打开Windows原生终端。你同样可以通过点击**开始**并搜索它们来打开PowerShell和命令提示符。可以查看微软的Windows终端程序（[*https://<wbr>aka<wbr>.ms<wbr>/terminal*](https://aka.ms/terminal)），它允许你在不同标签页中打开不同的终端，选择PowerShell、命令提示符、Ubuntu等。如果你选择安装它，可以通过相同的方式打开。
- en: 'Pin the Ubuntu app or Windows Terminal app to your taskbar so you can quickly
    open it in the future: right-click its icon and select **Pin to Taskbar**.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 将Ubuntu应用或Windows终端应用固定到任务栏，这样你可以快速打开它：右键点击其图标并选择**固定到任务栏**。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">The macOS Terminal</samp>
  id: totrans-80
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">macOS终端</samp>
- en: Open the Terminal app by opening Finder, going to the *Applications* folder,
    double-clicking the *Utilities* folder, and double-clicking **Terminal**. [Figure
    3-4](#fig3-4) shows my macOS terminal running zsh, the default macOS shell. My
    username is *micah*, and the name of my Mac is *trapdoor*.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 通过打开Finder，进入*应用程序*文件夹，双击*实用工具*文件夹，再双击**终端**来打开终端应用。[图 3-4](#fig3-4)显示了我运行zsh（macOS默认shell）的终端。我的用户名是*micah*，我的Mac名称是*trapdoor*。
- en: '![A screenshot of the Terminal app in macOS.](Images/Figure3-4.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![macOS中终端应用的截图。](Images/Figure3-4.png)'
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 3-4: My macOS terminal</samp>'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Book_Oblique_I_11">图 3-4：我的 macOS 终端</samp>
- en: Pin the Terminal app to your dock so you can quickly open it in the future.
    To do so, after you open Terminal, press CTRL and click the Terminal icon on your
    dock, then choose **Options**▸**Keep in Dock**.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 将终端应用固定到你的Dock，这样你以后可以快速打开它。操作方法是，打开终端后，按住CTRL并点击Dock上的终端图标，然后选择**选项**▸**保持在Dock中**。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">The Linux Terminal</samp>
  id: totrans-85
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">Linux 终端</samp>
- en: In most Linux distributions, open the Terminal app by pressing the Windows key,
    typing **terminal**, and pressing ENTER. If you’re running Ubuntu (or any other
    Linux distribution that uses the GNOME graphical environment), pin the Terminal
    app to your dock so you can quickly open it in the future. To do so, right-click
    the Terminal icon and select **Add to Favorites**.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数Linux发行版中，通过按下Windows键，输入**terminal**，然后按回车键打开终端应用程序。如果你使用的是Ubuntu（或任何其他使用GNOME图形环境的Linux发行版），可以将终端应用程序固定到任务栏，这样以后可以快速打开。为此，右键点击终端图标，选择**添加到收藏夹**。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Clearing Your Screen
    and Exiting the Shell</samp>
  id: totrans-87
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">清除屏幕并退出Shell</samp>
- en: 'As you practice using the terminal in the following sections, you’ll sometimes
    want to start fresh, without having to see all the previous commands you ran or
    their output or error messages. Run this simple command to declutter your terminal:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分中练习使用终端时，你有时希望从头开始，而不必看到所有之前运行的命令及其输出或错误信息。运行以下简单命令来清理终端：
- en: '[PRE6]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This clears everything off the screen, leaving you with nothing but a blank
    command prompt. Make sure to do this only if you no longer need to see the output
    of your previous commands. (In the Windows Command Prompt and PowerShell, use
    <samp class="SANS_TheSansMonoCd_W5Regular_11">cls</samp> instead of <samp class="SANS_TheSansMonoCd_W5Regular_11">clear</samp>.)
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 这将清除屏幕上的所有内容，只留下一个空白的命令提示符。确保仅在不再需要查看之前命令的输出时执行此操作。（在Windows命令提示符和PowerShell中，使用
    <samp class="SANS_TheSansMonoCd_W5Regular_11">cls</samp> 而不是 <samp class="SANS_TheSansMonoCd_W5Regular_11">clear</samp>。）
- en: 'When you’re done using the CLI, exit your shell by running this command:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 完成CLI操作后，可以通过运行以下命令退出你的shell：
- en: '[PRE7]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: You can also close the terminal window to exit. If you’re running a program
    when you close the terminal, that program will quit as well.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以关闭终端窗口以退出。如果在关闭终端时正在运行某个程序，该程序也会退出。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Exploring Files and
    Directories</samp>
  id: totrans-94
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">探索文件和目录</samp>
- en: When you open a terminal, your shell starts out in your user’s home folder,
    represented as a tilde (<samp class="SANS_TheSansMonoCd_W5Regular_11">~</samp>).
    The folder you’re currently in is your *current working directory*, or just *working
    directory*. If you ever forget what directory you’re in, run the <samp class="SANS_TheSansMonoCd_W5Regular_11">pwd</samp>
    command (short for “print working directory”) to find out.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 当你打开终端时，shell 默认会进入用户的主文件夹，表示为波浪线（<samp class="SANS_TheSansMonoCd_W5Regular_11">~</samp>）。你当前所在的文件夹是你的*当前工作目录*，简称*工作目录*。如果你忘记了自己在哪个目录中，可以运行
    <samp class="SANS_TheSansMonoCd_W5Regular_11">pwd</samp> 命令（即“打印工作目录”）来查看。
- en: 'Running the <samp class="SANS_TheSansMonoCd_W5Regular_11">ls</samp> command
    in your terminal lists all of the files in your working directory. You can use
    this command to check the contents of folders you’re working with. If there are
    no files or only hidden files, <samp class="SANS_TheSansMonoCd_W5Regular_11">ls</samp>
    won’t list anything. To check for hidden files, modify the <samp class="SANS_TheSansMonoCd_W5Regular_11">ls</samp>
    command using <samp class="SANS_TheSansMonoCd_W5Regular_11">-a</samp> (short for
    <samp class="SANS_TheSansMonoCd_W5Regular_11">--all</samp>):'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在终端中运行 <samp class="SANS_TheSansMonoCd_W5Regular_11">ls</samp> 命令会列出工作目录中的所有文件。你可以使用这个命令检查你正在操作的文件夹的内容。如果没有文件或只有隐藏文件，<samp
    class="SANS_TheSansMonoCd_W5Regular_11">ls</samp> 将不会列出任何内容。要检查隐藏文件，可以通过 <samp
    class="SANS_TheSansMonoCd_W5Regular_11">-a</samp>（即 <samp class="SANS_TheSansMonoCd_W5Regular_11">--all</samp>）来修改
    <samp class="SANS_TheSansMonoCd_W5Regular_11">ls</samp> 命令：
- en: '[PRE8]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: When you add anything to the end of a command, like <samp class="SANS_TheSansMonoCd_W5Regular_11">-a</samp>,
    you’re using a *command line argument*. Think of arguments as settings that change
    how the program you’re running will act—in this case, by showing hidden files
    instead of hiding them.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在命令后添加任何内容时，例如 <samp class="SANS_TheSansMonoCd_W5Regular_11">-a</samp>，你正在使用*命令行参数*。把参数看作是设置，它们改变了你运行的程序的行为——在这个例子中，通过显示隐藏文件而不是隐藏它们。
- en: By default, the <samp class="SANS_TheSansMonoCd_W5Regular_11">ls</samp> command
    displays files in a format intended to take up as few lines in your terminal as
    possible. However, you may want to display one file per line for easier reading
    and to get more information about each file, such as its size, when it was last
    modified, permissions, and whether it’s a folder. Using the <samp class="SANS_TheSansMonoCd_W5Regular_11">-l</samp>
    argument (short for <samp class="SANS_TheSansMonoCd_W5Regular_11">--format=long</samp>)
    formats the output as a list.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，<samp class="SANS_TheSansMonoCd_W5Regular_11">ls</samp> 命令以一种尽量占用少行终端的格式显示文件。然而，你可能希望每行显示一个文件，以便更容易阅读，并获得更多关于每个文件的信息，例如它的大小、最后修改时间、权限以及它是否是一个文件夹。使用
    <samp class="SANS_TheSansMonoCd_W5Regular_11">-l</samp> 参数（<samp class="SANS_TheSansMonoCd_W5Regular_11">--format=long</samp>
    的简写）将输出格式化为列表。
- en: 'You can use both <samp class="SANS_TheSansMonoCd_W5Regular_11">-a</samp> and
    <samp class="SANS_TheSansMonoCd_W5Regular_11">-l</samp> at the same time like
    so:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以像这样同时使用 <samp class="SANS_TheSansMonoCd_W5Regular_11">-a</samp> 和 <samp class="SANS_TheSansMonoCd_W5Regular_11">-l</samp>：
- en: '[PRE9]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Running this command on my Mac gives me the following output:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的Mac上运行这个命令会给我以下输出：
- en: '[PRE10]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The first column of this output describes the type of file—whether it’s a *directory*
    (another name for a folder) or an ordinary file—as well as the file’s permissions.
    Directories start with <samp class="SANS_TheSansMonoCd_W5Regular_11">d</samp>,
    and ordinary files start with a hyphen (<samp class="SANS_TheSansMonoCd_W5Regular_11">-</samp>).
    The second column represents the number of links in the file, which isn’t relevant
    for the purposes of this book.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这个输出的第一列描述了文件的类型——它是*目录*（文件夹的另一种叫法）还是普通文件——以及文件的权限。目录以 <samp class="SANS_TheSansMonoCd_W5Regular_11">d</samp>
    开头，普通文件以连字符（<samp class="SANS_TheSansMonoCd_W5Regular_11">-</samp>）开头。第二列表示文件的链接数，这对本书的目的不太相关。
- en: The third and fourth columns represent the user and the *group* that owns the
    file. In addition to users, operating systems have groups of users that can have
    their own permissions. For example, in Linux, all users allowed to use <samp class="SANS_TheSansMonoCd_W5Regular_11">sudo</samp>
    are in the *sudo* group. If you create or download a file, its user and group
    are normally your username. The fifth column is the file size in bytes. For example,
    in the file called *.zsh_history*, my output is 2,773 bytes.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 第三列和第四列分别表示用户和拥有文件的*组*。除了用户，操作系统还有用户组，用户组也可以拥有自己的权限。例如，在Linux中，所有被允许使用 <samp
    class="SANS_TheSansMonoCd_W5Regular_11">sudo</samp> 的用户都在*sudo*组内。如果你创建或下载一个文件，它的用户和组通常是你的用户名。第五列是文件的大小，以字节为单位。例如，在名为
    *.zsh_history* 的文件中，我的输出是2,773字节。
- en: The next three columns of the output represent the time and date when the file
    was last modified, and the final column shows the filename.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 输出的接下来的三列表示文件最后一次修改的时间和日期，最后一列显示文件名。
- en: 'To see a listing of files in a folder other than the working directory, add
    the path to that folder to the end of the <samp class="SANS_TheSansMonoCd_W5Regular_11">ls</samp>
    command. For example, this is how I’d create a listing of files in my *code/hacks-leaks-and-revelations*
    folder, which contains the files released with this book:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看工作目录以外的文件夹中的文件列表，请将该文件夹的路径添加到 <samp class="SANS_TheSansMonoCd_W5Regular_11">ls</samp>
    命令的末尾。例如，这是我如何创建我的*code/hacks-leaks-and-revelations* 文件夹的文件列表，该文件夹包含了本书发布的文件：
- en: '[PRE11]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'I’d get the following output:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我将得到以下输出：
- en: '[PRE12]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: You’ll download your own copy of these files in Exercise 3-7.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 你将在练习3-7中下载你自己的这些文件副本。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Navigating Relative
    and Absolute Paths</samp>
  id: totrans-112
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">导航相对路径和绝对路径</samp>
- en: Programs often require you to provide paths to files or folders, usually when
    you run a program that works with specific files on your computer. The path that
    I passed into <samp class="SANS_TheSansMonoCd_W5Regular_11">ls</samp> in the previous
    section, *code/hacks-leaks-and-revelations*, is a *relative* path, meaning it’s
    relative to the current working directory, my home folder. Relative paths can
    change. For example, if I change my working directory from my home folder (*/Users/micah*)
    to just */Users*, the relative path to that folder changes to *micah/code/hacks-leaks-and-revelations*.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 程序通常要求你提供文件或文件夹的路径，通常是在运行处理计算机中特定文件的程序时。之前章节中我传递给 <samp class="SANS_TheSansMonoCd_W5Regular_11">ls</samp>
    的路径 *code/hacks-leaks-and-revelations* 是一个 *相对* 路径，意味着它相对于当前工作目录，即我的主文件夹。相对路径是可以变化的。例如，如果我将工作目录从我的主文件夹（*/Users/micah*）更改为
    */Users*，那么该文件夹的相对路径将变为 *micah/code/hacks-leaks-and-revelations*。
- en: The *absolute* path to the *code/hacks-leaks-and-revelations* folder is */Users/micah/code/hacks-leaks-and-revelations*,
    which always provides the location of that folder regardless of my working directory.
    Absolute paths start with a forward slash (*/*), which is also known as the root
    path.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '*绝对* 路径指向 *code/hacks-leaks-and-revelations* 文件夹的位置是 */Users/micah/code/hacks-leaks-and-revelations*，它始终提供该文件夹的位置，无论我的工作目录是什么。绝对路径以正斜杠（*/*）开始，也被称为根路径。'
- en: 'You can use two keywords to access relative paths to specific folders: <samp
    class="SANS_TheSansMonoCd_W5Regular_11">.</samp> (dot), which represents a relative
    path to the current folder, and <samp class="SANS_TheSansMonoCd_W5Regular_11">..</samp>
    (dot dot), which represents a relative path to the *parent folder* (the folder
    that contains the current folder).'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用两个关键字来访问指向特定文件夹的相对路径：<samp class="SANS_TheSansMonoCd_W5Regular_11">.</samp>（点），它表示指向当前文件夹的相对路径；<samp
    class="SANS_TheSansMonoCd_W5Regular_11">..</samp>（点点），它表示指向 *父文件夹*（当前文件夹所在的文件夹）的相对路径。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Changing Directories</samp>
  id: totrans-116
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">更改目录</samp>
- en: 'The <samp class="SANS_TheSansMonoCd_W5Regular_11">cd</samp> command (which
    stands for “change directory”) allows you to change to a different folder. To
    change your working directory to the folder, run:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_TheSansMonoCd_W5Regular_11">cd</samp> 命令（代表“更改目录”）允许你更改到另一个文件夹。要将工作目录更改为该文件夹，请运行：
- en: '[PRE13]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: For <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11">path</samp>, substitute
    the path to the folder to which you’d like to move. You can use either a relative
    or an absolute path.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11">path</samp>，将其替换为你想要进入的文件夹的路径。你可以使用相对路径或绝对路径。
- en: 'Suppose I’m using macOS and have downloaded BlueLeaks to a *datasets* USB disk
    plugged into my machine. After opening a terminal, I can run the following command
    to change my working directory to the *BlueLeaks* folder, using the absolute path
    to the folder:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我使用的是 macOS，并且已经将 BlueLeaks 下载到插入电脑的 *datasets* USB 硬盘中。打开终端后，我可以运行以下命令，将工作目录更改为
    *BlueLeaks* 文件夹，使用该文件夹的绝对路径：
- en: '[PRE14]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Alternatively, I can use a relative path to the folder, running the following
    command from my home folder:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，我也可以使用相对路径来访问该文件夹，在我的主文件夹中运行以下命令：
- en: '[PRE15]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Why does the relative path start with <samp class="SANS_TheSansMonoCd_W5Regular_11">../..</samp>
    in this example? When I open the terminal, the working directory is my home folder,
    which in macOS is */Users/micah*. The relative path <samp class="SANS_TheSansMonoCd_W5Regular_11">..</samp>
    would be its parent folder, */Users*; the relative path <samp class="SANS_TheSansMonoCd_W5Regular_11">../..</samp>
    would be */*; the relative path <samp class="SANS_TheSansMonoCd_W5Regular_11">../../Volumes</samp>
    would be */Volumes*; and so on.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么在这个例子中相对路径以 <samp class="SANS_TheSansMonoCd_W5Regular_11">../..</samp> 开始？当我打开终端时，工作目录是我的主文件夹，在
    macOS 中是 */Users/micah*。相对路径 <samp class="SANS_TheSansMonoCd_W5Regular_11">..</samp>
    代表它的父文件夹 */Users*；相对路径 <samp class="SANS_TheSansMonoCd_W5Regular_11">../..</samp>
    代表 */*；相对路径 <samp class="SANS_TheSansMonoCd_W5Regular_11">../../Volumes</samp>
    代表 */Volumes*；以此类推。
- en: 'As noted earlier, the tilde symbol (<samp class="SANS_TheSansMonoCd_W5Regular_11">~</samp>)
    represents your home folder. No matter what your working directory is, you can
    run the following to go back to your home folder:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，波浪线符号（<samp class="SANS_TheSansMonoCd_W5Regular_11">~</samp>）代表你的主文件夹。无论你当前的工作目录是什么，你都可以运行以下命令返回到主文件夹：
- en: '[PRE16]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Use the following syntax to move to a folder inside your home folder:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下语法可以进入主文件夹中的某个文件夹：
- en: '[PRE17]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'For example, the following command would move you to your *Documents* folder:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，以下命令将使你进入 *Documents* 文件夹：
- en: '[PRE18]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: If you run <samp class="SANS_TheSansMonoCd_W5Regular_11">ls</samp> again after
    a <samp class="SANS_TheSansMonoCd_W5Regular_11">cd</samp> command, the output
    should show you the files in the folder to which you just moved.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在执行了<samp class="SANS_TheSansMonoCd_W5Regular_11">cd</samp>命令后再次运行<samp class="SANS_TheSansMonoCd_W5Regular_11">ls</samp>，输出应显示你刚刚切换到的文件夹中的文件。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Using the help Argument</samp>
  id: totrans-132
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">使用帮助参数</samp>
- en: 'Most commands let you use the argument <samp class="SANS_TheSansMonoCd_W5Regular_11">-h</samp>,
    or <samp class="SANS_TheSansMonoCd_W5Regular_11">--help</samp>, which displays
    detailed instructions explaining what the command does and how to use it. For
    example, try running the following:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数命令允许使用参数<samp class="SANS_TheSansMonoCd_W5Regular_11">-h</samp>或<samp class="SANS_TheSansMonoCd_W5Regular_11">--help</samp>，该参数显示详细的指令，解释该命令的功能和使用方法。例如，尝试运行以下命令：
- en: '[PRE19]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: This command should show instructions on all of the different arguments that
    are available to you when using the <samp class="SANS_TheSansMonoCd_W5Regular_11">unzip</samp>
    command, which is used to extract compressed ZIP files.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令应显示关于使用<samp class="SANS_TheSansMonoCd_W5Regular_11">unzip</samp>命令时可用的各种参数的说明，该命令用于解压缩ZIP压缩文件。
- en: 'Here’s the output I got when I ran that command on my Mac:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我在我的Mac上运行该命令时得到的输出：
- en: '[PRE20]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: This output briefly describes what each argument for the <samp class="SANS_TheSansMonoCd_W5Regular_11">unzip</samp>
    command does. For example, if you use the <samp class="SANS_TheSansMonoCd_W5Regular_11">-l</samp>
    argument, the command shows a list of all of the files and folders inside the
    ZIP file without actually unzipping it.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 该输出简要描述了每个<samp class="SANS_TheSansMonoCd_W5Regular_11">unzip</samp>命令参数的功能。例如，如果使用<samp
    class="SANS_TheSansMonoCd_W5Regular_11">-l</samp>参数，命令会显示ZIP文件中的所有文件和文件夹的列表，而不会实际解压文件。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Accessing Man Pages</samp>
  id: totrans-139
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">访问手册页</samp>
- en: 'Many commands also have manuals, otherwise known as *man pages*, which give
    more detail about how to use those commands. Run the following to access a command’s
    man page:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 许多命令也有手册，即*man手册页*，提供有关如何使用这些命令的更多详细信息。运行以下命令以访问命令的手册页：
- en: '[PRE21]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'For example, to read the manual for the <samp class="SANS_TheSansMonoCd_W5Regular_11">unzip</samp>
    command, run:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要阅读<samp class="SANS_TheSansMonoCd_W5Regular_11">unzip</samp>命令的手册，可以运行：
- en: '[PRE22]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The output should display a longer explanation of how to use the <samp class="SANS_TheSansMonoCd_W5Regular_11">unzip</samp>
    command and its arguments.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 输出应显示如何使用<samp class="SANS_TheSansMonoCd_W5Regular_11">unzip</samp>命令及其参数的详细说明。
- en: Use the up and down arrows and the page up and page down keys to scroll through
    the man pages, or press <samp class="SANS_TheSansMonoCd_W5Regular_11">/</samp>
    and enter a term to search. For example, to learn more details about how the <samp
    class="SANS_TheSansMonoCd_W5Regular_11">unzip</samp> command’s <samp class="SANS_TheSansMonoCd_W5Regular_11">-l</samp>
    argument works, press <samp class="SANS_TheSansMonoCd_W5Regular_11">/</samp> and
    enter <samp class="SANS_TheSansMonoCd_W7Bold_B_11">-l</samp>, then press ENTER.
    This should bring you to the first time <samp class="SANS_TheSansMonoCd_W5Regular_11">-l</samp>
    appears on the man page. Press N to move on to the next occurrence of your search
    term.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 使用上下箭头和翻页键滚动查看手册页，或按<samp class="SANS_TheSansMonoCd_W5Regular_11">/</samp>并输入一个术语进行搜索。例如，要了解<samp
    class="SANS_TheSansMonoCd_W5Regular_11">unzip</samp>命令的<samp class="SANS_TheSansMonoCd_W5Regular_11">-l</samp>参数的详细信息，按<samp
    class="SANS_TheSansMonoCd_W5Regular_11">/</samp>并输入<samp class="SANS_TheSansMonoCd_W7Bold_B_11">-l</samp>，然后按ENTER。这将带你到手册页中首次出现<samp
    class="SANS_TheSansMonoCd_W5Regular_11">-l</samp>的地方。按N键跳转到下一个搜索结果。
- en: When you’re finished, press Q to quit the man page.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，按Q键退出手册页。
- en: <samp class="SANS_Futura_Std_Bold_B_11">Tips for Navigating the Terminal</samp>
  id: totrans-147
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">终端导航技巧</samp>
- en: This section introduces ways to make working on the command line more convenient
    and efficient, along with tips for avoiding and fixing errors. It also shows how
    to handle problematic filenames, such as those with spaces, quotes, or other special
    characters. A basic understanding of these concepts will save you a lot of time
    in the future.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 本节介绍了如何使命令行操作更便捷高效，并提供了避免和修复错误的技巧。还展示了如何处理有问题的文件名，例如包含空格、引号或其他特殊字符的文件名。对这些概念的基本理解将在未来节省大量时间。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Entering Commands
    with Tab Completion</samp>
  id: totrans-149
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">使用 Tab 补全输入命令</samp>
- en: 'Shells have a feature called *tab completion* that saves time and prevents
    errors: enter the first few letters of a command or a path, then press TAB. Your
    shell will fill in the rest if possible.'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: Shell 有一个叫做 *tab 补全* 的功能，能够节省时间并防止错误：输入命令或路径的前几个字母，然后按 TAB 键，终端会自动填充其余部分（如果可能的话）。
- en: For example, both macOS and Ubuntu come with a program called hexdump. In a
    terminal, enter <samp class="SANS_TheSansMonoCd_W7Bold_B_11">hexd</samp> and press
    TAB. This should automatically fill in the rest of the hexdump command. Tab completion
    also works for paths. For example, Unix-like operating systems use the */tmp*
    folder to store temporary files. Enter <samp class="SANS_TheSansMonoCd_W7Bold_B_11">ls
    /tm</samp> and press TAB. Your shell should add the <samp class="SANS_TheSansMonoCd_W5Regular_11">p</samp>
    to finish typing out the full command.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，macOS 和 Ubuntu 都自带一个叫做 hexdump 的程序。在终端中，输入 <samp class="SANS_TheSansMonoCd_W7Bold_B_11">hexd</samp>
    并按下 TAB 键，终端应该会自动填充剩下的 hexdump 命令。Tab 补全也适用于路径。例如，类 Unix 操作系统使用 * /tmp * 文件夹来存储临时文件。输入
    <samp class="SANS_TheSansMonoCd_W7Bold_B_11">ls /tm</samp> 并按下 TAB 键，终端会添加 <samp
    class="SANS_TheSansMonoCd_W5Regular_11">p</samp> 来完成整个命令。
- en: 'If you enter only the first couple letters of a command or a path, there may
    be more than one way for your shell to complete your line of code. Assuming that
    you have both *Downloads* and *Documents* folders in your home folder, type <samp
    class="SANS_TheSansMonoCd_W7Bold_B_11">ls ~/Do</samp> and press TAB. You’ll hear
    a quiet beep, meaning that the shell doesn’t know how to proceed. Press TAB one
    more time, and it should display the options, like this:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你只输入命令或路径的前几个字母，终端可能有多种方式来完成你的代码行。假设你在主文件夹中有 *Downloads* 和 *Documents* 文件夹，输入
    <samp class="SANS_TheSansMonoCd_W7Bold_B_11">ls ~/Do</samp> 并按 TAB 键，你会听到一个轻微的哔声，意味着终端无法确定如何继续。再按一次
    TAB 键，终端应该会显示选项，像这样：
- en: '[PRE23]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: If you enter a <samp class="SANS_TheSansMonoCd_W5Regular_11">c</samp> so that
    your command so far is <samp class="SANS_TheSansMonoCd_W5Regular_11">ls ~/Doc</samp>
    and press TAB, the command should complete to <samp class="SANS_TheSansMonoCd_W5Regular_11">ls
    ~/Documents/</samp>. If you enter a <samp class="SANS_TheSansMonoCd_W5Regular_11">w</samp>
    so that your command so far is <samp class="SANS_TheSansMonoCd_W5Regular_11">ls
    ~/Dow</samp> and press TAB, it should complete to <samp class="SANS_TheSansMonoCd_W5Regular_11">ls
    ~/Downloads/</samp>.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你输入一个 <samp class="SANS_TheSansMonoCd_W5Regular_11">c</samp>，使得你当前的命令是 <samp
    class="SANS_TheSansMonoCd_W5Regular_11">ls ~/Doc</samp>，然后按下 TAB 键，命令应该自动补全为 <samp
    class="SANS_TheSansMonoCd_W5Regular_11">ls ~/Documents/</samp>。如果你输入一个 <samp class="SANS_TheSansMonoCd_W5Regular_11">w</samp>，使得你当前的命令是
    <samp class="SANS_TheSansMonoCd_W5Regular_11">ls ~/Dow</samp>，然后按下 TAB 键，命令应该自动补全为
    <samp class="SANS_TheSansMonoCd_W5Regular_11">ls ~/Downloads/</samp>。
- en: 'If you’ve already typed out the path of a folder, you can also press TAB to
    list files in that folder, or to automatically complete the filename if there’s
    only one file in the folder. For example, say I have my *datasets* USB disk, on
    which I’ve downloaded BlueLeaks, plugged into my Ubuntu computer. If I want to
    change to my *BlueLeaks* folder, I can enter the following and press TAB:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经输入了文件夹的路径，也可以按 TAB 键列出该文件夹中的文件，或者如果文件夹中只有一个文件，自动完成文件名。例如，假设我将 *datasets*
    USB 磁盘插入了我的 Ubuntu 电脑，并且其中下载了 BlueLeaks。如果我想切换到 *BlueLeaks* 文件夹，我可以输入以下命令并按下 TAB
    键：
- en: '[PRE24]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'This completes the command as follows:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 这将自动补全命令如下：
- en: '[PRE25]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'I press TAB again, and my computer beeps and lists the folders in */Volumes*,
    which in my case are *Macintosh HD* and *datasets*. I enter <samp class="SANS_TheSansMonoCd_W7Bold_B_11">d</samp>,
    so my command is <samp class="SANS_TheSansMonoCd_W5Regular_11">cd /Volumes/d</samp>,
    and press TAB, and the shell completes the command as follows:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 我再次按下 TAB 键，电脑发出哔声，并列出 *Volumes* 文件夹中的文件夹，在我这台电脑上是 *Macintosh HD* 和 *datasets*。我输入
    <samp class="SANS_TheSansMonoCd_W7Bold_B_11">d</samp>，所以我的命令是 <samp class="SANS_TheSansMonoCd_W5Regular_11">cd
    /Volumes/d</samp>，然后按下 TAB 键，终端会自动补全命令如下：
- en: '[PRE26]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'I press TAB again. My computer beeps again and lists all of the files and folders
    in my *datasets* USB disk. I enter <samp class="SANS_TheSansMonoCd_W7Bold_B_11">B</samp>
    (the first letter of BlueLeaks) and press TAB, which gives me:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 我再次按下 TAB 键，电脑再次发出哔声，并列出我 *datasets* USB 磁盘中的所有文件和文件夹。我输入 <samp class="SANS_TheSansMonoCd_W7Bold_B_11">B</samp>（BlueLeaks
    的首字母）并按下 TAB 键，终端会显示如下：
- en: '[PRE27]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Finally, I press ENTER to change to that folder.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我按下 ENTER 键以切换到该文件夹。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Editing Commands</samp>
  id: totrans-164
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">编辑命令</samp>
- en: You can also edit commands. When you start typing a command, you can press the
    left and right arrow keys to move the cursor, allowing you to edit the command
    before running it. You can also press HOME and END—or, if you’re using a Mac keyboard,
    CONTROL-A and CONTROL-E—to go to the beginning and end of a line, respectively.
    You can also cycle between commands you’ve already run using the up and down arrows.
    If you just ran a command and want to run it again, or to modify it and then run
    it, press the up arrow to return to it. Once you find the command you’re looking
    for, use the arrow keys to move your cursor to the correct position, edit it,
    and then press ENTER to run it again.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以编辑命令。当你开始输入命令时，可以按左右箭头键来移动光标，这样可以在运行命令之前编辑它。你还可以按HOME和END键——或者如果你使用的是Mac键盘，可以按CONTROL-A和CONTROL-E——分别跳到行的开头和结尾。你还可以使用上下箭头键在你已经运行过的命令之间切换。如果你刚运行了一个命令，想要再次运行，或者想修改后再运行，按上箭头回到该命令。找到你想要的命令后，使用箭头键将光标移动到正确的位置，编辑它，然后按ENTER重新运行。
- en: For example, I frequently get “permission denied” errors when I accidentally
    run commands as my unprivileged user when I should have run them as root. When
    this happens, I press the up arrow, then CONTROL-A to go to the beginning of the
    line, add <samp class="SANS_TheSansMonoCd_W5Regular_11">sudo</samp>, and press
    ENTER to successfully run the command.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，当我不小心以普通用户身份运行命令时，系统经常会出现“权限拒绝”错误，而我应该以root用户身份运行这些命令。发生这种情况时，我按上箭头，然后按CONTROL-A跳到行首，添加<samp
    class="SANS_TheSansMonoCd_W5Regular_11">sudo</samp>，然后按ENTER成功运行该命令。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Dealing with Spaces
    in Filenames</samp>
  id: totrans-167
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">处理文件名中的空格</samp>
- en: 'Sometimes filenames contain multiple words separated by spaces. If you don’t
    explicitly tell your shell that a space is part of a filename, the shell assumes
    that the space is there to separate parts of your command. For example, this command
    lists the files in the *Documents* folder:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 有时文件名包含多个由空格分隔的单词。如果你没有明确告诉shell空格是文件名的一部分，shell会认为空格是用来分隔命令的各个部分。例如，以下命令列出*Documents*文件夹中的文件：
- en: '[PRE28]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Under the hood, your shell takes this string of characters and splits it into
    a list of parts that are separated by spaces: <samp class="SANS_TheSansMonoCd_W5Regular_11">ls</samp>,
    <samp class="SANS_TheSansMonoCd_W5Regular_11">-lh</samp>, and <samp class="SANS_TheSansMonoCd_W5Regular_11">~/Documents</samp>.
    The first part, <samp class="SANS_TheSansMonoCd_W5Regular_11">ls</samp>, is the
    command to run. The rest of the parts are the command’s arguments. The <samp class="SANS_TheSansMonoCd_W5Regular_11">-lh</samp>
    argument tells the program to display the output as a list and make the file sizes
    human-readable. That is, it will convert the file sizes into units that are easier
    to read, like kilobytes, megabytes, and gigabytes, rather than a large number
    of bytes. The <samp class="SANS_TheSansMonoCd_W5Regular_11">~/Documents</samp>
    argument means you want to list the files in that folder.'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在底层，shell将这个字符串拆分成几个由空格分隔的部分：<samp class="SANS_TheSansMonoCd_W5Regular_11">ls</samp>、<samp
    class="SANS_TheSansMonoCd_W5Regular_11">-lh</samp>和<samp class="SANS_TheSansMonoCd_W5Regular_11">~/Documents</samp>。第一个部分<samp
    class="SANS_TheSansMonoCd_W5Regular_11">ls</samp>是要运行的命令。其余部分是命令的参数。<samp class="SANS_TheSansMonoCd_W5Regular_11">-lh</samp>参数告诉程序以列表形式显示输出，并使文件大小易于阅读。也就是说，它会将文件大小转换为更易读的单位，如千字节、兆字节和吉字节，而不是显示为大量字节数。<samp
    class="SANS_TheSansMonoCd_W5Regular_11">~/Documents</samp>参数表示你想列出该文件夹中的文件。
- en: 'Suppose you want to use the same command to list the files in a folder with
    a space in its name, like *~/My Documents*. You’ll run into problems if you enter
    this command:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你想使用相同的命令列出一个文件夹中的文件，而该文件夹的名称中包含空格，例如*~/My Documents*。如果你输入以下命令，就会遇到问题：
- en: '[PRE29]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: When your shell tries to separate this command into parts, it will come up with
    <samp class="SANS_TheSansMonoCd_W5Regular_11">ls</samp>, <samp class="SANS_TheSansMonoCd_W5Regular_11">-lh</samp>,
    <samp class="SANS_TheSansMonoCd_W5Regular_11">~/My</samp>, and <samp class="SANS_TheSansMonoCd_W5Regular_11">Documents</samp>;
    that is, it sees *~/My Documents* as two separate arguments, <samp class="SANS_TheSansMonoCd_W5Regular_11">~/My</samp>
    and <samp class="SANS_TheSansMonoCd_W5Regular_11">Documents</samp>. It will try
    to list the files in the folder *~/My* (which doesn’t exist), then also list files
    in the folder *Documents*, which isn’t what you intended.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 当你的 shell 尝试将这个命令分成几部分时，它会得到 <samp class="SANS_TheSansMonoCd_W5Regular_11">ls</samp>、<samp
    class="SANS_TheSansMonoCd_W5Regular_11">-lh</samp>、<samp class="SANS_TheSansMonoCd_W5Regular_11">~/My</samp>
    和 <samp class="SANS_TheSansMonoCd_W5Regular_11">Documents</samp>；也就是说，它将 *~/My
    Documents* 视为两个单独的参数，<samp class="SANS_TheSansMonoCd_W5Regular_11">~/My</samp>
    和 <samp class="SANS_TheSansMonoCd_W5Regular_11">Documents</samp>。它会尝试列出 *~/My*
    文件夹中的文件（该文件夹不存在），然后列出 *Documents* 文件夹中的文件，这不是你想要的效果。
- en: 'To solve this problem, put the name of the folder in quotes:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，将文件夹名称用引号括起来：
- en: '[PRE30]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: The shell sees anything within quotes as a single entity. In this case, <samp
    class="SANS_TheSansMonoCd_W5Regular_11">ls</samp> is the command and its arguments
    are <samp class="SANS_TheSansMonoCd_W5Regular_11">-lh</samp> followed by <samp
    class="SANS_TheSansMonoCd_W5Regular_11">~/My Documents</samp>.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: Shell 会将引号中的任何内容视为一个整体。在这个例子中，<samp class="SANS_TheSansMonoCd_W5Regular_11">ls</samp>
    是命令，参数是 <samp class="SANS_TheSansMonoCd_W5Regular_11">-lh</samp>，后面跟着 <samp class="SANS_TheSansMonoCd_W5Regular_11">~/My
    Documents</samp>。
- en: 'Alternatively, you can use a backslash (<samp class="SANS_TheSansMonoCd_W5Regular_11">\</samp>)
    to *escape* the space:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，你可以使用反斜杠 (<samp class="SANS_TheSansMonoCd_W5Regular_11">\</samp>) 来*转义*空格：
- en: '[PRE31]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: In the Unix family of operating systems, the backslash is called the *escape
    character*. When the shell parses that string of characters, it treats an *escaped
    space* (<samp class="SANS_TheSansMonoCd_W5Regular_11">\</samp> followed by a space)
    as a part of the name. Again, the shell reads <samp class="SANS_TheSansMonoCd_W5Regular_11">ls</samp>
    as the command and <samp class="SANS_TheSansMonoCd_W5Regular_11">-lh</samp> and
    <samp class="SANS_TheSansMonoCd_W5Regular_11">~/My Documents</samp> as its arguments.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Unix 系列操作系统中，反斜杠被称为 *转义字符*。当 shell 解析这串字符时，它会将*转义空格*（<samp class="SANS_TheSansMonoCd_W5Regular_11">\</samp>
    后跟一个空格）视为名称的一部分。再次强调，shell 会将 <samp class="SANS_TheSansMonoCd_W5Regular_11">ls</samp>
    视为命令，将 <samp class="SANS_TheSansMonoCd_W5Regular_11">-lh</samp> 和 <samp class="SANS_TheSansMonoCd_W5Regular_11">~/My
    Documents</samp> 视为其参数。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Using Single Quotes
    Around Double Quotes</samp>
  id: totrans-180
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">使用单引号包围双引号</samp>
- en: 'You can use the escape character to escape more than spaces. Suppose you want
    to delete a filename that has a space *and* quotes in it, like *Say “Hello”.txt.*
    You can use the <samp class="SANS_TheSansMonoCd_W5Regular_11">rm</samp> command
    to delete files, but the following syntax won’t work:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用转义字符来转义不仅仅是空格。假设你想删除一个文件名，其中包含空格*和*引号，例如 *Say “Hello”.txt*。你可以使用 <samp
    class="SANS_TheSansMonoCd_W5Regular_11">rm</samp> 命令来删除文件，但以下语法将不起作用：
- en: '[PRE32]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Your shell will split this command into the words <samp class="SANS_TheSansMonoCd_W5Regular_11">rm</samp>,
    <samp class="SANS_TheSansMonoCd_W5Regular_11">Say</samp>, and <samp class="SANS_TheSansMonoCd_W5Regular_11">Hello.txt</samp>.
    You might think you could solve this by simply adding more quotes
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 你的 shell 会将这个命令拆分为 <samp class="SANS_TheSansMonoCd_W5Regular_11">rm</samp>、<samp
    class="SANS_TheSansMonoCd_W5Regular_11">Say</samp> 和 <samp class="SANS_TheSansMonoCd_W5Regular_11">Hello.txt</samp>。你可能认为只需添加更多引号就能解决这个问题。
- en: '[PRE33]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'but that won’t work either, since you’re quoting something that contains quotes
    already. Instead, surround the argument with single quotes (''), like this:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 但是那样也不行，因为你引用的内容已经包含了引号。相反，可以使用单引号（'）将参数包围起来，像这样：
- en: '[PRE34]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Your shell will read this command as <samp class="SANS_TheSansMonoCd_W5Regular_11">rm</samp>
    and the argument as <samp class="SANS_TheSansMonoCd_W5Regular_11">Say "Hello"
    .txt</samp>, exactly as you intended.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 你的 shell 会将这个命令读作 <samp class="SANS_TheSansMonoCd_W5Regular_11">rm</samp>，并将参数读作
    <samp class="SANS_TheSansMonoCd_W5Regular_11">Say "Hello" .txt</samp>，完全符合你的意图。
- en: Avoid putting spaces, quotes, or other troublesome characters in filenames whenever
    possible. Sometimes you can’t avoid them, especially when working with datasets
    full of someone else’s files. Tab completion helps in those cases, allowing you
    to enter just enough of the filename so that when you press TAB, your shell will
    fill out the rest for you. To delete a file in your working directory called *Say
    “Hello”.txt*, for example, entering <samp class="SANS_TheSansMonoCd_W5Regular_11">rm
    Sa</samp>, then pressing TAB, completes the command to <samp class="SANS_TheSansMonoCd_W5Regular_11">rm
    Say\ \"Hello\".txt</samp> with the correct escape characters included, so you
    don’t have to provide the proper syntax yourself.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 尽量避免在文件名中使用空格、引号或其他容易出问题的字符。有时你无法避免它们，特别是当你在处理别人文件的集合时。在这种情况下，Tab 补全非常有帮助，允许你只输入文件名的一部分，当你按下
    TAB 键时，shell 会自动补全其余部分。例如，要删除工作目录中的文件*Say “Hello”.txt*，你可以输入<samp class="SANS_TheSansMonoCd_W5Regular_11">rm
    Sa</samp>，然后按 TAB 键，命令会自动补全为<samp class="SANS_TheSansMonoCd_W5Regular_11">rm Say\
    \"Hello\".txt</samp>，并自动包含正确的转义字符，你无需自己提供正确的语法。
- en: <samp class="SANS_Futura_Std_Bold_B_11">Installing and Uninstalling Software
    with Package Managers</samp>
  id: totrans-189
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">使用包管理器安装和卸载软件</samp>
- en: Of the many powerful command line tools that let you quickly work with datasets,
    only some come preinstalled; you’ll need to install the rest yourself. While you’re
    likely used to installing software by downloading an installer from a website
    and then running it, the command line uses *package* *managers*, programs that
    let you install, uninstall, and update software. Nearly all CLI software is free
    and open source, so Linux operating systems come with large collections of software
    that you can easily install or uninstall with a single command. Package management
    projects are also available for macOS (Homebrew) and Windows (Chocolately).
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多强大的命令行工具中，只有一些工具是预装的，剩下的你需要自己安装。虽然你可能习惯通过从网站下载安装程序并运行来安装软件，但命令行使用的是*包* *管理器*，它们是让你能够安装、卸载和更新软件的程序。几乎所有的
    CLI 软件都是免费和开源的，因此 Linux 操作系统自带了大量的软件，你可以通过一个命令轻松安装或卸载。对于 macOS（Homebrew）和 Windows（Chocolately）也有相应的包管理项目。
- en: If you’re using Linux, you likely use a package manager called apt. This is
    what the popular Linux operating systems like Ubuntu and Debian use, as well as
    all of the Linux distributions based on them (including Ubuntu in WSL). If your
    Linux distribution doesn’t use apt, you’ll need to look up the package manager
    documentation for your operating system.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是 Linux，你可能会使用名为 apt 的包管理器。这是流行的 Linux 操作系统如 Ubuntu 和 Debian 使用的包管理器，所有基于这些操作系统的
    Linux 发行版（包括在 WSL 中的 Ubuntu）也都使用这个包管理器。如果你的 Linux 发行版不使用 apt，你需要查阅与你操作系统相对应的包管理器文档。
- en: If you’re using a Mac, start with Exercise 3-2 to learn how to use Homebrew.
    If you’re using Linux or Windows with WSL, skip to Exercise 3-3 to learn how to
    use apt. This book mostly uses Unix shells and doesn’t cover Chocolately, which
    installs Windows software instead of Linux software.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是 Mac，从练习 3-2 开始，学习如何使用 Homebrew。如果你使用的是 Linux 或启用了 WSL 的 Windows，跳到练习
    3-3，学习如何使用 apt。本书主要使用 Unix shell，不涉及 Chocolately，它是用来安装 Windows 软件，而非 Linux 软件。
- en: '<samp class="SANS_Futura_Std_Heavy_B_21">Exercise 3-2: Manage Packages with
    Homebrew on macOS</samp>'
  id: totrans-193
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Heavy_B_21">练习 3-2：在 macOS 上使用 Homebrew 管理软件包</samp>
- en: 'To install Homebrew, macOS’s package manager, open a browser and go to Homebrew’s
    website at [*https://<wbr>brew<wbr>.sh*](https://brew.sh), where you should find
    the command to install the tool. Copy and paste the installation command into
    your terminal and press RETURN:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 Homebrew（macOS 的包管理器），打开浏览器并访问 Homebrew 的官方网站 [*https://<wbr>brew<wbr>.sh*](https://brew.sh)，你应该能找到安装该工具的命令。复制并粘贴安装命令到你的终端，然后按
    RETURN 键：
- en: '[PRE35]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: This command uses a program called cURL, which I’ll discuss later in this chapter,
    to download a shell script from GitHub. It then runs that script using the bash
    shell. The script itself uses <samp class="SANS_TheSansMonoCd_W5Regular_11">sudo</samp>,
    meaning that if you enter your password, it will run commands as root on your
    computer.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令使用一个名为 cURL 的程序，我将在本章稍后讨论，来从 GitHub 下载一个 shell 脚本。然后，它使用 bash shell 运行这个脚本。脚本本身使用了<samp
    class="SANS_TheSansMonoCd_W5Regular_11">sudo</samp>，这意味着如果你输入密码，它将在你的计算机上以 root
    用户身份执行命令。
- en: 'This is what the output looks like on my Mac:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我在 Mac 上的输出：
- en: '[PRE36]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Enter the password you use to log in to your Mac and press RETURN to change
    your status from unprivileged user to root. No characters will appear in the terminal
    while you’re typing.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 输入你用于登录 Mac 的密码，并按 RETURN 键将你的身份从普通用户更改为 root。在你输入密码时，终端中不会显示任何字符。
- en: 'After you enter your password, Homebrew should show you a list of paths for
    files that it will install. The output should end with the following message:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在你输入密码后，Homebrew 应该会显示它将安装的文件路径列表。输出应以以下信息结束：
- en: '[PRE37]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Press RETURN and wait for Homebrew to finish installing. If any problems arise,
    Homebrew will fail and show you an error message.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 按下 RETURN 键并等待 Homebrew 完成安装。如果出现问题，Homebrew 会失败并显示错误信息。
- en: <samp class="SANS_Dogma_OT_Bold_B_21">WARNING</samp>
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Dogma_OT_Bold_B_21">警告</samp>
- en: '*Copying and pasting commands into your terminal can be dangerous: if a hacker
    tricks you into running the wrong shell script, they could hack your computer.
    Copy and paste commands in your terminal only from sources you trust.*'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '*将命令复制并粘贴到你的终端中可能会很危险：如果黑客诱使你运行错误的 shell 脚本，他们可能会入侵你的计算机。只从你信任的来源复制并粘贴命令。*'
- en: 'Now that you’ve installed Homebrew, you have access to the <samp class="SANS_TheSansMonoCd_W5Regular_11">brew</samp>
    command, which you can use to install more software. To check whether Homebrew
    has a certain program available to install, run:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经安装了 Homebrew，可以使用<samp class="SANS_TheSansMonoCd_W5Regular_11">brew</samp>命令来安装更多软件。要检查
    Homebrew 是否有某个程序可以安装，运行：
- en: '[PRE38]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'For example, Neofetch is a CLI program that displays information about your
    computer. To see if it’s available in Homebrew, run:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，Neofetch 是一个命令行程序，用于显示关于你计算机的信息。要查看它是否可以在 Homebrew 中安装，运行：
- en: '[PRE39]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: The output should list the packages that have *neofetch* in their names or descriptions;
    in this case, Neofetch should be listed. Similarly combine <samp class="SANS_TheSansMonoCd_W5Regular_11">brew
    search</samp> with other program names to check whether they’re available to install.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 输出应列出名称或描述中包含 *neofetch* 的软件包；在这种情况下，Neofetch 应该会列出。类似地，可以将 <samp class="SANS_TheSansMonoCd_W5Regular_11">brew
    search</samp> 与其他程序名结合使用，检查它们是否可以安装。
- en: 'When you find a package you want to install, run:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 当你找到想要安装的软件包时，运行：
- en: '[PRE40]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'For example, to install Neofetch, run:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要安装 Neofetch，运行：
- en: '[PRE41]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'This should download and install the <samp class="SANS_TheSansMonoCd_W5Regular_11">neofetch</samp>
    tool. Try running it:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该会下载并安装 <samp class="SANS_TheSansMonoCd_W5Regular_11">neofetch</samp> 工具。尝试运行它：
- en: '[PRE42]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '[Figure 3-5](#fig3-5) shows Neofetch running on my Mac. The figure is black-and-white
    in print, but if you run the command on your computer, you should see a rainbow
    of colors.'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 3-5](#fig3-5) 显示了 Neofetch 在我的 Mac 上运行的截图。图像是黑白打印的，但如果你在自己的电脑上运行该命令，你应该看到五彩斑斓的颜色。'
- en: '![A screenshot of a terminal running Neofetch in macOS. It shows a rainbow-colored
    Apple logo made out of text characters.](Images/Figure3-5.png)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![在 macOS 上运行 Neofetch 的终端截图。它显示了一个由文本字符组成的彩虹色 Apple 标志。](Images/Figure3-5.png)'
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 3-5: Running Neofetch
    on my Mac</samp>'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Book_Oblique_I_11">图 3-5：在我的 Mac 上运行 Neofetch</samp>
- en: 'Uninstall programs with the <samp class="SANS_TheSansMonoCd_W5Regular_11">brew
    uninstall</samp> command. For example, run the following to uninstall Neofetch:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 <samp class="SANS_TheSansMonoCd_W5Regular_11">brew uninstall</samp> 命令卸载程序。例如，运行以下命令卸载
    Neofetch：
- en: '[PRE43]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'To update all programs you’ve installed with Homebrew to their latest versions,
    run:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 要将你通过 Homebrew 安装的所有程序更新到最新版本，运行：
- en: '[PRE44]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Run <samp class="SANS_TheSansMonoCd_W7Bold_B_11">brew help</samp> to see some
    examples of how to use this command.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 运行<samp class="SANS_TheSansMonoCd_W7Bold_B_11">brew help</samp>可以查看一些使用该命令的示例。
- en: Now that you have a package manager installed, you’ll practice using the command
    line in Exercise 3-4.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经安装了软件包管理器，你将在练习 3-4 中练习使用命令行。
- en: '<samp class="SANS_Futura_Std_Heavy_B_21">Exercise 3-3: Manage Packages with
    apt on Windows or Linux</samp>'
  id: totrans-225
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Heavy_B_21">练习 3-3：在 Windows 或 Linux 上使用 apt 管理软件包</samp>
- en: 'You must run most apt commands as root. Before installing or updating software,
    make sure your operating system has an up-to-date list of available software by
    opening a terminal and running the following:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 你必须以 root 身份运行大多数 apt 命令。在安装或更新软件之前，通过打开终端并运行以下命令，确保你的操作系统拥有最新的软件列表：
- en: '[PRE45]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'When I run that command on my Linux computer, I get this output:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 当我在我的 Linux 计算机上运行该命令时，我得到以下输出：
- en: '[PRE46]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'This tells me I have 178 packages that can be upgraded. Run the following to
    upgrade your own software:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 这告诉我有 178 个软件包可以升级。运行以下命令来升级你自己的软件：
- en: '[PRE47]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Here’s the output when I run that command:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我运行该命令时的输出：
- en: '[PRE48]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Type Y and press ENTER to install the updates.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 输入Y并按ENTER键以安装更新。
- en: 'You’re now ready to install new software. To check whether the package manager
    has a certain program available to install, run:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经准备好安装新软件。要检查包管理器是否有某个程序可供安装，请运行：
- en: '[PRE49]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'You don’t need to use <samp class="SANS_TheSansMonoCd_W5Regular_11">sudo</samp>
    with this search command because it’s not installing or uninstalling anything.
    However, once you find a package you want to install, run:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 你不需要在此搜索命令中使用<samp class="SANS_TheSansMonoCd_W5Regular_11">sudo</samp>，因为它并没有安装或卸载任何内容。然而，一旦你找到想要安装的包，请运行：
- en: '[PRE50]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'For example, Neofetch is a CLI program that displays information about your
    computer. To see if Neofetch is available in your package manager, run:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，Neofetch是一个命令行程序，它显示关于你计算机的信息。要查看Neofetch是否在你的包管理器中可用，请运行：
- en: '[PRE51]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: The output should show a list of packages that have *neofetch* in their names
    or descriptions; in this case, Neofetch should be listed.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 输出应该显示一个包含*neofetch*名称或描述的包列表；在这种情况下，Neofetch应该会被列出。
- en: 'To install the <samp class="SANS_TheSansMonoCd_W5Regular_11">Neofetch</samp>
    tool, run:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装<samp class="SANS_TheSansMonoCd_W5Regular_11">Neofetch</samp>工具，请运行：
- en: '[PRE52]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: You should see a list of packages that you must install in order to use Neofetch.
    Press Y and then ENTER to download and install them all.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到一个列出所有必须安装的包的列表，以便使用Neofetch。按Y然后ENTER键来下载并安装它们。
- en: 'Once installation is complete, try running Neofetch:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，尝试运行Neofetch：
- en: '[PRE53]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '[Figure 3-6](#fig3-6) shows Neofetch running on my Ubuntu computer. The figure
    is black-and-white in print, but if you run the command on your computer, the
    output should appear in several different colors.'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 3-6](#fig3-6) 显示了在我的Ubuntu计算机上运行Neofetch的界面。图中的内容是黑白的，但如果你在自己的计算机上运行该命令，输出应该会以几种不同的颜色显示。'
- en: '![A screenshot of a terminal running Neofetch in Ubuntu. It shows a red and
    black Ubuntu logo made out of text characters.](Images/Figure3-6.png)'
  id: totrans-248
  prefs: []
  type: TYPE_IMG
  zh: '![一张终端运行Neofetch的截图，显示了用文本字符构成的红黑色Ubuntu标志。](Images/Figure3-6.png)'
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 3-6: Running Neofetch
    on my Ubuntu computer</samp>'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Book_Oblique_I_11">图 3-6：在我的Ubuntu计算机上运行Neofetch</samp>
- en: 'Uninstall packages with the <samp class="SANS_TheSansMonoCd_W5Regular_11">sudo
    apt remove</samp> command. For example, to uninstall Neofetch, run:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 使用<samp class="SANS_TheSansMonoCd_W5Regular_11">sudo apt remove</samp>命令卸载包。例如，要卸载Neofetch，请运行：
- en: '[PRE54]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Now that you have a package manager installed, you’ll practice using the command
    line in Exercise 3-4.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经安装了一个包管理器，接下来你将在练习3-4中练习使用命令行。
- en: '<samp class="SANS_Futura_Std_Heavy_B_21">Exercise 3-4: Practice Using the Command
    Line with</samp> <samp class="SANS_Futura_Std_Heavy_B_21">cURL</samp>'
  id: totrans-253
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Heavy_B_21">练习 3-4：使用命令行与</samp> <samp class="SANS_Futura_Std_Heavy_B_21">cURL</samp>
    进行练习
- en: In this exercise, you’ll learn how to determine whether you have a command installed,
    download web pages, save the output from a file using redirection, and view the
    contents of files directly from the terminal.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 在本练习中，你将学习如何确定是否已安装某个命令，下载网页，使用重定向保存文件输出，并直接从终端查看文件内容。
- en: 'The cURL program is a common way to load web pages from the command line. To
    load all of the HTML code for the website [*https://<wbr>www<wbr>.torproject<wbr>.org*](https://www.torproject.org),
    for example, run the following command:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: cURL程序是通过命令行加载网页的常用方法。例如，要加载网站[*https://<wbr>www<wbr>.torproject<wbr>.org*](https://www.torproject.org)的所有HTML代码，可以运行以下命令：
- en: '[PRE55]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'To see if cURL is installed, use the <samp class="SANS_TheSansMonoCd_W5Regular_11">which</samp>
    command:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看cURL是否已安装，请使用<samp class="SANS_TheSansMonoCd_W5Regular_11">which</samp>命令：
- en: '[PRE56]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: If cURL is installed, the output should show you the path where the program
    is installed on your computer (something like */usr/bin/curl*). If not, the output
    should return you to the shell prompt.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 如果已安装cURL，输出应该会显示该程序在计算机上的安装路径（类似于*/usr/bin/curl*）。如果没有，输出应该会返回到shell提示符。
- en: If you don’t have cURL, use your package manager to install it. Enter <samp
    class="SANS_TheSansMonoCd_W7Bold_B_11">sudo apt install curl</samp> for Windows
    with WSL and Linux machines or <samp class="SANS_TheSansMonoCd_W7Bold_B_11">brew
    install curl</samp> for Macs. Then run <samp class="SANS_TheSansMonoCd_W7Bold_B_11">which
    curl</samp> again, and you should see the path to the cURL program.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有cURL，可以使用包管理器进行安装。对于Windows的WSL和Linux机器，输入<samp class="SANS_TheSansMonoCd_W7Bold_B_11">sudo
    apt install curl</samp>，或者对于Mac，输入<samp class="SANS_TheSansMonoCd_W7Bold_B_11">brew
    install curl</samp>。然后再次运行<samp class="SANS_TheSansMonoCd_W7Bold_B_11">which curl</samp>，你应该能看到cURL程序的路径。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Download a Web Page
    with cURL</samp>
  id: totrans-261
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">使用cURL下载网页</samp>
- en: 'When you load a web page, your web browser renders a human-readable version
    of its content based on the page’s HTML, CSS, and JavaScript code. To see the
    raw HTML content from the web page hosted at *https://<wbr>example<wbr>.com*,
    run the following command in your terminal:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 当你加载一个网页时，浏览器会基于该页面的HTML、CSS和JavaScript代码呈现一个人类可读的版本。要查看从*https://<wbr>example<wbr>.com*托管的网页的原始HTML内容，可以在终端运行以下命令：
- en: '[PRE57]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: If you load that site in a browser and then view the HTML source by pressing
    CTRL-U in Windows or Linux, or z-U in macOS, you should see the same HTML code
    that this command displays in your terminal.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在浏览器中加载该网站，然后通过在Windows或Linux中按CTRL-U，或在macOS中按z-U来查看HTML源代码，你应该看到与此命令在终端中显示的相同HTML代码。
- en: 'Some websites are designed to show you text that’s easy to read in a terminal
    when you access them through cURL, as opposed to showing you HTML. For example,
    [*https://<wbr>ifconfig<wbr>.co*](https://ifconfig.co) will tell you your IP address,
    geolocate it, and tell you what country and city it thinks you’re in. Try running
    the following command:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 有些网站在你通过cURL访问时，会显示易于在终端中阅读的文本，而不是显示HTML。例如，[*https://<wbr>ifconfig<wbr>.co*](https://ifconfig.co)会告诉你你的IP地址，进行地理定位，并告诉你它认为你所在的国家和城市。尝试运行以下命令：
- en: '[PRE58]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'This should display your IP address. Next, run the following:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该显示你的IP地址。接下来，运行以下命令：
- en: '[PRE59]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: When I run this command, my output is <samp class="SANS_TheSansMonoCd_W5Regular_11">United
    States</samp>. You can try connecting to a VPN server in another country and then
    run it again; it should detect your web traffic as coming from that other country.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 当我运行此命令时，输出是<samp class="SANS_TheSansMonoCd_W5Regular_11">United States</samp>。你可以尝试连接到另一个国家的VPN服务器，然后再运行一次，它应该会检测到你的网络流量来自那个国家。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Save a Web Page to
    a File</samp>
  id: totrans-270
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">将网页保存到文件</samp>
- en: 'Run the following commands to load *https://<wbr>example<wbr>.com* and save
    it to a file:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下命令以加载*https://<wbr>example<wbr>.com*并将其保存到文件中：
- en: '[PRE60]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: The first line of code changes your working directory to */tmp*, a temporary
    folder where files you store get deleted automatically. The second line loads
    *https://<wbr>example<wbr>.com*, but instead of displaying the site’s contents
    for you in the terminal, it redirects them into the file *example.html* and doesn’t
    display anything in the terminal.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行代码将你的工作目录更改为*/tmp*，这是一个临时文件夹，存储在其中的文件会被自动删除。第二行加载*https://<wbr>example<wbr>.com*，但它并没有将网站内容显示在终端中，而是将其重定向到文件*example.html*并且不在终端中显示任何内容。
- en: The <samp class="SANS_TheSansMonoCd_W5Regular_11">></samp> character takes the
    output of the command to its left and saves it into the filename to its right.
    This is called *redirection*. Since you changed to the */tmp* folder before running
    the <samp class="SANS_TheSansMonoCd_W5Regular_11">curl</samp> command and the
    filename you provided was a relative path, it saved to the file */tmp/example.html*.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_TheSansMonoCd_W5Regular_11">></samp>字符将命令左侧的输出保存到其右侧的文件名中，这叫做*重定向*。由于你在运行<samp
    class="SANS_TheSansMonoCd_W5Regular_11">curl</samp>命令之前已切换到*/tmp*文件夹，而且你提供的文件名是相对路径，因此它将保存到文件*/tmp/example.html*。
- en: 'Run a directory listing to make sure you’ve stored the file correctly:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 运行目录列表命令，确保文件已正确保存：
- en: '[PRE61]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'This should list all the files in */tmp*, which should include a file called
    *example.html*. Try displaying the contents of that file in your terminal using
    the <samp class="SANS_TheSansMonoCd_W5Regular_11">cat</samp> command:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该列出*/tmp*文件夹中的所有文件，其中应包括名为*example.html*的文件。尝试使用<samp class="SANS_TheSansMonoCd_W5Regular_11">cat</samp>命令在终端中显示该文件的内容：
- en: '[PRE62]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: The terminal isn’t always a good place to view a file’s contents. For example,
    long lines will wrap, which may make them difficult to comprehend. In the following
    section, you’ll learn more about the different types of files and how to work
    with them more easily in the command line.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 终端并不总是查看文件内容的好地方。例如，长行会自动换行，这可能会让它们变得难以理解。在接下来的章节中，你将了解更多关于不同类型的文件以及如何在命令行中更轻松地处理它们的内容。
- en: <samp class="SANS_Futura_Std_Bold_B_11">Text Files vs. Binary Files</samp>
  id: totrans-280
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">文本文件与二进制文件</samp>
- en: 'There are many different types of files, but they all fit into one of two categories:
    *text files* and *binary files*.'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多不同类型的文件，但它们都可以归入两个类别之一：*文本文件*和*二进制文件*。
- en: Text files are made up of letters, numbers, punctuation, and a few special characters.
    Source code, like Python scripts (discussed in [Chapters 7](chapter7.xhtml) and
    [8](chapter8.xhtml)); shell scripts; and HTML, CSS, and JavaScript files are all
    examples of text files. Spreadsheets in CSV (comma-separated value) format and
    JSON files (discussed in [Chapters 9](chapter9.xhtml) and [11](chapter11.xhtml),
    respectively) are also text files. These files are relatively simple to work with.
    You can use the <samp class="SANS_TheSansMonoCd_W5Regular_11">cat</samp> command
    to display text files, as you did in the previous exercise.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 文本文件由字母、数字、标点符号和一些特殊字符组成。源代码，例如 Python 脚本（在[第 7 章](chapter7.xhtml)和[第 8 章](chapter8.xhtml)中讨论）；Shell
    脚本；以及 HTML、CSS 和 JavaScript 文件都是文本文件的例子。CSV（逗号分隔值）格式的电子表格和 JSON 文件（分别在[第 9 章](chapter9.xhtml)和[第
    11 章](chapter11.xhtml)中讨论）也是文本文件。这些文件相对简单，可以使用 <samp class="SANS_TheSansMonoCd_W5Regular_11">cat</samp>
    命令显示文本文件，就像你在前面的练习中做的那样。
- en: Binary files are made up of data that’s more than just letters, numbers, and
    punctuation. They’re designed for computer programs, not humans, to understand.
    If you try to view the contents of a binary file using the <samp class="SANS_TheSansMonoCd_W5Regular_11">cat</samp>
    command, you’ll just see gibberish. Instead, you must use specialized programs
    that understand those binary formats. Office documents like PDFs, Word documents,
    and Excel spreadsheets are binary files, as are images (like PNG and JPEG files),
    videos (like MP4 and MOV files), and compressed data like ZIP files.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 二进制文件由不仅仅是字母、数字和标点符号的数据组成。它们是为计算机程序而设计的，而非人类理解。如果你尝试使用 <samp class="SANS_TheSansMonoCd_W5Regular_11">cat</samp>
    命令查看二进制文件的内容，你将只看到乱码。相反，你必须使用理解这些二进制格式的专门程序。像 PDF、Word 文档和 Excel 电子表格这样的办公文档就是二进制文件，图像（如
    PNG 和 JPEG 文件）、视频（如 MP4 和 MOV 文件）以及压缩数据（如 ZIP 文件）也是二进制文件。
- en: <samp class="SANS_Dogma_OT_Bold_B_21">NOTE</samp>
  id: totrans-284
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: <samp class="SANS_Dogma_OT_Bold_B_21">注意</samp>
- en: '*The term* binary file *is technically a misnomer, because all files are represented
    by computers as binary—strings of ones and zeros.*'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: '*术语* 二进制文件 *从技术上讲是一个误用，因为所有文件在计算机中都是以二进制—由零和一组成的字符串—来表示的。*'
- en: 'Text files aren’t always easy to understand (if you’re not familiar with HTML,
    viewing it might look like gibberish), but it’s at least possible to display them
    in a terminal. This isn’t true for binary files. For example, if you try using
    <samp class="SANS_TheSansMonoCd_W5Regular_11">cat</samp> to display the contents
    of binary files like PNG images in your terminal, the output will look something
    like this:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 文本文件并不总是容易理解（如果你不熟悉 HTML，查看它可能会看起来像乱码），但至少可以在终端中显示它们。二进制文件则不一定如此。例如，如果你尝试使用
    <samp class="SANS_TheSansMonoCd_W5Regular_11">cat</samp> 在终端中显示 PNG 图像等二进制文件的内容，输出看起来可能是这样的：
- en: '[PRE63]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: Your terminal can’t display all of the characters that make up PNG images, so
    those characters just don’t get displayed. If you want to see the information
    stored in a PNG, you need to open it in software that’s designed to view images.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 你的终端无法显示构成 PNG 图像的所有字符，因此这些字符根本不会显示。如果你想查看 PNG 中存储的信息，你需要在专门设计用来查看图像的软件中打开它。
- en: To work with the files in datasets or write shell scripts and Python code, you’ll
    need a *text editor*, a program designed to edit text files. You’ll install a
    text editor in Exercise 3-5 to prepare for writing your first shell script.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 要处理数据集中的文件，或编写 Shell 脚本和 Python 代码，你需要一个*文本编辑器*，它是一个用于编辑文本文件的程序。在练习 3-5 中，你将安装一个文本编辑器，为编写第一个
    Shell 脚本做准备。
- en: '<samp class="SANS_Futura_Std_Heavy_B_21">Exercise 3-5: Install the VS Code
    Text Editor</samp>'
  id: totrans-290
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Heavy_B_21">练习 3-5：安装 VS Code 文本编辑器</samp>
- en: In this exercise, you’ll download the free and open source text editor Visual
    Studio Code (VS Code) and practice using it to view a file. Download VS Code from
    [*https://<wbr>code<wbr>.visualstudio<wbr>.com*](https://code.visualstudio.com)
    and install it. (If you’re already familiar with another text editor, feel free
    to keep using that one instead.)
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 在本练习中，你将下载免费的开源文本编辑器 Visual Studio Code (VS Code)，并练习使用它来查看文件。从 [*https://<wbr>code<wbr>.visualstudio<wbr>.com*](https://code.visualstudio.com)
    下载并安装 VS Code。（如果你已经熟悉其他文本编辑器，可以继续使用那个编辑器。）
- en: 'VS Code comes with a command called <samp class="SANS_TheSansMonoCd_W5Regular_11">code</samp>
    that makes it easy to open files in VS Code directly from your terminal. Once
    VS Code is finished installing, run the following commands:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: VS Code 配备了一个叫做 <samp class="SANS_TheSansMonoCd_W5Regular_11">code</samp> 的命令，使你能够直接从终端在
    VS Code 中打开文件。安装完成后，运行以下命令：
- en: '[PRE64]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: The first line of code saves the HTML from *https://<wbr>example<wbr>.com* in
    the file */tmp/example.html*, just like you did in Exercise 3-4\. The second line
    opens this file in VS Code.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行代码将来自 *https://<wbr>example<wbr>.com* 的 HTML 保存在文件 */tmp/example.html* 中，就像你在练习
    3-4 中做的那样。第二行代码将此文件在 VS Code 中打开。
- en: When you open new files and folders in VS Code, it asks whether you trust each
    file’s author, giving you the option to open the file in Restricted Mode. For
    the exercises in this book, you can open files without using Restricted Mode.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在 VS Code 中打开新文件和文件夹时，它会询问你是否信任每个文件的作者，并给你选择是否以受限模式打开文件的选项。对于本书中的练习，你可以在不使用受限模式的情况下打开文件。
- en: 'When you open *example.html*, it should look something like this:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 当你打开 *example.html* 时，应该是这样的：
- en: '[PRE65]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: The output shows the same HTML code that you saw in your terminal when you ran
    <samp class="SANS_TheSansMonoCd_W5Regular_11">cat/tmp/example.html</samp> in Exercise
    3-4, but this time it should be much easier to read. VS Code and many other text
    editors have a feature called *syntax highlighting*, where different parts of
    the file appear in different colors. This makes it far quicker and easier for
    your brain to interpret source code, and also for you to catch mistakes in syntax.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 输出显示的 HTML 代码与在终端中运行 <samp class="SANS_TheSansMonoCd_W5Regular_11">cat/tmp/example.html</samp>
    时看到的相同，但这次应该更容易阅读。VS Code 和许多其他文本编辑器有一个叫做 *语法高亮* 的功能，其中文件的不同部分会以不同的颜色显示。这使得大脑更快地解读源代码，也能帮助你更容易发现语法错误。
- en: VS Code is highly customizable and includes a wide variety of extensions that
    add extra functionality and make the program more pleasant to use. When you open
    new types of files, for instance, VS Code might ask if you’d like to install extensions
    to better support those files.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: VS Code 是高度可定制的，包含各种扩展功能，可以添加额外的功能，使程序使用起来更加愉悦。例如，当你打开新类型的文件时，VS Code 可能会询问你是否希望安装扩展程序以更好地支持这些文件。
- en: <samp class="SANS_Dogma_OT_Bold_B_21">NOTE</samp>
  id: totrans-300
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: <samp class="SANS_Dogma_OT_Bold_B_21">注意</samp>
- en: '*To learn more about VS Code’s other features, including when to use Restricted
    Mode, check out the documentation at* [https://code.visualstudio.com/docs](https://code.visualstudio.com/docs)*.*'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: '*要了解更多关于 VS Code 其他功能的信息，包括何时使用受限模式，请查看文档：* [https://code.visualstudio.com/docs](https://code.visualstudio.com/docs)*。*'
- en: Now that you have some experience running commands in a shell and have set up
    a text editor, you’ll write your first shell script in Exercise 3-6.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经有了一些在 Shell 中运行命令的经验，并且设置了一个文本编辑器，你将在练习 3-6 中编写你的第一个 Shell 脚本。
- en: '<samp class="SANS_Futura_Std_Heavy_B_21">Exercise 3-6: Write Your First Shell
    Script</samp>'
  id: totrans-303
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Heavy_B_21">练习 3-6：编写你的第一个 Shell 脚本</samp>
- en: As mentioned earlier, a shell script is a text file that contains a list of
    shell commands. When you tell your shell to run the script, it runs those commands
    one at a time. Many commands are themselves shell scripts, such as the <samp class="SANS_TheSansMonoCd_W5Regular_11">man</samp>
    command you used earlier in this chapter.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，Shell 脚本是一个包含 Shell 命令列表的文本文件。当你告诉 Shell 执行脚本时，它会一次执行一个命令。许多命令本身就是 Shell
    脚本，比如你在本章中早些时候使用的 <samp class="SANS_TheSansMonoCd_W5Regular_11">man</samp> 命令。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Navigate to Your
    USB Disk</samp>
  id: totrans-305
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">导航到你的 USB 磁盘</samp>
- en: Make sure your *datasets* USB disk is plugged in and mounted, and open up a
    terminal. To change your working directory to the *datasets* disk, skip to the
    subsection for your operating system.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你的 *datasets* USB 磁盘已插入并已挂载，然后打开终端。要将工作目录更改为 *datasets* 磁盘，请跳转到你操作系统的相关小节。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">Windows</samp>
  id: totrans-307
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">Windows</samp>
- en: 'After mounting your USB disk, open File Explorer by clicking **This PC** on
    the left. This page will show all of your connected drives and their drive letters.
    Note your USB disk’s drive letter, then change your working directory to the disk
    by running the following command, substituting <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11">d</samp>
    for the correct drive letter:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 在挂载您的 USB 磁盘后，点击左侧的**此电脑**打开文件资源管理器。该页面将显示您所有连接的驱动器及其驱动器字母。注意您的 USB 磁盘的驱动器字母，然后通过运行以下命令，将工作目录更改为该磁盘，替换
    <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11">d</samp> 为正确的驱动器字母：
- en: '[PRE66]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: Your shell’s working directory should now be your *datasets* USB disk. To check,
    run <samp class="SANS_TheSansMonoCd_W7Bold_B_11">ls</samp> to view the files on
    this disk.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 您的 shell 工作目录现在应该是您的 *datasets* USB 磁盘。要检查，运行 <samp class="SANS_TheSansMonoCd_W7Bold_B_11">ls</samp>
    查看该磁盘上的文件。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">macOS</samp>
  id: totrans-311
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">macOS</samp>
- en: 'After mounting your *datasets* USB disk, open a terminal and change your working
    directory to the disk by running the following command:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 在挂载您的 *datasets* USB 磁盘后，打开终端并通过运行以下命令，将工作目录更改为该磁盘：
- en: '[PRE67]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: Your shell’s working directory should now be your *datasets* USB disk. To check,
    run <samp class="SANS_TheSansMonoCd_W7Bold_B_11">ls</samp> to view the files on
    this disk.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 您的 shell 工作目录现在应该是您的 *datasets* USB 磁盘。要检查，运行 <samp class="SANS_TheSansMonoCd_W7Bold_B_11">ls</samp>
    查看该磁盘上的文件。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">Linux</samp>
  id: totrans-315
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">Linux</samp>
- en: 'After mounting your *datasets* USB disk, open a terminal and change your working
    directory to the disk. In Linux, the path to your disk is probably something like
    */media/*<*username*>*/datasets*. For example, my username is *micah*, so I would
    run this command:'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 在挂载您的 *datasets* USB 磁盘后，打开终端并通过运行以下命令，将工作目录更改为该磁盘。在 Linux 中，磁盘的路径可能类似于 */media/*<*username*>*/datasets*。例如，我的用户名是
    *micah*，所以我会运行以下命令：
- en: '[PRE68]'
  id: totrans-317
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: Your shell’s working directory should now be your *datasets* USB disk. To check,
    run <samp class="SANS_TheSansMonoCd_W7Bold_B_11">ls</samp> to view the files on
    this disk.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 您的 shell 工作目录现在应该是您的 *datasets* USB 磁盘。要检查，运行 <samp class="SANS_TheSansMonoCd_W7Bold_B_11">ls</samp>
    查看该磁盘上的文件。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Create an Exercises
    Folder</samp>
  id: totrans-319
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">创建一个练习文件夹</samp>
- en: 'The <samp class="SANS_TheSansMonoCd_W5Regular_11">mkdir</samp> command creates
    a new folder. Now that you’re in your USB disk drive in your terminal, run the
    following commands to create a new folder called *exercises*, and then switch
    to it:'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_TheSansMonoCd_W5Regular_11">mkdir</samp> 命令创建一个新文件夹。现在您已经在终端的
    USB 磁盘驱动器中，运行以下命令来创建一个名为 *exercises* 的新文件夹，然后切换到该文件夹：
- en: '[PRE69]'
  id: totrans-321
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'Now make a folder for your [Chapter 3](chapter3.xhtml) exercises:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 现在为您的 [第3章](chapter3.xhtml)练习创建一个文件夹：
- en: '[PRE70]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: Next, you’ll open the *exercises* folder in VS Code.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您将在 VS Code 中打开 *exercises* 文件夹。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Open a VS Code Workspace</samp>
  id: totrans-325
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">打开 VS Code 工作区</samp>
- en: 'Each VS Code window is called a *workspace*. You can add folders to your workspace,
    which allows you to easily open any files in that folder or create new ones. To
    open a VS Code workspace for your *exercises* folder, run the following command:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 每个 VS Code 窗口被称为一个 *工作区*。您可以向工作区添加文件夹，这样可以方便地打开该文件夹中的任何文件或创建新文件。要为您的 *exercises*
    文件夹打开一个 VS Code 工作区，运行以下命令：
- en: '[PRE71]'
  id: totrans-327
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: If the argument that you pass into <samp class="SANS_TheSansMonoCd_W5Regular_11">code</samp>
    is a folder, like <samp class="SANS_TheSansMonoCd_W5Regular_11">.</samp> (the
    current working directory), VS Code will add that folder to your workspace. If
    the path is a file, like in Exercise 3-5 when you opened */tmp/example.html*,
    it will open just that file.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您传递给 <samp class="SANS_TheSansMonoCd_W5Regular_11">code</samp> 的参数是一个文件夹，如
    <samp class="SANS_TheSansMonoCd_W5Regular_11">.</samp>（当前工作目录），VS Code 会将该文件夹添加到您的工作区。如果路径是一个文件，如在练习
    3-5 中打开 */tmp/example.html*，它将只打开该文件。
- en: Next, create a new file in the *chapter-3* folder. To do this, right-click the
    *chapter-3* folder, choose **New File**, name your file *exercise-3-6.sh*, and
    press ENTER. This should create a new file that you can edit. Since the file extension
    is *.sh*, VS Code should correctly guess that it’s a shell script and use the
    right type of syntax highlighting.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在 *chapter-3* 文件夹中创建一个新文件。为此，右键点击 *chapter-3* 文件夹，选择 **新建文件**，命名文件为 *exercise-3-6.sh*，然后按
    ENTER。这将创建一个新文件，您可以编辑。由于文件扩展名为 *.sh*，VS Code 应该能正确识别它是一个 shell 脚本，并使用正确的语法高亮。
- en: '[Figure 3-7](#fig3-7) shows a VS Code workspace with the *exercises* folder
    added and the empty file *exercise-3-6.sh* created.'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 3-7](#fig3-7) 显示了一个带有 *exercises* 文件夹并已创建空文件 *exercise-3-6.sh* 的 VS Code
    工作区。'
- en: 'The VS Code window is split into two main parts. The Explorer panel on the
    left shows the contents of all of the folders added to your workspace. In this
    case, it shows *exercises* and everything it contains: a *chapter-3* folder and
    the *exercise-3-6.sh* file you just created. The right side of the window is the
    editor, where you’ll enter your shell script.'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: VS Code 窗口分为两个主要部分。左侧的资源管理器面板显示了添加到工作区的所有文件夹的内容。在这种情况下，它显示了 *exercises* 文件夹以及其中包含的所有内容：一个
    *chapter-3* 文件夹和你刚刚创建的 *exercise-3-6.sh* 文件。窗口的右侧是编辑器，你将在这里输入 shell 脚本。
- en: '![The Explorer panel on the left shows the exercises folder, and the editor
    on the right shows the content of exercise-3-6.sh, which is an empty text file.](Images/Figure3-7.png)'
  id: totrans-332
  prefs: []
  type: TYPE_IMG
  zh: '![左侧的资源管理器面板显示了练习文件夹，右侧的编辑器显示了 exercise-3-6.sh 文件的内容，该文件是一个空文本文件。](Images/Figure3-7.png)'
- en: '<samp class="SANS_Futura_Std_Book_Oblique_I_11">Figure 3-7: VS Code with the</samp>
    <samp class="SANS_Futura_Std_Book_11">exercises</samp> <samp class="SANS_Futura_Std_Book_Oblique_I_11">folder
    open in a workspace</samp>'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Book_Oblique_I_11">图 3-7：在工作区中打开带有</samp> <samp
    class="SANS_Futura_Std_Book_11">exercises</samp> <samp class="SANS_Futura_Std_Book_Oblique_I_11">文件夹的
    VS Code</samp>
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Write the Shell Script</samp>
  id: totrans-334
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">编写 Shell 脚本</samp>
- en: 'Enter the following text into *exercise-3-6.sh* in VS Code and save the file:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 在 VS Code 中将以下文本输入到 *exercise-3-6.sh* 中并保存文件：
- en: '[PRE72]'
  id: totrans-336
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: The first line that starts with <samp class="SANS_TheSansMonoCd_W5Regular_11">#!</samp>
    is called the *shebang*, and it tells the shell which *interpreter*—the program
    that opens and runs the script—to use. In this case, the shell will use <samp
    class="SANS_TheSansMonoCd_W5Regular_11">/bin/bash</samp>, meaning you’re writing
    a bash script. In this book, you’ll add that same shebang to the top of all of
    your shell scripts. Even if you’re working from a shell besides bash, this shebang
    tells your computer to run the current script using bash.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 以 <samp class="SANS_TheSansMonoCd_W5Regular_11">#!</samp> 开头的第一行被称为 *shebang*，它告诉
    shell 使用哪个 *解释器*——即打开并运行脚本的程序。在这种情况下，shell 会使用 <samp class="SANS_TheSansMonoCd_W5Regular_11">/bin/bash</samp>，这意味着你正在编写一个
    bash 脚本。在本书中，你会将相同的 shebang 添加到所有 shell 脚本的顶部。即使你使用的是除 bash 之外的其他 shell，这个 shebang
    也会告诉计算机使用 bash 来运行当前脚本。
- en: In shell scripts, lines that start with the hash character (<samp class="SANS_TheSansMonoCd_W5Regular_11">#</samp>)
    are called *comments*, and they don’t affect how the code itself works; if you
    removed the comments from this script, it would run the same way. The first character
    of the shebang is a hash character, which means that it’s technically a comment
    in bash and zsh.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 在 shell 脚本中，以井号字符（<samp class="SANS_TheSansMonoCd_W5Regular_11">#</samp>）开头的行被称为
    *注释*，它们不会影响代码本身的工作；如果你从脚本中删除这些注释，脚本的运行方式不会改变。shebang 的第一个字符是井号字符，这意味着它在 bash 和
    zsh 中技术上是一个注释。
- en: Comments like <samp class="SANS_TheSansMonoCd_W5Regular_11"># Display the current
    user</samp> work as notes to remind you what your code does when you come back
    to a script you wrote months or years earlier. Anyone else who works with your
    code, perhaps trying to fix something or add features, will appreciate your comments
    for the same reason.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 像 <samp class="SANS_TheSansMonoCd_W5Regular_11"># Display the current user</samp>
    这样的注释可以作为备注，提醒你在几个月或几年后回到你写的脚本时，代码是做什么的。其他与代码一起工作的人，可能是尝试修复问题或添加功能的人，也会因为同样的原因而感激你的注释。
- en: The <samp class="SANS_TheSansMonoCd_W5Regular_11">echo</samp> command displays
    text to the terminal. The <samp class="SANS_TheSansMonoCd_W5Regular_11">whoami</samp>
    command displays the name of the user running the script. The <samp class="SANS_TheSansMonoCd_W5Regular_11">pwd</samp>
    command displays the current working directory.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: <samp class="SANS_TheSansMonoCd_W5Regular_11">echo</samp> 命令将文本显示到终端。<samp class="SANS_TheSansMonoCd_W5Regular_11">whoami</samp>
    命令显示正在运行脚本的用户的名称。<samp class="SANS_TheSansMonoCd_W5Regular_11">pwd</samp> 命令显示当前工作目录。
- en: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">Run the Shell Script</samp>
  id: totrans-341
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_Condensed_Oblique_BI_11">运行 Shell 脚本</samp>
- en: 'Before you can run a script, you need to make it *executable* by giving it
    permission to run as a program. The <samp class="SANS_TheSansMonoCd_W5Regular_11">chmod</samp>
    command lets you change permissions on files with the following syntax:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 在你运行脚本之前，你需要通过赋予它作为程序运行的权限来使其 *可执行*。<samp class="SANS_TheSansMonoCd_W5Regular_11">chmod</samp>
    命令允许你通过以下语法更改文件的权限：
- en: '[PRE73]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'To mark a file as executable, use <samp class="SANS_TheSansMonoCd_W5Regular_11">+x</samp>
    as the <samp class="SANS_TheSansMonoCd_W5Regular_Italic_I_11">permissions</samp>
    argument. Run the following command in your terminal (from within your *exercises*
    folder):'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 要将文件标记为可执行，使用 <samp class="SANS_TheSansMonoCd_W5Regular_11">+x</samp> 作为 <samp
    class="SANS_TheSansMonoCd_W5Regular_Italic_I_11">权限</samp> 参数。在终端中运行以下命令（从你的*exercises*文件夹中）：
- en: '[PRE74]'
  id: totrans-345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'You can now run the script by entering either its absolute path or its relative
    path:'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以通过输入脚本的绝对路径或相对路径来运行它：
- en: '[PRE75]'
  id: totrans-347
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: Starting your command with <samp class="SANS_TheSansMonoCd_W5Regular_11">./</samp>
    tells your shell that you’re entering the relative path to a script.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 以 <samp class="SANS_TheSansMonoCd_W5Regular_11">./</samp> 开头的命令告诉你的 shell 你正在输入一个脚本的相对路径。
- en: 'Here’s the output I get when I run this script on my Mac:'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我在 Mac 上运行此脚本时得到的输出：
- en: '[PRE76]'
  id: totrans-350
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: The current user is *micah* and the current working directory is */Volumes/datasets/exercises*.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 当前用户是*micah*，当前工作目录是*/Volumes/datasets/exercises*。
- en: 'This script shows you different output depending on your working directory.
    To demonstrate the differences, here’s what happens when I switch to my home folder
    and then run it again:'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本根据你的工作目录显示不同的输出。为了展示差异，以下是我切换到主文件夹并再次运行时的情况：
- en: '[PRE77]'
  id: totrans-353
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: This time, the current working directory in the output has changed to */Users/micah*.
    Try switching to your own home folder with <samp class="SANS_TheSansMonoCd_W7Bold_B_11">cd
    ~</samp> and running the script again.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 这次，输出中的当前工作目录已更改为*/Users/micah*。尝试使用 <samp class="SANS_TheSansMonoCd_W7Bold_B_11">cd
    ~</samp> 切换到你自己的主文件夹并再次运行脚本。
- en: 'The script also shows different output depending on which user is running it.
    So far I’ve been running it as *micah*, but here’s what the output looks like
    when I run it as root:'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 该脚本还根据运行它的用户显示不同的输出。到目前为止，我一直以*micah*身份运行它，但如果以 root 用户身份运行，输出会是这样的：
- en: '[PRE78]'
  id: totrans-356
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: This time, the output lists the current user as <samp class="SANS_TheSansMonoCd_W5Regular_11">root</samp>.
    Try running the script as root on your own computer.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 这次，输出列出了当前用户为 <samp class="SANS_TheSansMonoCd_W5Regular_11">root</samp>。尝试以
    root 用户身份在你自己的计算机上运行该脚本。
- en: You’ll write many more scripts throughout this book. I’ve included a copy of
    the code for every exercise in this book’s online resources. In Exercise 3-7,
    you’ll download a copy of all of this code.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，你将编写更多的脚本。我已将每个练习的代码复制到本书的在线资源中。在练习 3-7 中，你将下载所有这些代码的副本。
- en: '<samp class="SANS_Futura_Std_Heavy_B_21">Exercise 3-7: Clone the Book’s GitHub
    Repository</samp>'
  id: totrans-359
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Heavy_B_21">练习 3-7：克隆书籍的 GitHub 仓库</samp>
- en: Programmers store source code in *git repositories* (or *git repos* for short),
    which are composed of a collection of files (usually source code) and the history
    of how they have changed over time. By storing your scripts this way, you can
    host them on GitHub, a popular website for hosting git repos. Git repos help you
    share your code with others, and they make it easier for multiple people to write
    code for the same project. When you *clone* a git repo, you download a copy of
    it to your computer.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 程序员将源代码存储在*git 仓库*（或简称*git 仓库*）中，仓库由一组文件（通常是源代码）以及这些文件随时间变化的历史记录组成。通过这种方式存储脚本，你可以将它们托管在
    GitHub 上，这是一个流行的 git 仓库托管网站。Git 仓库帮助你与他人共享代码，并使多人共同编写同一项目的代码变得更加容易。当你*克隆*一个 git
    仓库时，你会将它的副本下载到你的计算机上。
- en: This book comes with a git repo at [*https://<wbr>github<wbr>.com<wbr>/micahflee<wbr>/hacks<wbr>-leaks<wbr>-and<wbr>-revelations*](https://github.com/micahflee/hacks-leaks-and-revelations)
    containing the code for every exercise and case study in this book, along with
    additional instructions and source code related to the book’s appendixes. In this
    exercise, you’ll clone this repo and store the copy locally on your computer.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 本书附带一个 Git 仓库，地址为 [*https://<wbr>github<wbr>.com<wbr>/micahflee<wbr>/hacks<wbr>-leaks<wbr>-and<wbr>-revelations*](https://github.com/micahflee/hacks-leaks-and-revelations)，其中包含本书所有练习和案例研究的代码，以及与本书附录相关的其他说明和源代码。在本练习中，你将克隆该仓库并将其副本保存在本地计算机上。
- en: 'First, check whether the <samp class="SANS_TheSansMonoCd_W5Regular_11">git</samp>
    program is installed on your machine:'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，检查你的计算机上是否安装了 <samp class="SANS_TheSansMonoCd_W5Regular_11">git</samp> 程序：
- en: '[PRE79]'
  id: totrans-363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: 'If git is installed, you’ll see its path in the output, like */usr/bin/git*.
    If it’s not installed, this command won’t display anything in the terminal. In
    that case, install git by entering the appropriate command for your operating
    system: <samp class="SANS_TheSansMonoCd_W7Bold_B_11">brew install git</samp> for
    macOS users, or <samp class="SANS_TheSansMonoCd_W7Bold_B_11">sudo apt install
    git</samp> for Linux and WSL users.'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 如果已安装 git，你会在输出中看到其路径，例如 */usr/bin/git*。如果没有安装，它将不会在终端中显示任何内容。在这种情况下，通过输入适用于你操作系统的命令来安装
    git：macOS 用户使用 <samp class="SANS_TheSansMonoCd_W7Bold_B_11">brew install git</samp>，Linux
    和 WSL 用户使用 <samp class="SANS_TheSansMonoCd_W7Bold_B_11">sudo apt install git</samp>。
- en: 'Next, in your terminal, change to your USB disk folder. On my macOS computer,
    I do this with the following command:'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在终端中切换到你的 USB 磁盘文件夹。在我的 macOS 电脑上，我使用以下命令来完成：
- en: '[PRE80]'
  id: totrans-366
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: If necessary, replace the path in my command with the appropriate path to your
    *datasets* USB disk for your operating system.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要，请将我的命令中的路径替换为适合你操作系统的 *datasets* USB 磁盘路径。
- en: 'Once you’re in the *datasets* disk, run this command to clone the repo:'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦进入 *datasets* 磁盘，运行此命令来克隆仓库：
- en: '[PRE81]'
  id: totrans-369
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: This should create a new folder called *hacks-leaks-and-revelations* containing
    all of the code from the book’s repo.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该会创建一个名为 *hacks-leaks-and-revelations* 的新文件夹，其中包含本书仓库中的所有代码。
- en: Finally, add the book’s git repo folder to your VS Code workspace. In VS Code,
    click **File**▸**Add Folder to Workspace**, then browse for the *hacks-leaks-and-revelations*
    folder on your USB disk. This will add the book’s code to your VS Code workspace
    so you can easily browse through all of the files.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，将本书的 git 仓库文件夹添加到你的 VS Code 工作区。在 VS Code 中，点击 **文件**▸**添加文件夹到工作区**，然后浏览到你的
    USB 磁盘上的 *hacks-leaks-and-revelations* 文件夹。这将把本书的代码添加到你的 VS Code 工作区，方便你浏览所有文件。
- en: You now have access to solutions for all future exercises! In the following
    chapters, I’ll walk you through the process of writing your own scripts from scratch,
    but you can also run the complete scripts taken from the git repo or copy and
    paste their code into your own code.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以访问所有未来练习的解决方案！在接下来的章节中，我将带你从零开始编写自己的脚本，但你也可以运行从 git 仓库获取的完整脚本，或者将它们的代码复制粘贴到自己的代码中。
- en: <samp class="SANS_Futura_Std_Bold_B_11">Summary</samp>
  id: totrans-373
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: <samp class="SANS_Futura_Std_Bold_B_11">总结</samp>
- en: In this chapter, you’ve learned the basics of command line theory, including
    how to use the shell in a terminal, run various shell commands, and navigate the
    shell using features like tab completion. You installed software directly in the
    terminal using a package manager, and you wrote your first simple shell script.
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你已经学习了命令行理论的基础，包括如何在终端中使用 shell，运行各种 shell 命令，以及使用如 Tab 完成功能导航 shell。你通过包管理器直接在终端中安装了软件，并编写了你的第一个简单
    shell 脚本。
- en: In the next chapters, you’ll put these techniques into practice to explore hundreds
    of gigabytes of data, make datasets searchable, convert email from a proprietary
    format to an open format, and write Python code. You’ll start in the following
    chapter by taking a deeper dive into the BlueLeaks dataset.
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，你将实际应用这些技巧来探索数百GB的数据，制作可搜索的数据集，将电子邮件从专有格式转换为开放格式，并编写 Python 代码。你将在下一章开始深入探讨
    BlueLeaks 数据集。
