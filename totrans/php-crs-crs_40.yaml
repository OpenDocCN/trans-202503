- en: <hgroup>
  prefs: []
  type: TYPE_NORMAL
- en: C REPLIT CONFIGURATION
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: </hgroup>
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/opener.jpg)'
  prefs: []
  type: TYPE_IMG
- en: If you’ve chosen to use the Replit online coding environment to follow along
    with this book, you’ll be able to get started right away using Replit’s default
    PHP settings. As you move through the book, however, you may need to make some
    changes to make Replit work with more sophisticated tools like the Composer dependency
    manager and a database management system. This appendix discusses how to reconfigure
    your Replit projects. The settings we’ll discuss apply to both PHP CLI and PHP
    Web Server projects.
  prefs: []
  type: TYPE_NORMAL
- en: '## Changing the PHP Version'
  prefs: []
  type: TYPE_NORMAL
- en: A new Replit project may not be running the latest version of PHP by default.
    To find out, enter php -v into the Replit command line shell. You should see the
    PHP version number printed in response. If this isn’t the latest version of PHP,
    you may be able to change the version by editing one of the project’s hidden configuration
    files. First, show the hidden files by clicking the three vertical dots widget
    in the left-hand Files column and choosing **Show Hidden Files** (see [Figure
    C-1](#figC-1)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/figureC-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure C-1: Showing hidden files for the current Replit project'
  prefs: []
  type: TYPE_NORMAL
- en: 'You should now see a new section in the Files column labeled Config Files and
    containing two files: *.replit* and *replit.nix*. Select the *replit.nix* file,
    and you should see its contents in the middle editor column. The contents should
    look something like [Listing C-1](#lisC-1).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Listing C-1: The replit.nix configuration file'
  prefs: []
  type: TYPE_NORMAL
- en: To change the PHP version, add two digits to the end of pkgs.php representing
    the major and minor version numbers you want (for example, pkgs.php82 to use PHP
    version 8.2.*x*). Then, if you enter php -v at the command line again after a
    short time, you should see the new version number listed.
  prefs: []
  type: TYPE_NORMAL
- en: This may take some trial and error, as Replit may not be able to work with the
    absolute latest version of PHP. For example, it can’t run PHP 8.3 at the time
    of this writing, though in the future you should be able to use pkgs.php83 to
    run PHP 8.3.*x*, then pkgs.php84 for version 8.4.*x*, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: NOTE
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*Rather than guessing how long it will take to rebuild the environment after
    changing a configuration setting, you can close the current shell tab and then
    open a new one. You won’t be shown a command line prompt in the new tab until
    the new environment has been fully loaded.*'
  prefs: []
  type: TYPE_NORMAL
- en: Adding the Composer Tool
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Chapter 20](chapter20.xhtml) introduces the Composer command line tool for
    dependency management. This tool isn’t available by default in Replit PHP projects,
    but you can easily add it by editing the *replit.nix* configuration file. Make
    the changes shown in [Listing C-2](#lisC-2), replacing the x after the 8 with
    the appropriate PHP minor version number, such as 2 for PHP version 8.2.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Listing C-2: Adding Composer to the replit.nix configuration file'
  prefs: []
  type: TYPE_NORMAL
- en: After the Replit environment updates, enter composer at the command line. If
    everything is working, you should see a list of all the commands available with
    the Composer tool.
  prefs: []
  type: TYPE_NORMAL
- en: Using the SQLite Database System
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Part VI](part6.xhtml) introduced database programming with the MySQL and SQLite
    database systems. If you’re following along with Replit, the most straightforward
    option is to use SQLite, which as of this writing is available by default for
    all Replit PHP projects. You can verify this by executing the phpinfo() function
    and checking the PDO and pdo_sqlite entries, as in [Figure C-2](#figC-2).'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/figureC-2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure C-2: Confirming PDO SQLite features by printing phpinfo()'
  prefs: []
  type: TYPE_NORMAL
- en: In the event the default installation of SQLite is removed in the future, you
    can add it to a Replit project by editing the *replit.nix* configuration file
    to include the two extra lines shown in [Listing C-3](#lisC-3). This is how my
    typical PHP Web Server project *replit.nix* file looked before SQLite was added
    as a default.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Listing C-3: Enabling SQLite in the replit.nix file'
  prefs: []
  type: TYPE_NORMAL
- en: These extra lines add the PDO extension and SQLite to the project. Once again,
    replace the x with the latest minor version number of PHP available.
  prefs: []
  type: TYPE_NORMAL
- en: Serving Pages from the public Directory
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'When you click the Run button in a PHP Web Server project, Replit defaults
    to serving all files and folders for the project. As discussed in [Chapter 10](chapter10.xhtml),
    however, it’s best for security reasons to create a *public* folder for the project
    and serve only the contents of this folder. While you can always serve from *public*
    by entering php -S localhost:8000 -t public in the shell, you may find it more
    convenient to change the behavior of the Run button instead. For that, open the
    hidden *.replit* configuration file and change the first line as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: If your *index.php* script is located in a *public* folder and you don’t make
    this change, clicking the Run button will trigger a 404 Not Found error, since
    Replit will be looking for the *index.php* script in the root directory of the
    project.
  prefs: []
  type: TYPE_NORMAL
