- en: <hgroup>
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <hgroup>
- en: C REPLIT CONFIGURATION
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: C REPLIT 配置
- en: </hgroup>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: </hgroup>
- en: '![](../images/opener.jpg)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/opener.jpg)'
- en: If you’ve chosen to use the Replit online coding environment to follow along
    with this book, you’ll be able to get started right away using Replit’s default
    PHP settings. As you move through the book, however, you may need to make some
    changes to make Replit work with more sophisticated tools like the Composer dependency
    manager and a database management system. This appendix discusses how to reconfigure
    your Replit projects. The settings we’ll discuss apply to both PHP CLI and PHP
    Web Server projects.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你选择使用 Replit 在线编码环境来跟随本书学习，你可以直接使用 Replit 默认的 PHP 设置开始。然而，在你逐步阅读本书的过程中，你可能需要做一些更改，以便让
    Replit 支持更复杂的工具，比如 Composer 依赖管理器和数据库管理系统。本附录讨论了如何重新配置你的 Replit 项目。我们将讨论的设置适用于
    PHP CLI 和 PHP Web Server 项目。
- en: '## Changing the PHP Version'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '## 更改 PHP 版本'
- en: A new Replit project may not be running the latest version of PHP by default.
    To find out, enter php -v into the Replit command line shell. You should see the
    PHP version number printed in response. If this isn’t the latest version of PHP,
    you may be able to change the version by editing one of the project’s hidden configuration
    files. First, show the hidden files by clicking the three vertical dots widget
    in the left-hand Files column and choosing **Show Hidden Files** (see [Figure
    C-1](#figC-1)).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 一个新的 Replit 项目可能默认不会运行最新版本的 PHP。要确认这一点，可以在 Replit 命令行 shell 中输入 php -v。你应该会看到
    PHP 版本号的响应。如果这不是最新版本的 PHP，你可以通过编辑项目的隐藏配置文件来更改版本。首先，通过点击左侧文件栏中的三个垂直点小部件并选择 **显示隐藏文件**
    来显示隐藏文件（参见 [图 C-1](#figC-1)）。
- en: '![](../images/figureC-1.jpg)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/figureC-1.jpg)'
- en: 'Figure C-1: Showing hidden files for the current Replit project'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图 C-1：显示当前 Replit 项目的隐藏文件
- en: 'You should now see a new section in the Files column labeled Config Files and
    containing two files: *.replit* and *replit.nix*. Select the *replit.nix* file,
    and you should see its contents in the middle editor column. The contents should
    look something like [Listing C-1](#lisC-1).'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你应该会在文件栏中看到一个新的名为“配置文件”的部分，其中包含两个文件：*.replit* 和 *replit.nix*。选择 *replit.nix*
    文件后，你应该会看到其中的内容显示在中间的编辑器栏中。内容应该类似于 [列表 C-1](#lisC-1)。
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Listing C-1: The replit.nix configuration file'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 C-1：replit.nix 配置文件
- en: To change the PHP version, add two digits to the end of pkgs.php representing
    the major and minor version numbers you want (for example, pkgs.php82 to use PHP
    version 8.2.*x*). Then, if you enter php -v at the command line again after a
    short time, you should see the new version number listed.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改 PHP 版本，请在 pkgs.php 后添加两个数字，表示你想要的主版本号和次版本号（例如，使用 pkgs.php82 来使用 PHP 版本 8.2.*x*）。然后，如果你稍等片刻后再次在命令行中输入
    php -v，你应该会看到列出的新版本号。
- en: This may take some trial and error, as Replit may not be able to work with the
    absolute latest version of PHP. For example, it can’t run PHP 8.3 at the time
    of this writing, though in the future you should be able to use pkgs.php83 to
    run PHP 8.3.*x*, then pkgs.php84 for version 8.4.*x*, and so on.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能需要一些反复尝试，因为 Replit 可能无法使用最新版本的 PHP。例如，在写作时，它无法运行 PHP 8.3，尽管在未来，你应该能够使用 pkgs.php83
    来运行 PHP 8.3.*x*，然后使用 pkgs.php84 来运行 PHP 8.4.*x*，依此类推。
- en: NOTE
  id: totrans-14
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意
- en: '*Rather than guessing how long it will take to rebuild the environment after
    changing a configuration setting, you can close the current shell tab and then
    open a new one. You won’t be shown a command line prompt in the new tab until
    the new environment has been fully loaded.*'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '*与其猜测更改配置设置后重建环境需要多长时间，不如关闭当前的 shell 标签页，然后打开一个新的标签页。在新的标签页中，你将不会看到命令行提示符，直到新环境完全加载完成。*'
- en: Adding the Composer Tool
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加 Composer 工具
- en: '[Chapter 20](chapter20.xhtml) introduces the Composer command line tool for
    dependency management. This tool isn’t available by default in Replit PHP projects,
    but you can easily add it by editing the *replit.nix* configuration file. Make
    the changes shown in [Listing C-2](#lisC-2), replacing the x after the 8 with
    the appropriate PHP minor version number, such as 2 for PHP version 8.2.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[第 20 章](chapter20.xhtml)介绍了 Composer 命令行工具，用于依赖管理。这个工具在 Replit PHP 项目中默认不可用，但你可以通过编辑
    *replit.nix* 配置文件轻松添加它。按照 [列表 C-2](#lisC-2) 中所示的更改进行操作，将 8 后面的 x 替换为适当的 PHP 次版本号，例如
    PHP 版本 8.2 对应的 2。'
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Listing C-2: Adding Composer to the replit.nix configuration file'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 C-2：将 Composer 添加到 replit.nix 配置文件
- en: After the Replit environment updates, enter composer at the command line. If
    everything is working, you should see a list of all the commands available with
    the Composer tool.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: Using the SQLite Database System
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Part VI](part6.xhtml) introduced database programming with the MySQL and SQLite
    database systems. If you’re following along with Replit, the most straightforward
    option is to use SQLite, which as of this writing is available by default for
    all Replit PHP projects. You can verify this by executing the phpinfo() function
    and checking the PDO and pdo_sqlite entries, as in [Figure C-2](#figC-2).'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: '![](../images/figureC-2.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
- en: 'Figure C-2: Confirming PDO SQLite features by printing phpinfo()'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: In the event the default installation of SQLite is removed in the future, you
    can add it to a Replit project by editing the *replit.nix* configuration file
    to include the two extra lines shown in [Listing C-3](#lisC-3). This is how my
    typical PHP Web Server project *replit.nix* file looked before SQLite was added
    as a default.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Listing C-3: Enabling SQLite in the replit.nix file'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: These extra lines add the PDO extension and SQLite to the project. Once again,
    replace the x with the latest minor version number of PHP available.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: Serving Pages from the public Directory
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'When you click the Run button in a PHP Web Server project, Replit defaults
    to serving all files and folders for the project. As discussed in [Chapter 10](chapter10.xhtml),
    however, it’s best for security reasons to create a *public* folder for the project
    and serve only the contents of this folder. While you can always serve from *public*
    by entering php -S localhost:8000 -t public in the shell, you may find it more
    convenient to change the behavior of the Run button instead. For that, open the
    hidden *.replit* configuration file and change the first line as follows:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: If your *index.php* script is located in a *public* folder and you don’t make
    this change, clicking the Run button will trigger a 404 Not Found error, since
    Replit will be looking for the *index.php* script in the root directory of the
    project.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
