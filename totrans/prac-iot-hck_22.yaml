- en: Index
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please note that index links to approximate location of each term.
  prefs: []
  type: TYPE_NORMAL
- en: '**Italicized page numbers indicate definitions of terms.**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Symbols & Numbers**'
  prefs: []
  type: TYPE_NORMAL
- en: '* character, [255](c10.xhtml#Page_255), [263](c10.xhtml#Page_263)'
  prefs: []
  type: TYPE_NORMAL
- en: 8N1 UART configuration, *[158](c07.xhtml#Page_158)*
  prefs: []
  type: TYPE_NORMAL
- en: '[80](c04.xhtml#Page_80)2.11 protocols, *[288](c12.xhtml#Page_288)*'
  prefs: []
  type: TYPE_NORMAL
- en: '[80](c04.xhtml#Page_80)2.11w, [289](c12.xhtml#Page_289)'
  prefs: []
  type: TYPE_NORMAL
- en: '**A**'
  prefs: []
  type: TYPE_NORMAL
- en: AAAA records, [138](c06.xhtml#Page_138)–[139](c06.xhtml#Page_139)
  prefs: []
  type: TYPE_NORMAL
- en: A-ASSOCIATE abort message, [96](c05.xhtml#Page_96)
  prefs: []
  type: TYPE_NORMAL
- en: A-ASSOCIATE accept message, [96](c05.xhtml#Page_96)
  prefs: []
  type: TYPE_NORMAL
- en: A-ASSOCIATE reject message, [96](c05.xhtml#Page_96)
  prefs: []
  type: TYPE_NORMAL
- en: A-ASSOCIATE request message, *[96](c05.xhtml#Page_96)*
  prefs: []
  type: TYPE_NORMAL
- en: C-ECHO requests dissector, building, [101](c05.xhtml#Page_101)–[105](c05.xhtml#Page_105)
  prefs: []
  type: TYPE_NORMAL
- en: defining structure, [112](c05.xhtml#Page_112)–[113](c05.xhtml#Page_113)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [96](c05.xhtml#Page_96)
  prefs: []
  type: TYPE_NORMAL
- en: parsing responses, [113](c05.xhtml#Page_113)–[114](c05.xhtml#Page_114)
  prefs: []
  type: TYPE_NORMAL
- en: structure of, [101](c05.xhtml#Page_101)–[102](c05.xhtml#Page_102)
  prefs: []
  type: TYPE_NORMAL
- en: writing contexts, [110](c05.xhtml#Page_110)–[111](c05.xhtml#Page_111)
  prefs: []
  type: TYPE_NORMAL
- en: ABP (Activation by Personalization), *[324](c13.xhtml#Page_324)*, [326](c13.xhtml#Page_326)–[327](c13.xhtml#Page_327),
    [330](c13.xhtml#Page_330)–[331](c13.xhtml#Page_331)
  prefs: []
  type: TYPE_NORMAL
- en: Abstract Syntax, *[111](c05.xhtml#Page_111)*
  prefs: []
  type: TYPE_NORMAL
- en: access bits, [251](c10.xhtml#Page_251)–*[252](c10.xhtml#Page_252)*
  prefs: []
  type: TYPE_NORMAL
- en: access controls, testing, [49](c03.xhtml#Page_49)–[50](c03.xhtml#Page_50)
  prefs: []
  type: TYPE_NORMAL
- en: access points (APs), *[287](c12.xhtml#Page_287)*
  prefs: []
  type: TYPE_NORMAL
- en: cracking WPA Enterprise, [304](c12.xhtml#Page_304)–[305](c12.xhtml#Page_305)
  prefs: []
  type: TYPE_NORMAL
- en: cracking WPA/WPA2, [299](c12.xhtml#Page_299)–[300](c12.xhtml#Page_300)
  prefs: []
  type: TYPE_NORMAL
- en: general discussion, [287](c12.xhtml#Page_287)–[288](c12.xhtml#Page_288)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [299](c12.xhtml#Page_299)
  prefs: []
  type: TYPE_NORMAL
- en: access port, *[60](c04.xhtml#Page_60)*
  prefs: []
  type: TYPE_NORMAL
- en: account privileges, testing, [51](c03.xhtml#Page_51)
  prefs: []
  type: TYPE_NORMAL
- en: ACK spoofing, [331](c13.xhtml#Page_331)
  prefs: []
  type: TYPE_NORMAL
- en: Activation by Personalization (ABP), *[324](c13.xhtml#Page_324)*, [326](c13.xhtml#Page_326)–[327](c13.xhtml#Page_327),
    [330](c13.xhtml#Page_330)–[331](c13.xhtml#Page_331)
  prefs: []
  type: TYPE_NORMAL
- en: active reconnaissance, *[43](c03.xhtml#Page_43)*, [43](c03.xhtml#Page_43)–[45](c03.xhtml#Page_45)
  prefs: []
  type: TYPE_NORMAL
- en: active RFID technologies, *[241](c10.xhtml#Page_241)*–[242](c10.xhtml#Page_242)
  prefs: []
  type: TYPE_NORMAL
- en: active spidering, *[48](c03.xhtml#Page_48)*
  prefs: []
  type: TYPE_NORMAL
- en: Activities, in Android apps, *[361](c14.xhtml#Page_361)*
  prefs: []
  type: TYPE_NORMAL
- en: activity tracking systems, *[385](c15.xhtml#Page_385)*
  prefs: []
  type: TYPE_NORMAL
- en: Adafruit CircuitPython
  prefs: []
  type: TYPE_NORMAL
- en: setting up, [318](c13.xhtml#Page_318)–[319](c13.xhtml#Page_319)
  prefs: []
  type: TYPE_NORMAL
- en: writing LoRa sniffer, [320](c13.xhtml#Page_320)–[322](c13.xhtml#Page_322)
  prefs: []
  type: TYPE_NORMAL
- en: Adafruit FT[232](c09.xhtml#Page_232)H Breakout, [401](b01.xhtml#Page_401)–[402](b01.xhtml#Page_402)
  prefs: []
  type: TYPE_NORMAL
- en: adb (Android Debug Bridge), [360](c14.xhtml#Page_360), [402](b01.xhtml#Page_402)
  prefs: []
  type: TYPE_NORMAL
- en: '`adb logcat`, [367](c14.xhtml#Page_367)–[368](c14.xhtml#Page_368)'
  prefs: []
  type: TYPE_NORMAL
- en: '`adb pull` command, [361](c14.xhtml#Page_361)'
  prefs: []
  type: TYPE_NORMAL
- en: '`AddPortMapping` command, [125](c06.xhtml#Page_125)–[126](c06.xhtml#Page_126),
    [13](c01.xhtml#Page_13)0'
  prefs: []
  type: TYPE_NORMAL
- en: addressing layer, UPnP, *[119](c06.xhtml#Page_119)*
  prefs: []
  type: TYPE_NORMAL
- en: address search macro, *[204](c08.xhtml#Page_204)*
  prefs: []
  type: TYPE_NORMAL
- en: address space layout randomization, *[345](c14.xhtml#Page_345)*
  prefs: []
  type: TYPE_NORMAL
- en: admin credentials, Netgear D6000, [213](c09.xhtml#Page_213)–[214](c09.xhtml#Page_214)
  prefs: []
  type: TYPE_NORMAL
- en: ADV_IND PDU type, [271](c11.xhtml#Page_271)
  prefs: []
  type: TYPE_NORMAL
- en: ADV_NONCONN_IND PDU type, [271](c11.xhtml#Page_271)
  prefs: []
  type: TYPE_NORMAL
- en: advanced persistent threat (APT) attacks, *[26](c02.xhtml#Page_26)*
  prefs: []
  type: TYPE_NORMAL
- en: adversaries, [6](c01.xhtml#Page_6)
  prefs: []
  type: TYPE_NORMAL
- en: '`aes[128](c06.xhtml#Page_128)_cmac` function, [325](c13.xhtml#Page_325)'
  prefs: []
  type: TYPE_NORMAL
- en: AES [128](c06.xhtml#Page_128)-bit keys, [323](c13.xhtml#Page_323), [325](c13.xhtml#Page_325),
    [326](c13.xhtml#Page_326)
  prefs: []
  type: TYPE_NORMAL
- en: AFI (Application Family Identifier), *[244](c10.xhtml#Page_244)*
  prefs: []
  type: TYPE_NORMAL
- en: '`-afre` argument, [135](c06.xhtml#Page_135)–[136](c06.xhtml#Page_136)'
  prefs: []
  type: TYPE_NORMAL
- en: aftermarket security, [5](c01.xhtml#Page_5)
  prefs: []
  type: TYPE_NORMAL
- en: Aircrack-ng, [289](c12.xhtml#Page_289), [300](c12.xhtml#Page_300)–[301](c12.xhtml#Page_301),
    [402](b01.xhtml#Page_402)
  prefs: []
  type: TYPE_NORMAL
- en: Aireplay-ng, [290](c12.xhtml#Page_290)
  prefs: []
  type: TYPE_NORMAL
- en: Airmon-ng, [289](c12.xhtml#Page_289)–[290](c12.xhtml#Page_290), [297](c12.xhtml#Page_297)–[298](c12.xhtml#Page_298)
  prefs: []
  type: TYPE_NORMAL
- en: Airodump-ng, [290](c12.xhtml#Page_290), [301](c12.xhtml#Page_301)
  prefs: []
  type: TYPE_NORMAL
- en: Akamai, [118](c06.xhtml#Page_118)
  prefs: []
  type: TYPE_NORMAL
- en: Akerun Smart Lock Robot app for iOS, [357](c14.xhtml#Page_357)
  prefs: []
  type: TYPE_NORMAL
- en: alarms, jamming wireless, [375](c15.xhtml#Page_375)–[379](c15.xhtml#Page_379)
  prefs: []
  type: TYPE_NORMAL
- en: Alfa Atheros AWUS036NHA, [402](b01.xhtml#Page_402)
  prefs: []
  type: TYPE_NORMAL
- en: altering RFID tags, [255](c10.xhtml#Page_255)–[256](c10.xhtml#Page_256)
  prefs: []
  type: TYPE_NORMAL
- en: Amazon S3 buckets, [209](c09.xhtml#Page_209)–[210](c09.xhtml#Page_210)
  prefs: []
  type: TYPE_NORMAL
- en: Amcrest IP camera, [147](c06.xhtml#Page_147)–[152](c06.xhtml#Page_152)
  prefs: []
  type: TYPE_NORMAL
- en: amplification attacks, [94](c05.xhtml#Page_94)
  prefs: []
  type: TYPE_NORMAL
- en: analysis phase, network protocol inspections, [92](c05.xhtml#Page_92)–[93](c05.xhtml#Page_93)
  prefs: []
  type: TYPE_NORMAL
- en: Andriesse, Dennis, [218](c09.xhtml#Page_218)
  prefs: []
  type: TYPE_NORMAL
- en: Android apps. *See also* smart treadmills, attacking
  prefs: []
  type: TYPE_NORMAL
- en: binary reversing, [362](c14.xhtml#Page_362)–[363](c14.xhtml#Page_363)
  prefs: []
  type: TYPE_NORMAL
- en: dynamic analysis, [363](c14.xhtml#Page_363)–[367](c14.xhtml#Page_367)
  prefs: []
  type: TYPE_NORMAL
- en: extracting APK, [361](c14.xhtml#Page_361)
  prefs: []
  type: TYPE_NORMAL
- en: MIFARE, attacking with, [256](c10.xhtml#Page_256)–[257](c10.xhtml#Page_257)
  prefs: []
  type: TYPE_NORMAL
- en: network traffic, intercepting and examining, [367](c14.xhtml#Page_367)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [360](c14.xhtml#Page_360)
  prefs: []
  type: TYPE_NORMAL
- en: preparing test environment, [360](c14.xhtml#Page_360)–[361](c14.xhtml#Page_361)
  prefs: []
  type: TYPE_NORMAL
- en: security controls, [339](c14.xhtml#Page_339)–[341](c14.xhtml#Page_341)
  prefs: []
  type: TYPE_NORMAL
- en: side-channel leaks, [367](c14.xhtml#Page_367)–[368](c14.xhtml#Page_368)
  prefs: []
  type: TYPE_NORMAL
- en: static analysis, [361](c14.xhtml#Page_361)–[362](c14.xhtml#Page_362)
  prefs: []
  type: TYPE_NORMAL
- en: threats to, [337](c14.xhtml#Page_337)–[338](c14.xhtml#Page_338)
  prefs: []
  type: TYPE_NORMAL
- en: Android Debug Bridge (adb), [360](c14.xhtml#Page_360), [402](b01.xhtml#Page_402)
  prefs: []
  type: TYPE_NORMAL
- en: '*AndroidManifest.xml* file, [361](c14.xhtml#Page_361), [365](c14.xhtml#Page_365)–[366](c14.xhtml#Page_366)'
  prefs: []
  type: TYPE_NORMAL
- en: Android Open Source Project (AOSP), *[386](c15.xhtml#Page_386)–[387](c15.xhtml#Page_387)*
  prefs: []
  type: TYPE_NORMAL
- en: Android Package (APK) files, [360](c14.xhtml#Page_360)
  prefs: []
  type: TYPE_NORMAL
- en: abusing local file managers to install, [391](c15.xhtml#Page_391)–[393](c15.xhtml#Page_393)
  prefs: []
  type: TYPE_NORMAL
- en: binary reversing, [362](c14.xhtml#Page_362)–[363](c14.xhtml#Page_363)
  prefs: []
  type: TYPE_NORMAL
- en: extracting, [361](c14.xhtml#Page_361)
  prefs: []
  type: TYPE_NORMAL
- en: static analysis, [361](c14.xhtml#Page_361)–[362](c14.xhtml#Page_362)
  prefs: []
  type: TYPE_NORMAL
- en: Android Studio IDE, [360](c14.xhtml#Page_360)
  prefs: []
  type: TYPE_NORMAL
- en: Android Verified Boot, *[341](c14.xhtml#Page_341)*
  prefs: []
  type: TYPE_NORMAL
- en: Android Virtual Device (AVD) Manager, [360](c14.xhtml#Page_360)
  prefs: []
  type: TYPE_NORMAL
- en: Animas OneTouch Ping insulin pump security issue, [11](c01.xhtml#Page_11)–[12](c01.xhtml#Page_12)
  prefs: []
  type: TYPE_NORMAL
- en: Announcing phase
  prefs: []
  type: TYPE_NORMAL
- en: ippserver, [137](c06.xhtml#Page_137)–[138](c06.xhtml#Page_138)
  prefs: []
  type: TYPE_NORMAL
- en: mDNS, [132](c06.xhtml#Page_132)
  prefs: []
  type: TYPE_NORMAL
- en: antennas, RFID, [242](c10.xhtml#Page_242)–[243](c10.xhtml#Page_243)
  prefs: []
  type: TYPE_NORMAL
- en: Anti-collision loop command, [258](c10.xhtml#Page_258)–[259](c10.xhtml#Page_259)
  prefs: []
  type: TYPE_NORMAL
- en: anti-hacking laws, [12](c01.xhtml#Page_12)–[13](c01.xhtml#Page_13)
  prefs: []
  type: TYPE_NORMAL
- en: '`"ANY"` query, [134](c06.xhtml#Page_134)–[135](c06.xhtml#Page_135)'
  prefs: []
  type: TYPE_NORMAL
- en: AOSP (Android Open Source Project), *[386](c15.xhtml#Page_386)–[387](c15.xhtml#Page_387)*
  prefs: []
  type: TYPE_NORMAL
- en: APK files. *See* Android Package (APK) files
  prefs: []
  type: TYPE_NORMAL
- en: Apktool, [361](c14.xhtml#Page_361), [402](b01.xhtml#Page_402)
  prefs: []
  type: TYPE_NORMAL
- en: Apkx, [361](c14.xhtml#Page_361)
  prefs: []
  type: TYPE_NORMAL
- en: app directory, inspecting, [366](c14.xhtml#Page_366)
  prefs: []
  type: TYPE_NORMAL
- en: AppEUI (application identifier), [325](c13.xhtml#Page_325)
  prefs: []
  type: TYPE_NORMAL
- en: AppKey, *[323](c13.xhtml#Page_323)*, [325](c13.xhtml#Page_325)
  prefs: []
  type: TYPE_NORMAL
- en: application analysis approach, [210](c09.xhtml#Page_210)–[211](c09.xhtml#Page_211)
  prefs: []
  type: TYPE_NORMAL
- en: Application Context, A-ASSOCIATE request message, [110](c05.xhtml#Page_110)–[111](c05.xhtml#Page_111)
  prefs: []
  type: TYPE_NORMAL
- en: application entity title, [102](c05.xhtml#Page_102)
  prefs: []
  type: TYPE_NORMAL
- en: Application Family Identifier (AFI), *[244](c10.xhtml#Page_244)*
  prefs: []
  type: TYPE_NORMAL
- en: application identifier (AppEUI), [325](c13.xhtml#Page_325)
  prefs: []
  type: TYPE_NORMAL
- en: application layer, LoRaWAN, [324](c13.xhtml#Page_324)
  prefs: []
  type: TYPE_NORMAL
- en: application logs, inspecting, [351](c14.xhtml#Page_351)–[352](c14.xhtml#Page_352)
  prefs: []
  type: TYPE_NORMAL
- en: application mapping, [48](c03.xhtml#Page_48)
  prefs: []
  type: TYPE_NORMAL
- en: application server, [50](c03.xhtml#Page_50), *[309](c13.xhtml#Page_309)*
  prefs: []
  type: TYPE_NORMAL
- en: application signatures, [340](c14.xhtml#Page_340)
  prefs: []
  type: TYPE_NORMAL
- en: application-specific attacks, LoRaWAN, [331](c13.xhtml#Page_331)
  prefs: []
  type: TYPE_NORMAL
- en: AppNonce, [326](c13.xhtml#Page_326)
  prefs: []
  type: TYPE_NORMAL
- en: AppSKey, *[323](c13.xhtml#Page_323)*, [326](c13.xhtml#Page_326)
  prefs: []
  type: TYPE_NORMAL
- en: APs. *See* access points (APs)
  prefs: []
  type: TYPE_NORMAL
- en: APT (advanced persistent threat) attacks, [26](c02.xhtml#Page_26)
  prefs: []
  type: TYPE_NORMAL
- en: ARC (Automatic Reference Counting), *[346](c14.xhtml#Page_346)*
  prefs: []
  type: TYPE_NORMAL
- en: Arduino, [402](b01.xhtml#Page_402)
  prefs: []
  type: TYPE_NORMAL
- en: coding target program in, [172](c07.xhtml#Page_172)–[174](c07.xhtml#Page_174)
  prefs: []
  type: TYPE_NORMAL
- en: flashing and running program, [174](c07.xhtml#Page_174)–[180](c07.xhtml#Page_180)
  prefs: []
  type: TYPE_NORMAL
- en: Arduino Integrated Development Environment (IDE), *[170](c07.xhtml#Page_170)*,
    [180](c07.xhtml#Page_180)
  prefs: []
  type: TYPE_NORMAL
- en: Heltec LoRa [32](c02.xhtml#Page_32) development board, setting up, [309](c13.xhtml#Page_309)–[314](c13.xhtml#Page_314)
  prefs: []
  type: TYPE_NORMAL
- en: setting up, [170](c07.xhtml#Page_170)–[172](c07.xhtml#Page_172)
  prefs: []
  type: TYPE_NORMAL
- en: setting up controller-peripheral I²C bus architecture, [201](c08.xhtml#Page_201)–[202](c08.xhtml#Page_202)
  prefs: []
  type: TYPE_NORMAL
- en: Arduino SAM boards, [171](c07.xhtml#Page_171)
  prefs: []
  type: TYPE_NORMAL
- en: Arduino Uno microcontroller, [198](c08.xhtml#Page_198)–[202](c08.xhtml#Page_202)
  prefs: []
  type: TYPE_NORMAL
- en: A records, [138](c06.xhtml#Page_138)–[140](c06.xhtml#Page_140), [144](c06.xhtml#Page_144)
  prefs: []
  type: TYPE_NORMAL
- en: A-RELEASE request message, [96](c05.xhtml#Page_96)
  prefs: []
  type: TYPE_NORMAL
- en: A-RELEASE response message, [96](c05.xhtml#Page_96)
  prefs: []
  type: TYPE_NORMAL
- en: '`ar` parameter, [261](c10.xhtml#Page_261)–[262](c10.xhtml#Page_262)'
  prefs: []
  type: TYPE_NORMAL
- en: asset-centric threat model, *[30](c02.xhtml#Page_30)*
  prefs: []
  type: TYPE_NORMAL
- en: association attacks, *[291](c12.xhtml#Page_291)*–[295](c12.xhtml#Page_295)
  prefs: []
  type: TYPE_NORMAL
- en: Atheros AR7 devices, [225](c09.xhtml#Page_225)–[226](c09.xhtml#Page_226)
  prefs: []
  type: TYPE_NORMAL
- en: Atlasis, Antonios, [133](c06.xhtml#Page_133)
  prefs: []
  type: TYPE_NORMAL
- en: '`at` parameter, [261](c10.xhtml#Page_261)–[262](c10.xhtml#Page_262)'
  prefs: []
  type: TYPE_NORMAL
- en: attacker-centric threat model, *[31](c02.xhtml#Page_31)*
  prefs: []
  type: TYPE_NORMAL
- en: attack trees, *[28](c02.xhtml#Page_28)*–[29](c02.xhtml#Page_29)
  prefs: []
  type: TYPE_NORMAL
- en: Attify Badge, [403](b01.xhtml#Page_403)
  prefs: []
  type: TYPE_NORMAL
- en: A-type messages, [96](c05.xhtml#Page_96)–[97](c05.xhtml#Page_97), [99](c05.xhtml#Page_99)
  prefs: []
  type: TYPE_NORMAL
- en: authentication
  prefs: []
  type: TYPE_NORMAL
- en: BLE, [282](c11.xhtml#Page_282)–[283](c11.xhtml#Page_283)
  prefs: []
  type: TYPE_NORMAL
- en: MIFARE cards, [258](c10.xhtml#Page_258)–[259](c10.xhtml#Page_259)
  prefs: []
  type: TYPE_NORMAL
- en: mobile apps, [340](c14.xhtml#Page_340)–[341](c14.xhtml#Page_341)
  prefs: []
  type: TYPE_NORMAL
- en: mutual, [94](c05.xhtml#Page_94)
  prefs: []
  type: TYPE_NORMAL
- en: nested authentication attack, *[374](c15.xhtml#Page_374)*
  prefs: []
  type: TYPE_NORMAL
- en: web application testing, [49](c03.xhtml#Page_49)
  prefs: []
  type: TYPE_NORMAL
- en: authorization, testing, [49](c03.xhtml#Page_49)–[50](c03.xhtml#Page_50)
  prefs: []
  type: TYPE_NORMAL
- en: AutoIP, [119](c06.xhtml#Page_119)
  prefs: []
  type: TYPE_NORMAL
- en: automatic device discovery, *[145](c06.xhtml#Page_145)*
  prefs: []
  type: TYPE_NORMAL
- en: Automatic Reference Counting (ARC), *[346](c14.xhtml#Page_346)*
  prefs: []
  type: TYPE_NORMAL
- en: automating
  prefs: []
  type: TYPE_NORMAL
- en: firmware analysis, [215](c09.xhtml#Page_215)–[216](c09.xhtml#Page_216)
  prefs: []
  type: TYPE_NORMAL
- en: RFID attacks using Scripting Engine, [263](c10.xhtml#Page_263)–[264](c10.xhtml#Page_264)
  prefs: []
  type: TYPE_NORMAL
- en: static analysis of application source code, [346](c14.xhtml#Page_346), [361](c14.xhtml#Page_361)
  prefs: []
  type: TYPE_NORMAL
- en: AVD (Android Virtual Device) Manager, [360](c14.xhtml#Page_360)
  prefs: []
  type: TYPE_NORMAL
- en: '**B**'
  prefs: []
  type: TYPE_NORMAL
- en: backdoor agent, *[223](c09.xhtml#Page_223)*–[228](c09.xhtml#Page_228)
  prefs: []
  type: TYPE_NORMAL
- en: Baksmali, [368](c14.xhtml#Page_368)–[369](c14.xhtml#Page_369)
  prefs: []
  type: TYPE_NORMAL
- en: banner grabbing, *[44](c03.xhtml#Page_44)*
  prefs: []
  type: TYPE_NORMAL
- en: base station, *[372](c15.xhtml#Page_372)*
  prefs: []
  type: TYPE_NORMAL
- en: battery drain attacks, *[42](c03.xhtml#Page_42)*
  prefs: []
  type: TYPE_NORMAL
- en: baud rate, [162](c07.xhtml#Page_162)–[163](c07.xhtml#Page_163), *[317](c13.xhtml#Page_317)*
  prefs: []
  type: TYPE_NORMAL
- en: '`b` command, [349](c14.xhtml#Page_349)'
  prefs: []
  type: TYPE_NORMAL
- en: beacon frames, *[293](c12.xhtml#Page_293)*
  prefs: []
  type: TYPE_NORMAL
- en: beacons, *[270](c11.xhtml#Page_270)*
  prefs: []
  type: TYPE_NORMAL
- en: Beagle I2C/SPI Protocol Analyzer, [403](b01.xhtml#Page_403)
  prefs: []
  type: TYPE_NORMAL
- en: bed of nails process, *[164](c07.xhtml#Page_164)*
  prefs: []
  type: TYPE_NORMAL
- en: Bettercap, *[276](c11.xhtml#Page_276)*
  prefs: []
  type: TYPE_NORMAL
- en: discovering devices and listing characteristics, [276](c11.xhtml#Page_276)–[278](c11.xhtml#Page_278)
  prefs: []
  type: TYPE_NORMAL
- en: hacking BLE, [279](c11.xhtml#Page_279)–[285](c11.xhtml#Page_285)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [403](b01.xhtml#Page_403)
  prefs: []
  type: TYPE_NORMAL
- en: BinaryCookieReader, [350](c14.xhtml#Page_350)–[351](c14.xhtml#Page_351), [403](b01.xhtml#Page_403)
  prefs: []
  type: TYPE_NORMAL
- en: binary emulation, [216](c09.xhtml#Page_216)–[217](c09.xhtml#Page_217)
  prefs: []
  type: TYPE_NORMAL
- en: binary reversing
  prefs: []
  type: TYPE_NORMAL
- en: InsecureBankV2 app, [362](c14.xhtml#Page_362)–[363](c14.xhtml#Page_363)
  prefs: []
  type: TYPE_NORMAL
- en: OWASP iGoat app, [355](c14.xhtml#Page_355)–[356](c14.xhtml#Page_356)
  prefs: []
  type: TYPE_NORMAL
- en: '*bin/passwd* binary file, [213](c09.xhtml#Page_213)'
  prefs: []
  type: TYPE_NORMAL
- en: Binwalk, [212](c09.xhtml#Page_212), [219](c09.xhtml#Page_219), [403](b01.xhtml#Page_403)
  prefs: []
  type: TYPE_NORMAL
- en: '`binwalk` Nmap command, [70](c04.xhtml#Page_70)–[71](c04.xhtml#Page_71)'
  prefs: []
  type: TYPE_NORMAL
- en: BIOS security testing, [41](c03.xhtml#Page_41)
  prefs: []
  type: TYPE_NORMAL
- en: bit-flipping attacks, [327](c13.xhtml#Page_327)–[330](c13.xhtml#Page_330)
  prefs: []
  type: TYPE_NORMAL
- en: Black Magic Probe, [165](c07.xhtml#Page_165)
  prefs: []
  type: TYPE_NORMAL
- en: Black Pill (STM32F103C8T6)
  prefs: []
  type: TYPE_NORMAL
- en: boot mode, selecting, [174](c07.xhtml#Page_174)–[175](c07.xhtml#Page_175)
  prefs: []
  type: TYPE_NORMAL
- en: coding target program in Arduino, [172](c07.xhtml#Page_172)–[174](c07.xhtml#Page_174)
  prefs: []
  type: TYPE_NORMAL
- en: connecting to computer, [179](c07.xhtml#Page_179)–[180](c07.xhtml#Page_180)
  prefs: []
  type: TYPE_NORMAL
- en: connecting USB to serial adapter, [178](c07.xhtml#Page_178)
  prefs: []
  type: TYPE_NORMAL
- en: debugging target, [181](c07.xhtml#Page_181)–[188](c07.xhtml#Page_188)
  prefs: []
  type: TYPE_NORMAL
- en: flashing and running Arduino program, [174](c07.xhtml#Page_174)–[180](c07.xhtml#Page_180)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [169](c07.xhtml#Page_169)–[170](c07.xhtml#Page_170), [412](b01.xhtml#Page_412)
  prefs: []
  type: TYPE_NORMAL
- en: UART pins, identifying with logic analyzer, [176](c07.xhtml#Page_176)–[177](c07.xhtml#Page_177)
  prefs: []
  type: TYPE_NORMAL
- en: uploading Arduino program, [175](c07.xhtml#Page_175)–[176](c07.xhtml#Page_176)
  prefs: []
  type: TYPE_NORMAL
- en: BladeRF, [403](b01.xhtml#Page_403)
  prefs: []
  type: TYPE_NORMAL
- en: BLE (Bluetooth Low Energy). *See* Bluetooth Low Energy (BLE)
  prefs: []
  type: TYPE_NORMAL
- en: BLE CTF Infinity
  prefs: []
  type: TYPE_NORMAL
- en: authentication, [282](c11.xhtml#Page_282)–[283](c11.xhtml#Page_283)
  prefs: []
  type: TYPE_NORMAL
- en: examining characteristics and descriptors, [281](c11.xhtml#Page_281)–[282](c11.xhtml#Page_282)
  prefs: []
  type: TYPE_NORMAL
- en: getting started, [279](c11.xhtml#Page_279)–[280](c11.xhtml#Page_280)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [278](c11.xhtml#Page_278)
  prefs: []
  type: TYPE_NORMAL
- en: setting up, [279](c11.xhtml#Page_279)
  prefs: []
  type: TYPE_NORMAL
- en: spoofing MAC address, [283](c11.xhtml#Page_283)–[285](c11.xhtml#Page_285)
  prefs: []
  type: TYPE_NORMAL
- en: '`ble.enum` command, [284](c11.xhtml#Page_284)'
  prefs: []
  type: TYPE_NORMAL
- en: '`ble.show` command, [276](c11.xhtml#Page_276)'
  prefs: []
  type: TYPE_NORMAL
- en: '`ble.write` command, [278](c11.xhtml#Page_278)'
  prefs: []
  type: TYPE_NORMAL
- en: BlinkM LED, [198](c08.xhtml#Page_198)–[202](c08.xhtml#Page_202), [404](b01.xhtml#Page_404)
  prefs: []
  type: TYPE_NORMAL
- en: Bluetooth Low Energy (BLE), *[269](c11.xhtml#Page_269)*. *See also* BLE CTF
    Infinity
  prefs: []
  type: TYPE_NORMAL
- en: BlueZ, [273](c11.xhtml#Page_273)–[274](c11.xhtml#Page_274)
  prefs: []
  type: TYPE_NORMAL
- en: configuring interfaces, [274](c11.xhtml#Page_274)–[275](c11.xhtml#Page_275)
  prefs: []
  type: TYPE_NORMAL
- en: discovering devices, [275](c11.xhtml#Page_275)–[278](c11.xhtml#Page_278)
  prefs: []
  type: TYPE_NORMAL
- en: GAP, [271](c11.xhtml#Page_271)–[272](c11.xhtml#Page_272)
  prefs: []
  type: TYPE_NORMAL
- en: GATT, [272](c11.xhtml#Page_272)
  prefs: []
  type: TYPE_NORMAL
- en: general discussion, [270](c11.xhtml#Page_270)–[272](c11.xhtml#Page_272)
  prefs: []
  type: TYPE_NORMAL
- en: hardware, [273](c11.xhtml#Page_273)
  prefs: []
  type: TYPE_NORMAL
- en: listing characteristics, [275](c11.xhtml#Page_275)–[278](c11.xhtml#Page_278)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [269](c11.xhtml#Page_269)–[270](c11.xhtml#Page_270)
  prefs: []
  type: TYPE_NORMAL
- en: packet structure, [271](c11.xhtml#Page_271)
  prefs: []
  type: TYPE_NORMAL
- en: BlueZ, *[273](c11.xhtml#Page_273)*–[274](c11.xhtml#Page_274)
  prefs: []
  type: TYPE_NORMAL
- en: Bolshev, A., [367](c14.xhtml#Page_367)
  prefs: []
  type: TYPE_NORMAL
- en: Bolt, Usain, [400](c15.xhtml#Page_400)
  prefs: []
  type: TYPE_NORMAL
- en: Bonjour, [138](c06.xhtml#Page_138)–[139](c06.xhtml#Page_139)
  prefs: []
  type: TYPE_NORMAL
- en: boot environment, security testing of, [41](c03.xhtml#Page_41)
  prefs: []
  type: TYPE_NORMAL
- en: boot modes, ST-Link programmer, [174](c07.xhtml#Page_174)–[175](c07.xhtml#Page_175)
  prefs: []
  type: TYPE_NORMAL
- en: boundary scan, *[164](c07.xhtml#Page_164)*
  prefs: []
  type: TYPE_NORMAL
- en: breadboard, *[169](c07.xhtml#Page_169)*
  prefs: []
  type: TYPE_NORMAL
- en: breakpoints in debugging, setting, [349](c14.xhtml#Page_349)
  prefs: []
  type: TYPE_NORMAL
- en: brokers, in publish-subscribe architecture, [73](c04.xhtml#Page_73)
  prefs: []
  type: TYPE_NORMAL
- en: brute-force attack, [213](c09.xhtml#Page_213)–[214](c09.xhtml#Page_214)
  prefs: []
  type: TYPE_NORMAL
- en: cloning MIFARE Classic cards, [252](c10.xhtml#Page_252)–[253](c10.xhtml#Page_253)
  prefs: []
  type: TYPE_NORMAL
- en: preshared key attacks, [301](c12.xhtml#Page_301)
  prefs: []
  type: TYPE_NORMAL
- en: on RFID reader authentication control, [262](c10.xhtml#Page_262)–[263](c10.xhtml#Page_263)
  prefs: []
  type: TYPE_NORMAL
- en: Wi-Fi Direct, [296](c12.xhtml#Page_296)–[297](c12.xhtml#Page_297)
  prefs: []
  type: TYPE_NORMAL
- en: BSSID, [288](c12.xhtml#Page_288)
  prefs: []
  type: TYPE_NORMAL
- en: '`bufsiz` variable, [173](c07.xhtml#Page_173)'
  prefs: []
  type: TYPE_NORMAL
- en: built-in security for IoT devices, [5](c01.xhtml#Page_5)
  prefs: []
  type: TYPE_NORMAL
- en: Bundle container, *[347](c14.xhtml#Page_347)*
  prefs: []
  type: TYPE_NORMAL
- en: Burp Proxy Suite, [356](c14.xhtml#Page_356)–[357](c14.xhtml#Page_357)
  prefs: []
  type: TYPE_NORMAL
- en: Burp Suite, [404](b01.xhtml#Page_404)
  prefs: []
  type: TYPE_NORMAL
- en: Bus Blaster, [404](b01.xhtml#Page_404)
  prefs: []
  type: TYPE_NORMAL
- en: Bus Pirate, *[190](c08.xhtml#Page_190)*
  prefs: []
  type: TYPE_NORMAL
- en: attacking I²C with, [202](c08.xhtml#Page_202)–[206](c08.xhtml#Page_206)
  prefs: []
  type: TYPE_NORMAL
- en: communicating with SPI chip, [194](c08.xhtml#Page_194)–[195](c08.xhtml#Page_195)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [190](c08.xhtml#Page_190), [404](b01.xhtml#Page_404)
  prefs: []
  type: TYPE_NORMAL
- en: reading memory chip contents, [196](c08.xhtml#Page_196)
  prefs: []
  type: TYPE_NORMAL
- en: BusyBox, *[67](c04.xhtml#Page_67)*
  prefs: []
  type: TYPE_NORMAL
- en: busybox file, *[217](c09.xhtml#Page_217)*
  prefs: []
  type: TYPE_NORMAL
- en: BYPASS command, JTAG, [164](c07.xhtml#Page_164)
  prefs: []
  type: TYPE_NORMAL
- en: '**C**'
  prefs: []
  type: TYPE_NORMAL
- en: CA (SSL certificate authority), [357](c14.xhtml#Page_357)
  prefs: []
  type: TYPE_NORMAL
- en: cameras, IP. *See* IP cameras
  prefs: []
  type: TYPE_NORMAL
- en: Capture the Flag (CTF). *See* BLE CTF Infinity
  prefs: []
  type: TYPE_NORMAL
- en: CatWAN USB Stick, *[309](c13.xhtml#Page_309)*, [404](b01.xhtml#Page_404)
  prefs: []
  type: TYPE_NORMAL
- en: turning into LoRa sniffer, [318](c13.xhtml#Page_318)–[322](c13.xhtml#Page_322)
  prefs: []
  type: TYPE_NORMAL
- en: '`cbnz` command, [185](c07.xhtml#Page_185)–[186](c07.xhtml#Page_186)'
  prefs: []
  type: TYPE_NORMAL
- en: C-ECHO messages, *[96](c05.xhtml#Page_96)*–[97](c05.xhtml#Page_97)
  prefs: []
  type: TYPE_NORMAL
- en: C-ECHO requests dissector, building, [101](c05.xhtml#Page_101)–[105](c05.xhtml#Page_105)
  prefs: []
  type: TYPE_NORMAL
- en: central device, *[270](c11.xhtml#Page_270)*
  prefs: []
  type: TYPE_NORMAL
- en: Certificate Transparency, *[37](c03.xhtml#Page_37)*
  prefs: []
  type: TYPE_NORMAL
- en: CFAA (Computer Fraud and Abuse Act), [12](c01.xhtml#Page_12)–[13](c01.xhtml#Page_13)
  prefs: []
  type: TYPE_NORMAL
- en: characteristics, BLE, *[272](c11.xhtml#Page_272)*
  prefs: []
  type: TYPE_NORMAL
- en: examining, [281](c11.xhtml#Page_281)–[282](c11.xhtml#Page_282)
  prefs: []
  type: TYPE_NORMAL
- en: listing, [275](c11.xhtml#Page_275)–[278](c11.xhtml#Page_278)
  prefs: []
  type: TYPE_NORMAL
- en: '`char-read-hnd <handle>` command, [282](c11.xhtml#Page_282)'
  prefs: []
  type: TYPE_NORMAL
- en: '`charset` variable, [265](c10.xhtml#Page_265)'
  prefs: []
  type: TYPE_NORMAL
- en: '`checkEmulatorStatus()` function, [368](c14.xhtml#Page_368)–[369](c14.xhtml#Page_369)'
  prefs: []
  type: TYPE_NORMAL
- en: '`check_fwmode` file, [71](c04.xhtml#Page_71)'
  prefs: []
  type: TYPE_NORMAL
- en: Chip Select (CS), [191](c08.xhtml#Page_191)
  prefs: []
  type: TYPE_NORMAL
- en: ChipWhisperer, [404](b01.xhtml#Page_404)
  prefs: []
  type: TYPE_NORMAL
- en: '`chk` command, [252](c10.xhtml#Page_252)–[253](c10.xhtml#Page_253)'
  prefs: []
  type: TYPE_NORMAL
- en: '`chmod a+x <script_name>.js` command, [328](c13.xhtml#Page_328)'
  prefs: []
  type: TYPE_NORMAL
- en: '`chmod` utility, [376](c15.xhtml#Page_376)'
  prefs: []
  type: TYPE_NORMAL
- en: Cipher-based Message Authentication Code (CMAC), *[325](c13.xhtml#Page_325)*
  prefs: []
  type: TYPE_NORMAL
- en: CIPO (Controller In, Peripheral Out), [191](c08.xhtml#Page_191)
  prefs: []
  type: TYPE_NORMAL
- en: CIRCUITPY drive, [319](c13.xhtml#Page_319), [320](c13.xhtml#Page_320)
  prefs: []
  type: TYPE_NORMAL
- en: CircuitPython, [405](b01.xhtml#Page_405)
  prefs: []
  type: TYPE_NORMAL
- en: setting up, [318](c13.xhtml#Page_318)–[319](c13.xhtml#Page_319)
  prefs: []
  type: TYPE_NORMAL
- en: writing LoRa sniffer, [320](c13.xhtml#Page_320)–[322](c13.xhtml#Page_322)
  prefs: []
  type: TYPE_NORMAL
- en: Cisco VoIP devices, imitating, [66](c04.xhtml#Page_66)–[67](c04.xhtml#Page_67)
  prefs: []
  type: TYPE_NORMAL
- en: classes, RFID tag, [243](c10.xhtml#Page_243)
  prefs: []
  type: TYPE_NORMAL
- en: '*classes.dex* file, [361](c14.xhtml#Page_361)'
  prefs: []
  type: TYPE_NORMAL
- en: Client, WS-Discovery, *[145](c06.xhtml#Page_145)–[146](c06.xhtml#Page_146)*
  prefs: []
  type: TYPE_NORMAL
- en: client code, firmware update mechanisms for, [229](c09.xhtml#Page_229)–[232](c09.xhtml#Page_232)
  prefs: []
  type: TYPE_NORMAL
- en: client impersonation attacks, [94](c05.xhtml#Page_94)
  prefs: []
  type: TYPE_NORMAL
- en: clients, enumerating and installing, [90](c05.xhtml#Page_90)
  prefs: []
  type: TYPE_NORMAL
- en: client-side controls, *[48](c03.xhtml#Page_48)*–[49](c03.xhtml#Page_49)
  prefs: []
  type: TYPE_NORMAL
- en: cloning RFID tags
  prefs: []
  type: TYPE_NORMAL
- en: high-frequency, [250](c10.xhtml#Page_250)–[254](c10.xhtml#Page_254)
  prefs: []
  type: TYPE_NORMAL
- en: of keylock system, [372](c15.xhtml#Page_372)–[375](c15.xhtml#Page_375)
  prefs: []
  type: TYPE_NORMAL
- en: low-frequency, [249](c10.xhtml#Page_249)
  prefs: []
  type: TYPE_NORMAL
- en: cloud testing, [54](c03.xhtml#Page_54)
  prefs: []
  type: TYPE_NORMAL
- en: Clutch, [344](c14.xhtml#Page_344), [405](b01.xhtml#Page_405)
  prefs: []
  type: TYPE_NORMAL
- en: CMAC (Cipher-based Message Authentication Code), *[325](c13.xhtml#Page_325)*
  prefs: []
  type: TYPE_NORMAL
- en: '`cmd` struct, [85](c04.xhtml#Page_85)'
  prefs: []
  type: TYPE_NORMAL
- en: Code of Practice, UK, [14](c01.xhtml#Page_14)
  prefs: []
  type: TYPE_NORMAL
- en: '*code.py* file, [319](c13.xhtml#Page_319), [320](c13.xhtml#Page_320)'
  prefs: []
  type: TYPE_NORMAL
- en: '*com.android.insecureBankv2.PostLogin* file, [368](c14.xhtml#Page_368)'
  prefs: []
  type: TYPE_NORMAL
- en: combinator attack, *[214](c09.xhtml#Page_214)*
  prefs: []
  type: TYPE_NORMAL
- en: composition of IoT devices, [6](c01.xhtml#Page_6)
  prefs: []
  type: TYPE_NORMAL
- en: Computer Fraud and Abuse Act (CFAA), [12](c01.xhtml#Page_12)–[13](c01.xhtml#Page_13)
  prefs: []
  type: TYPE_NORMAL
- en: '`config_load "upnpd"` command, [123](c06.xhtml#Page_123)–[124](c06.xhtml#Page_124)'
  prefs: []
  type: TYPE_NORMAL
- en: configuration files
  prefs: []
  type: TYPE_NORMAL
- en: finding credentials in firmware, [214](c09.xhtml#Page_214)–[215](c09.xhtml#Page_215)
  prefs: []
  type: TYPE_NORMAL
- en: OpenOCD Server, [181](c07.xhtml#Page_181)–[182](c07.xhtml#Page_182)
  prefs: []
  type: TYPE_NORMAL
- en: '`ConfigureConnection` command, [12](c01.xhtml#Page_12)9'
  prefs: []
  type: TYPE_NORMAL
- en: '*CONNACK* packet, MQTT, [75](c04.xhtml#Page_75)–[76](c04.xhtml#Page_76), [80](c04.xhtml#Page_80),
    [82](c04.xhtml#Page_82)–[84](c04.xhtml#Page_84)'
  prefs: []
  type: TYPE_NORMAL
- en: '`connect <mac address>` command, [275](c11.xhtml#Page_275)'
  prefs: []
  type: TYPE_NORMAL
- en: '*CONNECT* packet, MQTT, [74](c04.xhtml#Page_74), [80](c04.xhtml#Page_80)–[82](c04.xhtml#Page_82)'
  prefs: []
  type: TYPE_NORMAL
- en: '`content update` command, [398](c15.xhtml#Page_398)'
  prefs: []
  type: TYPE_NORMAL
- en: contexts, DICOM, *[103](c05.xhtml#Page_103)*–[104](c05.xhtml#Page_104)
  prefs: []
  type: TYPE_NORMAL
- en: contexts of IoT devices, [6](c01.xhtml#Page_6)
  prefs: []
  type: TYPE_NORMAL
- en: '`continue` command, GDB, [185](c07.xhtml#Page_185)'
  prefs: []
  type: TYPE_NORMAL
- en: continuity test, [161](c07.xhtml#Page_161)
  prefs: []
  type: TYPE_NORMAL
- en: control data, in RFID tags, *[243](c10.xhtml#Page_243)*
  prefs: []
  type: TYPE_NORMAL
- en: control layer, UPnP, *[120](c06.xhtml#Page_120)*
  prefs: []
  type: TYPE_NORMAL
- en: Controller In, Peripheral Out (CIPO), [191](c08.xhtml#Page_191)
  prefs: []
  type: TYPE_NORMAL
- en: Controller Out, Peripheral In (COPI), [191](c08.xhtml#Page_191)
  prefs: []
  type: TYPE_NORMAL
- en: controller-peripheral I²C bus architecture, setting up, [198](c08.xhtml#Page_198)–[202](c08.xhtml#Page_202)
  prefs: []
  type: TYPE_NORMAL
- en: control server, drug infusion pump, [19](c02.xhtml#Page_19), [20](c02.xhtml#Page_20)
  prefs: []
  type: TYPE_NORMAL
- en: control server service, *[20](c02.xhtml#Page_20)*, [23](c02.xhtml#Page_23)–[24](c02.xhtml#Page_24)
  prefs: []
  type: TYPE_NORMAL
- en: cookies, reading, [350](c14.xhtml#Page_350)–[351](c14.xhtml#Page_351)
  prefs: []
  type: TYPE_NORMAL
- en: COPI (Controller Out, Peripheral In), [191](c08.xhtml#Page_191)
  prefs: []
  type: TYPE_NORMAL
- en: CoreData framework, *[348](c14.xhtml#Page_348)*
  prefs: []
  type: TYPE_NORMAL
- en: cores, *[171](c07.xhtml#Page_171)*
  prefs: []
  type: TYPE_NORMAL
- en: crafting attacks, [152](c06.xhtml#Page_152)–[153](c06.xhtml#Page_153)
  prefs: []
  type: TYPE_NORMAL
- en: CRCs (cyclic redundancy checks), *[243](c10.xhtml#Page_243)*, [313](c13.xhtml#Page_313),
    [324](c13.xhtml#Page_324)
  prefs: []
  type: TYPE_NORMAL
- en: credentials
  prefs: []
  type: TYPE_NORMAL
- en: finding in firmware configuration files, [214](c09.xhtml#Page_214)–[215](c09.xhtml#Page_215)
  prefs: []
  type: TYPE_NORMAL
- en: firmware update services vulnerabilities, [233](c09.xhtml#Page_233)–[234](c09.xhtml#Page_234)
  prefs: []
  type: TYPE_NORMAL
- en: WS-Discovery attacks, [153](c06.xhtml#Page_153)
  prefs: []
  type: TYPE_NORMAL
- en: '*Credentials.plist* file, [345](c14.xhtml#Page_345)'
  prefs: []
  type: TYPE_NORMAL
- en: crib dragging, *[331](c13.xhtml#Page_331)*
  prefs: []
  type: TYPE_NORMAL
- en: Cross-Site Request Forgery (CSRF) attacks, *[49](c03.xhtml#Page_49)*
  prefs: []
  type: TYPE_NORMAL
- en: cryptographic keys, [8](c01.xhtml#Page_8)
  prefs: []
  type: TYPE_NORMAL
- en: CS (Chip Select), [191](c08.xhtml#Page_191)
  prefs: []
  type: TYPE_NORMAL
- en: CSRF (Cross-Site Request Forgery) attacks, [49](c03.xhtml#Page_49)
  prefs: []
  type: TYPE_NORMAL
- en: CTF. *See* BLE CTF Infinity
  prefs: []
  type: TYPE_NORMAL
- en: CubicSDR, [376](c15.xhtml#Page_376)–[378](c15.xhtml#Page_378), [405](b01.xhtml#Page_405)
  prefs: []
  type: TYPE_NORMAL
- en: cyclic redundancy checks (CRCs), *[243](c10.xhtml#Page_243)*, [313](c13.xhtml#Page_313),
    [324](c13.xhtml#Page_324)
  prefs: []
  type: TYPE_NORMAL
- en: Cydia Impactor, [344](c14.xhtml#Page_344)
  prefs: []
  type: TYPE_NORMAL
- en: '**D**'
  prefs: []
  type: TYPE_NORMAL
- en: Dalvik Executable (DEX) file formats, [361](c14.xhtml#Page_361)
  prefs: []
  type: TYPE_NORMAL
- en: Damn Vulnerable ARM Router (DVAR), [235](c09.xhtml#Page_235)
  prefs: []
  type: TYPE_NORMAL
- en: Damn Vulnerable IoT Device (DVID), [235](c09.xhtml#Page_235)
  prefs: []
  type: TYPE_NORMAL
- en: Darkside attacks, *[373](c15.xhtml#Page_373)*–[374](c15.xhtml#Page_374)
  prefs: []
  type: TYPE_NORMAL
- en: Dashboard APK, [397](c15.xhtml#Page_397)–[398](c15.xhtml#Page_398), [400](c15.xhtml#Page_400)
  prefs: []
  type: TYPE_NORMAL
- en: databases of apps, inspecting, [366](c14.xhtml#Page_366)–[367](c14.xhtml#Page_367)
  prefs: []
  type: TYPE_NORMAL
- en: data bits, UART, [158](c07.xhtml#Page_158)
  prefs: []
  type: TYPE_NORMAL
- en: Data container, *[347](c14.xhtml#Page_347)*
  prefs: []
  type: TYPE_NORMAL
- en: data encryption, testing, [53](c03.xhtml#Page_53)
  prefs: []
  type: TYPE_NORMAL
- en: data link layer, *[131](c06.xhtml#Page_131)*
  prefs: []
  type: TYPE_NORMAL
- en: data protection, mobile app, [339](c14.xhtml#Page_339)–[340](c14.xhtml#Page_340)
  prefs: []
  type: TYPE_NORMAL
- en: datasheets, *[37](c03.xhtml#Page_37)*
  prefs: []
  type: TYPE_NORMAL
- en: Data Storage Format Identifier (DSFID), *[244](c10.xhtml#Page_244)*
  prefs: []
  type: TYPE_NORMAL
- en: DDoS (Distributed Denial of Service), [4](c01.xhtml#Page_4)–[5](c01.xhtml#Page_5)
  prefs: []
  type: TYPE_NORMAL
- en: Deauthenticate frames, *[289](c12.xhtml#Page_289)*
  prefs: []
  type: TYPE_NORMAL
- en: deauthentication attacks, [289](c12.xhtml#Page_289)–[291](c12.xhtml#Page_291)
  prefs: []
  type: TYPE_NORMAL
- en: debugging
  prefs: []
  type: TYPE_NORMAL
- en: assessment of interfaces, [42](c03.xhtml#Page_42)
  prefs: []
  type: TYPE_NORMAL
- en: Black Pill
  prefs: []
  type: TYPE_NORMAL
- en: with GDB, [183](c07.xhtml#Page_183)–[188](c07.xhtml#Page_188)
  prefs: []
  type: TYPE_NORMAL
- en: setting up environment for, [170](c07.xhtml#Page_170)–[172](c07.xhtml#Page_172)
  prefs: []
  type: TYPE_NORMAL
- en: on mobile apps, [348](c14.xhtml#Page_348)–[349](c14.xhtml#Page_349)
  prefs: []
  type: TYPE_NORMAL
- en: debug symbols, [183](c07.xhtml#Page_183)
  prefs: []
  type: TYPE_NORMAL
- en: '`#define` directives, [229](c09.xhtml#Page_229)'
  prefs: []
  type: TYPE_NORMAL
- en: '`DeletePortMapping` command, [13](c01.xhtml#Page_13)0'
  prefs: []
  type: TYPE_NORMAL
- en: denial of service attacks, *[22](c02.xhtml#Page_22)*
  prefs: []
  type: TYPE_NORMAL
- en: ACK spoofing, [331](c13.xhtml#Page_331)
  prefs: []
  type: TYPE_NORMAL
- en: on control server service, [24](c02.xhtml#Page_24)
  prefs: []
  type: TYPE_NORMAL
- en: on drug library, [24](c02.xhtml#Page_24)
  prefs: []
  type: TYPE_NORMAL
- en: on firmware, [26](c02.xhtml#Page_26)
  prefs: []
  type: TYPE_NORMAL
- en: on hardware, [27](c02.xhtml#Page_27)
  prefs: []
  type: TYPE_NORMAL
- en: on IP cameras, [152](c06.xhtml#Page_152)–[153](c06.xhtml#Page_153)
  prefs: []
  type: TYPE_NORMAL
- en: on operating system, [25](c02.xhtml#Page_25)
  prefs: []
  type: TYPE_NORMAL
- en: on pump service, [28](c02.xhtml#Page_28)
  prefs: []
  type: TYPE_NORMAL
- en: on restrictive user interface, [22](c02.xhtml#Page_22)–[23](c02.xhtml#Page_23)
  prefs: []
  type: TYPE_NORMAL
- en: STRIDE threat classification model, [19](c02.xhtml#Page_19)
  prefs: []
  type: TYPE_NORMAL
- en: against wireless clients, [289](c12.xhtml#Page_289)–[291](c12.xhtml#Page_291)
  prefs: []
  type: TYPE_NORMAL
- en: dependent protocols, discovering, [90](c05.xhtml#Page_90)
  prefs: []
  type: TYPE_NORMAL
- en: description layer, UPnP, *[119](c06.xhtml#Page_119)*
  prefs: []
  type: TYPE_NORMAL
- en: description XML file, *[119](c06.xhtml#Page_119)*–[120](c06.xhtml#Page_120)
  prefs: []
  type: TYPE_NORMAL
- en: descriptors, BLE, *[272](c11.xhtml#Page_272)*, [281](c11.xhtml#Page_281)–[282](c11.xhtml#Page_282)
  prefs: []
  type: TYPE_NORMAL
- en: DevAddr (end-device address), *[324](c13.xhtml#Page_324)*, [326](c13.xhtml#Page_326)
  prefs: []
  type: TYPE_NORMAL
- en: DevEUI (end-device identifier), [325](c13.xhtml#Page_325)
  prefs: []
  type: TYPE_NORMAL
- en: device attestation, *[18](c02.xhtml#Page_18)*
  prefs: []
  type: TYPE_NORMAL
- en: device bootloaders, [211](c09.xhtml#Page_211)
  prefs: []
  type: TYPE_NORMAL
- en: Device Discovery phase, Wi-Fi Direct, [296](c12.xhtml#Page_296)
  prefs: []
  type: TYPE_NORMAL
- en: DevNonce, [325](c13.xhtml#Page_325)
  prefs: []
  type: TYPE_NORMAL
- en: DEX (Dalvik Executable) file formats, [361](c14.xhtml#Page_361)
  prefs: []
  type: TYPE_NORMAL
- en: Dex2jar, [361](c14.xhtml#Page_361), [405](b01.xhtml#Page_405)
  prefs: []
  type: TYPE_NORMAL
- en: dialout group, adding username to, [310](c13.xhtml#Page_310)
  prefs: []
  type: TYPE_NORMAL
- en: '`dicom_protocol .dissector()` function, [102](c05.xhtml#Page_102)'
  prefs: []
  type: TYPE_NORMAL
- en: '`dicom.associate()` function, [114](c05.xhtml#Page_114)–[115](c05.xhtml#Page_115)'
  prefs: []
  type: TYPE_NORMAL
- en: '`dicom.pdu_header_encode()` function, [113](c05.xhtml#Page_113)'
  prefs: []
  type: TYPE_NORMAL
- en: DICOM pings, *[96](c05.xhtml#Page_96)*–[97](c05.xhtml#Page_97)
  prefs: []
  type: TYPE_NORMAL
- en: DICOM protocol, *[95](c05.xhtml#Page_95)*. *See also* DICOM service scanner
  prefs: []
  type: TYPE_NORMAL
- en: C-ECHO requests dissector, building, [101](c05.xhtml#Page_101)–[105](c05.xhtml#Page_105)
  prefs: []
  type: TYPE_NORMAL
- en: general discussion, [95](c05.xhtml#Page_95)–[97](c05.xhtml#Page_97)
  prefs: []
  type: TYPE_NORMAL
- en: Lua Wireshark dissector, developing, [99](c05.xhtml#Page_99)–[101](c05.xhtml#Page_101)
  prefs: []
  type: TYPE_NORMAL
- en: traffic, generating, [97](c05.xhtml#Page_97)
  prefs: []
  type: TYPE_NORMAL
- en: DICOM service scanner, *[105](c05.xhtml#Page_105)*
  prefs: []
  type: TYPE_NORMAL
- en: A-ASSOCIATE request messages, [110](c05.xhtml#Page_110)–[114](c05.xhtml#Page_114)
  prefs: []
  type: TYPE_NORMAL
- en: codes and constants, defining, [106](c05.xhtml#Page_106)–[107](c05.xhtml#Page_107)
  prefs: []
  type: TYPE_NORMAL
- en: final script, writing, [113](c05.xhtml#Page_113)–[114](c05.xhtml#Page_114)
  prefs: []
  type: TYPE_NORMAL
- en: functions for sending and receiving packets, [108](c05.xhtml#Page_108)–[109](c05.xhtml#Page_109)
  prefs: []
  type: TYPE_NORMAL
- en: Nmap Scripting Engine library, creating, [106](c05.xhtml#Page_106)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [105](c05.xhtml#Page_105)
  prefs: []
  type: TYPE_NORMAL
- en: packet headers, creating, [109](c05.xhtml#Page_109)–[110](c05.xhtml#Page_110)
  prefs: []
  type: TYPE_NORMAL
- en: script arguments, reading in Nmap Scripting Engine, [112](c05.xhtml#Page_112)
  prefs: []
  type: TYPE_NORMAL
- en: socket creation and destruction functions, [107](c05.xhtml#Page_107)–[108](c05.xhtml#Page_108)
  prefs: []
  type: TYPE_NORMAL
- en: '`dicom.start_connection()` function, [107](c05.xhtml#Page_107)–[108](c05.xhtml#Page_108)'
  prefs: []
  type: TYPE_NORMAL
- en: dictionary attack, *[49](c03.xhtml#Page_49)*
  prefs: []
  type: TYPE_NORMAL
- en: differential power analysis, *[42](c03.xhtml#Page_42)*
  prefs: []
  type: TYPE_NORMAL
- en: Digital Millennium Copyright Act (DMCA), [12](c01.xhtml#Page_12)–[13](c01.xhtml#Page_13)
  prefs: []
  type: TYPE_NORMAL
- en: digital signing, [94](c05.xhtml#Page_94)
  prefs: []
  type: TYPE_NORMAL
- en: directives, Nmap service probe, [72](c04.xhtml#Page_72)
  prefs: []
  type: TYPE_NORMAL
- en: '`disassemble` command, GDB, [184](c07.xhtml#Page_184)–[185](c07.xhtml#Page_185)'
  prefs: []
  type: TYPE_NORMAL
- en: Disassociate frames, *[289](c12.xhtml#Page_289)*
  prefs: []
  type: TYPE_NORMAL
- en: discovering BLE devices, [275](c11.xhtml#Page_275)–[278](c11.xhtml#Page_278)
  prefs: []
  type: TYPE_NORMAL
- en: discovery layer, UPnP, *[119](c06.xhtml#Page_119)*
  prefs: []
  type: TYPE_NORMAL
- en: '`dissector()` function, [99](c05.xhtml#Page_99)–[100](c05.xhtml#Page_100)'
  prefs: []
  type: TYPE_NORMAL
- en: dissectors
  prefs: []
  type: TYPE_NORMAL
- en: C-ECHO requests, building, [101](c05.xhtml#Page_101)–[105](c05.xhtml#Page_105)
  prefs: []
  type: TYPE_NORMAL
- en: Lua Wireshark, [99](c05.xhtml#Page_99)–[101](c05.xhtml#Page_101)
  prefs: []
  type: TYPE_NORMAL
- en: testing Wireshark, [91](c05.xhtml#Page_91)
  prefs: []
  type: TYPE_NORMAL
- en: Distributed Denial of Service (DDoS), [4](c01.xhtml#Page_4)–[5](c01.xhtml#Page_5)
  prefs: []
  type: TYPE_NORMAL
- en: DMCA (Digital Millennium Copyright Act), [12](c01.xhtml#Page_12)–[13](c01.xhtml#Page_13)
  prefs: []
  type: TYPE_NORMAL
- en: '`dmesg` command, [246](c10.xhtml#Page_246)'
  prefs: []
  type: TYPE_NORMAL
- en: Domain Name System Service Discovery (DNS-SD), *[131](c06.xhtml#Page_131)*
  prefs: []
  type: TYPE_NORMAL
- en: conducting reconnaissance with, [133](c06.xhtml#Page_133)–[134](c06.xhtml#Page_134)
  prefs: []
  type: TYPE_NORMAL
- en: general discussion, [132](c06.xhtml#Page_132)–[133](c06.xhtml#Page_133)
  prefs: []
  type: TYPE_NORMAL
- en: man-in-the-middle attacks
  prefs: []
  type: TYPE_NORMAL
- en: mDNS poisoner, creating, [141](c06.xhtml#Page_141)–[144](c06.xhtml#Page_144)
  prefs: []
  type: TYPE_NORMAL
- en: mDNS poisoner, testing, [144](c06.xhtml#Page_144)–[146](c06.xhtml#Page_146)
  prefs: []
  type: TYPE_NORMAL
- en: typical client and server interactions, [139](c06.xhtml#Page_139)–[140](c06.xhtml#Page_140)
  prefs: []
  type: TYPE_NORMAL
- en: victim client, setting up, [138](c06.xhtml#Page_138)–[139](c06.xhtml#Page_139)
  prefs: []
  type: TYPE_NORMAL
- en: victim server, setting up, [136](c06.xhtml#Page_136)–[138](c06.xhtml#Page_138)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [132](c06.xhtml#Page_132)
  prefs: []
  type: TYPE_NORMAL
- en: '`Dot1Q()` function, [64](c04.xhtml#Page_64)'
  prefs: []
  type: TYPE_NORMAL
- en: double tagging attacks, [63](c04.xhtml#Page_63)–[65](c04.xhtml#Page_65)
  prefs: []
  type: TYPE_NORMAL
- en: downgrade attacks, [94](c05.xhtml#Page_94)
  prefs: []
  type: TYPE_NORMAL
- en: downtime, *[52](c03.xhtml#Page_52)*
  prefs: []
  type: TYPE_NORMAL
- en: DREAD Classification Scheme, [29](c02.xhtml#Page_29)–[30](c02.xhtml#Page_30)
  prefs: []
  type: TYPE_NORMAL
- en: Drozer, [363](c14.xhtml#Page_363)–[365](c14.xhtml#Page_365), [405](b01.xhtml#Page_405)
  prefs: []
  type: TYPE_NORMAL
- en: drug infusion pump
  prefs: []
  type: TYPE_NORMAL
- en: architecture of, [19](c02.xhtml#Page_19)–[21](c02.xhtml#Page_21)
  prefs: []
  type: TYPE_NORMAL
- en: identifying threats
  prefs: []
  type: TYPE_NORMAL
- en: attack trees, using, [28](c02.xhtml#Page_28)–[29](c02.xhtml#Page_29)
  prefs: []
  type: TYPE_NORMAL
- en: control server service, [23](c02.xhtml#Page_23)–[24](c02.xhtml#Page_24)
  prefs: []
  type: TYPE_NORMAL
- en: drug library, [24](c02.xhtml#Page_24)
  prefs: []
  type: TYPE_NORMAL
- en: firmware, [25](c02.xhtml#Page_25)–[26](c02.xhtml#Page_26)
  prefs: []
  type: TYPE_NORMAL
- en: operating system, [25](c02.xhtml#Page_25)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [21](c02.xhtml#Page_21)–[22](c02.xhtml#Page_22)
  prefs: []
  type: TYPE_NORMAL
- en: physical equipment, [26](c02.xhtml#Page_26)–[27](c02.xhtml#Page_27)
  prefs: []
  type: TYPE_NORMAL
- en: pump service, [27](c02.xhtml#Page_27)–[28](c02.xhtml#Page_28)
  prefs: []
  type: TYPE_NORMAL
- en: RUI, [22](c02.xhtml#Page_22)–[23](c02.xhtml#Page_23)
  prefs: []
  type: TYPE_NORMAL
- en: DSFID (Data Storage Format Identifier), *[244](c10.xhtml#Page_244)*
  prefs: []
  type: TYPE_NORMAL
- en: DTP (Dynamic Trunking Protocol), *[61](c04.xhtml#Page_61)*
  prefs: []
  type: TYPE_NORMAL
- en: '*dumpedkeys.bin* file, [253](c10.xhtml#Page_253)–[254](c10.xhtml#Page_254)'
  prefs: []
  type: TYPE_NORMAL
- en: '`dump` parameter, [253](c10.xhtml#Page_253)–[254](c10.xhtml#Page_254)'
  prefs: []
  type: TYPE_NORMAL
- en: '`dumptoemul` script, [263](c10.xhtml#Page_263)'
  prefs: []
  type: TYPE_NORMAL
- en: DVAR (Damn Vulnerable ARM Router), [235](c09.xhtml#Page_235)
  prefs: []
  type: TYPE_NORMAL
- en: DVID (Damn Vulnerable IoT Device), [235](c09.xhtml#Page_235)
  prefs: []
  type: TYPE_NORMAL
- en: dynamic analysis
  prefs: []
  type: TYPE_NORMAL
- en: firmware, [221](c09.xhtml#Page_221)–[223](c09.xhtml#Page_223)
  prefs: []
  type: TYPE_NORMAL
- en: InsecureBankV2 app, [363](c14.xhtml#Page_363)–[367](c14.xhtml#Page_367)
  prefs: []
  type: TYPE_NORMAL
- en: OWASP iGoat app, [347](c14.xhtml#Page_347)–[353](c14.xhtml#Page_353)
  prefs: []
  type: TYPE_NORMAL
- en: dynamic patching
  prefs: []
  type: TYPE_NORMAL
- en: jailbreak detection, avoiding with, [357](c14.xhtml#Page_357)–[358](c14.xhtml#Page_358)
  prefs: []
  type: TYPE_NORMAL
- en: root detection, avoiding with, [369](c14.xhtml#Page_369)–[370](c14.xhtml#Page_370)
  prefs: []
  type: TYPE_NORMAL
- en: Dynamic Trunking Protocol (DTP), *[61](c04.xhtml#Page_61)*
  prefs: []
  type: TYPE_NORMAL
- en: '**E**'
  prefs: []
  type: TYPE_NORMAL
- en: EAP over LAN (EAPOL) handshake, [299](c12.xhtml#Page_299)–*[300](c12.xhtml#Page_300)*
  prefs: []
  type: TYPE_NORMAL
- en: EAP-TLS, [304](c12.xhtml#Page_304)–[305](c12.xhtml#Page_305)
  prefs: []
  type: TYPE_NORMAL
- en: EAP-Tunneled-TLS (EAPTTLS), [304](c12.xhtml#Page_304)–[305](c12.xhtml#Page_305)
  prefs: []
  type: TYPE_NORMAL
- en: eavesdropping, *[331](c13.xhtml#Page_331)*
  prefs: []
  type: TYPE_NORMAL
- en: LoRaWAN, [331](c13.xhtml#Page_331)
  prefs: []
  type: TYPE_NORMAL
- en: on tag-to-reader communication, [260](c10.xhtml#Page_260)–[261](c10.xhtml#Page_261)
  prefs: []
  type: TYPE_NORMAL
- en: Eclipse Mosquitto software, [75](c04.xhtml#Page_75)
  prefs: []
  type: TYPE_NORMAL
- en: economics of IoT manufacturing, [6](c01.xhtml#Page_6)
  prefs: []
  type: TYPE_NORMAL
- en: EEPROM flash memory chips, dumping with SPI, [192](c08.xhtml#Page_192)–[196](c08.xhtml#Page_196)
  prefs: []
  type: TYPE_NORMAL
- en: '`eget` command, [256](c10.xhtml#Page_256)'
  prefs: []
  type: TYPE_NORMAL
- en: electronic health record (EHR), *[19](c02.xhtml#Page_19)*
  prefs: []
  type: TYPE_NORMAL
- en: elevation of privilege, *[23](c02.xhtml#Page_23)*
  prefs: []
  type: TYPE_NORMAL
- en: on control server service, [24](c02.xhtml#Page_24)
  prefs: []
  type: TYPE_NORMAL
- en: on drug library, [24](c02.xhtml#Page_24)
  prefs: []
  type: TYPE_NORMAL
- en: on firmware, [26](c02.xhtml#Page_26)
  prefs: []
  type: TYPE_NORMAL
- en: on hardware, [27](c02.xhtml#Page_27)
  prefs: []
  type: TYPE_NORMAL
- en: on operating system, [25](c02.xhtml#Page_25)
  prefs: []
  type: TYPE_NORMAL
- en: on pump service, [28](c02.xhtml#Page_28)
  prefs: []
  type: TYPE_NORMAL
- en: on restrictive user interface, [23](c02.xhtml#Page_23)
  prefs: []
  type: TYPE_NORMAL
- en: smart treadmills, attacking, [394](c15.xhtml#Page_394)
  prefs: []
  type: TYPE_NORMAL
- en: STRIDE threat classification model, [19](c02.xhtml#Page_19)
  prefs: []
  type: TYPE_NORMAL
- en: ELF (Executable and Linkable Format) file, *[183](c07.xhtml#Page_183)*
  prefs: []
  type: TYPE_NORMAL
- en: '`eload` parameter, [255](c10.xhtml#Page_255), [265](c10.xhtml#Page_265)'
  prefs: []
  type: TYPE_NORMAL
- en: emergency stop key, *[398](c15.xhtml#Page_398)*
  prefs: []
  type: TYPE_NORMAL
- en: '*.eml* file, loading in Proxmark3 memory, [265](c10.xhtml#Page_265)'
  prefs: []
  type: TYPE_NORMAL
- en: emulation, firmware, [216](c09.xhtml#Page_216)–[221](c09.xhtml#Page_221)
  prefs: []
  type: TYPE_NORMAL
- en: Enabled Protocols window, Wireshark, [91](c05.xhtml#Page_91)–[92](c05.xhtml#Page_92)
  prefs: []
  type: TYPE_NORMAL
- en: encryption
  prefs: []
  type: TYPE_NORMAL
- en: checking for, [94](c05.xhtml#Page_94)
  prefs: []
  type: TYPE_NORMAL
- en: mobile app filesystem, [339](c14.xhtml#Page_339)–[340](c14.xhtml#Page_340)
  prefs: []
  type: TYPE_NORMAL
- en: testing, [53](c03.xhtml#Page_53)
  prefs: []
  type: TYPE_NORMAL
- en: end-device address (DevAddr), *[324](c13.xhtml#Page_324)*, [326](c13.xhtml#Page_326)
  prefs: []
  type: TYPE_NORMAL
- en: end-device identifier (DevEUI), [325](c13.xhtml#Page_325)
  prefs: []
  type: TYPE_NORMAL
- en: endianness of protocol, [93](c05.xhtml#Page_93)
  prefs: []
  type: TYPE_NORMAL
- en: EPSON’s iPrint application, [363](c14.xhtml#Page_363)
  prefs: []
  type: TYPE_NORMAL
- en: escalating privileges. *See* elevation of privilege
  prefs: []
  type: TYPE_NORMAL
- en: '`eset` parameter, [255](c10.xhtml#Page_255)'
  prefs: []
  type: TYPE_NORMAL
- en: ESP32 development board, [273](c11.xhtml#Page_273), [309](c13.xhtml#Page_309)–[314](c13.xhtml#Page_314)
  prefs: []
  type: TYPE_NORMAL
- en: ESSID, [288](c12.xhtml#Page_288)
  prefs: []
  type: TYPE_NORMAL
- en: '*etc/passwd* file, [213](c09.xhtml#Page_213), [221](c09.xhtml#Page_221)'
  prefs: []
  type: TYPE_NORMAL
- en: '`Ether()` function, [64](c04.xhtml#Page_64)'
  prefs: []
  type: TYPE_NORMAL
- en: eventing layer, UPnP, *[120](c06.xhtml#Page_120)*
  prefs: []
  type: TYPE_NORMAL
- en: EvilDirect attack, *[297](c12.xhtml#Page_297)*–[299](c12.xhtml#Page_299)
  prefs: []
  type: TYPE_NORMAL
- en: Evil Twin attack, *[291](c12.xhtml#Page_291)*–[292](c12.xhtml#Page_292)
  prefs: []
  type: TYPE_NORMAL
- en: exacqVision, [147](c06.xhtml#Page_147)–[152](c06.xhtml#Page_152)
  prefs: []
  type: TYPE_NORMAL
- en: '`Exclude` Nmap service probe directive, [72](c04.xhtml#Page_72)'
  prefs: []
  type: TYPE_NORMAL
- en: Executable and Linkable Format (ELF) file, *[183](c07.xhtml#Page_183)*
  prefs: []
  type: TYPE_NORMAL
- en: executable binary, inspecting for memory protections, [345](c14.xhtml#Page_345)–[346](c14.xhtml#Page_346)
  prefs: []
  type: TYPE_NORMAL
- en: exploitation, protocol or service, [47](c03.xhtml#Page_47)
  prefs: []
  type: TYPE_NORMAL
- en: Exported Activities, in Android apps, [361](c14.xhtml#Page_361)
  prefs: []
  type: TYPE_NORMAL
- en: Extensible Authentication Protocol (EAP) over LAN (EAPOL) handshake, [299](c12.xhtml#Page_299)–*[300](c12.xhtml#Page_300)*
  prefs: []
  type: TYPE_NORMAL
- en: External Entity (XXE) attacks, *[121](c06.xhtml#Page_121)*
  prefs: []
  type: TYPE_NORMAL
- en: EXTEST command, JTAG, [164](c07.xhtml#Page_164)
  prefs: []
  type: TYPE_NORMAL
- en: '**F**'
  prefs: []
  type: TYPE_NORMAL
- en: FACT (Firmware Analysis and Comparison Tool), [406](b01.xhtml#Page_406)
  prefs: []
  type: TYPE_NORMAL
- en: fail-open conditions, *[49](c03.xhtml#Page_49)*
  prefs: []
  type: TYPE_NORMAL
- en: faking cameras on network
  prefs: []
  type: TYPE_NORMAL
- en: analyzing requests and replies in Wireshark, [147](c06.xhtml#Page_147)–[149](c06.xhtml#Page_149)
  prefs: []
  type: TYPE_NORMAL
- en: emulating cameras, [149](c06.xhtml#Page_149)–[152](c06.xhtml#Page_152)
  prefs: []
  type: TYPE_NORMAL
- en: setting up, [147](c06.xhtml#Page_147)
  prefs: []
  type: TYPE_NORMAL
- en: '`fallback` Nmap service probe directive, [72](c04.xhtml#Page_72)'
  prefs: []
  type: TYPE_NORMAL
- en: FBE (file-based encryption), *[339](c14.xhtml#Page_339)*–[340](c14.xhtml#Page_340)
  prefs: []
  type: TYPE_NORMAL
- en: FCC ID online database, [37](c03.xhtml#Page_37)–[38](c03.xhtml#Page_38)
  prefs: []
  type: TYPE_NORMAL
- en: '`fchk` command, [253](c10.xhtml#Page_253)'
  prefs: []
  type: TYPE_NORMAL
- en: FCntDown frame counter, [330](c13.xhtml#Page_330)
  prefs: []
  type: TYPE_NORMAL
- en: FCntUp frame counter, [330](c13.xhtml#Page_330)
  prefs: []
  type: TYPE_NORMAL
- en: FDE (full disk encryption), *[339](c14.xhtml#Page_339)*–[340](c14.xhtml#Page_340)
  prefs: []
  type: TYPE_NORMAL
- en: federal laws affecting IoT research, [12](c01.xhtml#Page_12)–[13](c01.xhtml#Page_13)
  prefs: []
  type: TYPE_NORMAL
- en: Fernandes, E., [368](c14.xhtml#Page_368)
  prefs: []
  type: TYPE_NORMAL
- en: '`fetchButtonTapped` function, [358](c14.xhtml#Page_358)–[359](c14.xhtml#Page_359)'
  prefs: []
  type: TYPE_NORMAL
- en: FFmpeg, [384](c15.xhtml#Page_384)
  prefs: []
  type: TYPE_NORMAL
- en: FHDR (frame header), [324](c13.xhtml#Page_324)
  prefs: []
  type: TYPE_NORMAL
- en: file-based encryption (FBE), *[339](c14.xhtml#Page_339)*–[340](c14.xhtml#Page_340)
  prefs: []
  type: TYPE_NORMAL
- en: File Manager application, treadmill browser, [392](c15.xhtml#Page_392)–[393](c15.xhtml#Page_393)
  prefs: []
  type: TYPE_NORMAL
- en: file structure, iOS, [347](c14.xhtml#Page_347)
  prefs: []
  type: TYPE_NORMAL
- en: filesystem
  prefs: []
  type: TYPE_NORMAL
- en: access controls, testing, [53](c03.xhtml#Page_53)
  prefs: []
  type: TYPE_NORMAL
- en: firmware, [212](c09.xhtml#Page_212)–[216](c09.xhtml#Page_216)
  prefs: []
  type: TYPE_NORMAL
- en: mobile app, [339](c14.xhtml#Page_339)–[340](c14.xhtml#Page_340)
  prefs: []
  type: TYPE_NORMAL
- en: '`find` command, [347](c14.xhtml#Page_347)'
  prefs: []
  type: TYPE_NORMAL
- en: fingerprinting, *[44](c03.xhtml#Page_44)*, [67](c04.xhtml#Page_67)–[71](c04.xhtml#Page_71)
  prefs: []
  type: TYPE_NORMAL
- en: firewalls
  prefs: []
  type: TYPE_NORMAL
- en: disabling in firmware, [222](c09.xhtml#Page_222)
  prefs: []
  type: TYPE_NORMAL
- en: punching holes through, [121](c06.xhtml#Page_121)–[126](c06.xhtml#Page_126)
  prefs: []
  type: TYPE_NORMAL
- en: FIRMADYNE, *[216](c09.xhtml#Page_216)*, [218](c09.xhtml#Page_218)–[221](c09.xhtml#Page_221),
    [227](c09.xhtml#Page_227), [405](b01.xhtml#Page_405)
  prefs: []
  type: TYPE_NORMAL
- en: Firmwalker, [215](c09.xhtml#Page_215)–[216](c09.xhtml#Page_216), [405](b01.xhtml#Page_405)
  prefs: []
  type: TYPE_NORMAL
- en: firmware, *[25](c02.xhtml#Page_25)*. *See also* firmware update mechanisms;
    Wi-Fi modem router hacking
  prefs: []
  type: TYPE_NORMAL
- en: backdooring, [223](c09.xhtml#Page_223)–[228](c09.xhtml#Page_228)
  prefs: []
  type: TYPE_NORMAL
- en: general discussion, [208](c09.xhtml#Page_208)
  prefs: []
  type: TYPE_NORMAL
- en: identifying threats to, [25](c02.xhtml#Page_25)–[26](c02.xhtml#Page_26)
  prefs: []
  type: TYPE_NORMAL
- en: obtaining, [209](c09.xhtml#Page_209)–[211](c09.xhtml#Page_211)
  prefs: []
  type: TYPE_NORMAL
- en: security testing, [42](c03.xhtml#Page_42)
  prefs: []
  type: TYPE_NORMAL
- en: Firmware Analysis and Comparison Tool (FACT), [406](b01.xhtml#Page_406)
  prefs: []
  type: TYPE_NORMAL
- en: firmware-mod-kit, [226](c09.xhtml#Page_226)
  prefs: []
  type: TYPE_NORMAL
- en: firmware update mechanisms, *[228](c09.xhtml#Page_228)*
  prefs: []
  type: TYPE_NORMAL
- en: client code, [229](c09.xhtml#Page_229)–[232](c09.xhtml#Page_232)
  prefs: []
  type: TYPE_NORMAL
- en: compilation and setup, [229](c09.xhtml#Page_229)
  prefs: []
  type: TYPE_NORMAL
- en: general discussion, [228](c09.xhtml#Page_228)
  prefs: []
  type: TYPE_NORMAL
- en: running update service, [232](c09.xhtml#Page_232)–[233](c09.xhtml#Page_233)
  prefs: []
  type: TYPE_NORMAL
- en: vulnerabilities of, [233](c09.xhtml#Page_233)–[235](c09.xhtml#Page_235)
  prefs: []
  type: TYPE_NORMAL
- en: fixed header, MQTT *CONNECT* packet, *[80](c04.xhtml#Page_80)*–[82](c04.xhtml#Page_82)
  prefs: []
  type: TYPE_NORMAL
- en: flags, [355](c14.xhtml#Page_355)
  prefs: []
  type: TYPE_NORMAL
- en: flash memory chips, dumping with SPI, [192](c08.xhtml#Page_192)–[196](c08.xhtml#Page_196)
  prefs: []
  type: TYPE_NORMAL
- en: '`flashrom` Linux utility, [195](c08.xhtml#Page_195)–[196](c08.xhtml#Page_196)'
  prefs: []
  type: TYPE_NORMAL
- en: flooding attacks, [94](c05.xhtml#Page_94)
  prefs: []
  type: TYPE_NORMAL
- en: flow diagrams, [38](c03.xhtml#Page_38)–[39](c03.xhtml#Page_39)
  prefs: []
  type: TYPE_NORMAL
- en: forced browsing, *[50](c03.xhtml#Page_50)*
  prefs: []
  type: TYPE_NORMAL
- en: '`ForceTermination` command, [12](c01.xhtml#Page_12)9'
  prefs: []
  type: TYPE_NORMAL
- en: '`fork()` command, [224](c09.xhtml#Page_224)'
  prefs: []
  type: TYPE_NORMAL
- en: Forshaw, James, [92](c05.xhtml#Page_92), [116](c05.xhtml#Page_116)
  prefs: []
  type: TYPE_NORMAL
- en: Fourier transforms, [47](c03.xhtml#Page_47)
  prefs: []
  type: TYPE_NORMAL
- en: four-way handshake, WPA/WPA2, [299](c12.xhtml#Page_299)–[300](c12.xhtml#Page_300)
  prefs: []
  type: TYPE_NORMAL
- en: FPort, [324](c13.xhtml#Page_324)
  prefs: []
  type: TYPE_NORMAL
- en: frame header (FHDR), [324](c13.xhtml#Page_324)
  prefs: []
  type: TYPE_NORMAL
- en: frameworks, *[8](c01.xhtml#Page_8)*–[10](c01.xhtml#Page_10)
  prefs: []
  type: TYPE_NORMAL
- en: Frida instrumentation framework, [406](b01.xhtml#Page_406)
  prefs: []
  type: TYPE_NORMAL
- en: jailbreak detection, avoiding, [357](c14.xhtml#Page_357)–[358](c14.xhtml#Page_358)
  prefs: []
  type: TYPE_NORMAL
- en: root detection, avoiding, [369](c14.xhtml#Page_369)–[370](c14.xhtml#Page_370)
  prefs: []
  type: TYPE_NORMAL
- en: treadmill software and physical buttons, disabling, [398](c15.xhtml#Page_398)–[399](c15.xhtml#Page_399)
  prefs: []
  type: TYPE_NORMAL
- en: FRMPayload, [324](c13.xhtml#Page_324), [327](c13.xhtml#Page_327)
  prefs: []
  type: TYPE_NORMAL
- en: '`fs` command, [355](c14.xhtml#Page_355)'
  prefs: []
  type: TYPE_NORMAL
- en: '`fswatch` application, [347](c14.xhtml#Page_347)–[348](c14.xhtml#Page_348)'
  prefs: []
  type: TYPE_NORMAL
- en: FTDI FT[232](c09.xhtml#Page_232)RL, [406](b01.xhtml#Page_406)
  prefs: []
  type: TYPE_NORMAL
- en: full disk encryption (FDE), *[339](c14.xhtml#Page_339)*–[340](c14.xhtml#Page_340)
  prefs: []
  type: TYPE_NORMAL
- en: fuse, *[32](c02.xhtml#Page_32)*
  prefs: []
  type: TYPE_NORMAL
- en: '`fuzz()`function, [266](c10.xhtml#Page_266)'
  prefs: []
  type: TYPE_NORMAL
- en: fuzzing
  prefs: []
  type: TYPE_NORMAL
- en: overview, [94](c05.xhtml#Page_94)
  prefs: []
  type: TYPE_NORMAL
- en: RFID, using custom scripting, [264](c10.xhtml#Page_264)–[268](c10.xhtml#Page_268)
  prefs: []
  type: TYPE_NORMAL
- en: '**G**'
  prefs: []
  type: TYPE_NORMAL
- en: GAP (Generic Access Profile), *[271](c11.xhtml#Page_271)*–[272](c11.xhtml#Page_272)
  prefs: []
  type: TYPE_NORMAL
- en: Garcia, Daniel, [118](c06.xhtml#Page_118), [128](c06.xhtml#Page_128)
  prefs: []
  type: TYPE_NORMAL
- en: Garg, Praerit, [18](c02.xhtml#Page_18)
  prefs: []
  type: TYPE_NORMAL
- en: gateways, LoRaWAN, *[309](c13.xhtml#Page_309)*
  prefs: []
  type: TYPE_NORMAL
- en: GATT (Generic Attribute Profile), *[272](c11.xhtml#Page_272)*
  prefs: []
  type: TYPE_NORMAL
- en: GATTTool, *[275](c11.xhtml#Page_275)*, [406](b01.xhtml#Page_406)
  prefs: []
  type: TYPE_NORMAL
- en: discovering devices and listing characteristics, [275](c11.xhtml#Page_275)–[276](c11.xhtml#Page_276)
  prefs: []
  type: TYPE_NORMAL
- en: hacking BLE, [279](c11.xhtml#Page_279)–[285](c11.xhtml#Page_285)
  prefs: []
  type: TYPE_NORMAL
- en: reading and writing characteristics, [278](c11.xhtml#Page_278)
  prefs: []
  type: TYPE_NORMAL
- en: GDB, *[172](c07.xhtml#Page_172)*, [406](b01.xhtml#Page_406)
  prefs: []
  type: TYPE_NORMAL
- en: debugging with, [183](c07.xhtml#Page_183)–[188](c07.xhtml#Page_188)
  prefs: []
  type: TYPE_NORMAL
- en: installing, [172](c07.xhtml#Page_172)
  prefs: []
  type: TYPE_NORMAL
- en: '`gdb-multiarch` command, [183](c07.xhtml#Page_183)'
  prefs: []
  type: TYPE_NORMAL
- en: Geiger, Harley, [12](c01.xhtml#Page_12)–[13](c01.xhtml#Page_13)
  prefs: []
  type: TYPE_NORMAL
- en: Generic Access Profile (GAP), *[271](c11.xhtml#Page_271)*–[272](c11.xhtml#Page_272)
  prefs: []
  type: TYPE_NORMAL
- en: Generic Attribute Profile (GATT), *[272](c11.xhtml#Page_272)*
  prefs: []
  type: TYPE_NORMAL
- en: Generic Attribute Profile Tool (GATTTool). *See* GATTTool
  prefs: []
  type: TYPE_NORMAL
- en: '`GetAutoDisconnectTime` command, [12](c01.xhtml#Page_12)9'
  prefs: []
  type: TYPE_NORMAL
- en: '`GetConnectionTypeInfo` command, [128](c06.xhtml#Page_128)'
  prefs: []
  type: TYPE_NORMAL
- en: '`GetExternalIPAddress` command, [13](c01.xhtml#Page_13)0'
  prefs: []
  type: TYPE_NORMAL
- en: '`GetGenericPortMappingEntry` command, [12](c01.xhtml#Page_12)9'
  prefs: []
  type: TYPE_NORMAL
- en: '`GetIdleDisconnectTime` command, [12](c01.xhtml#Page_12)9'
  prefs: []
  type: TYPE_NORMAL
- en: '`GetLinkLayerMaxBitRates` command, [12](c01.xhtml#Page_12)9'
  prefs: []
  type: TYPE_NORMAL
- en: '`GetNATRSIPStatus` command, [12](c01.xhtml#Page_12)9'
  prefs: []
  type: TYPE_NORMAL
- en: '`GetPassword` command, [12](c01.xhtml#Page_12)9'
  prefs: []
  type: TYPE_NORMAL
- en: '`GetPPPAuthenticationProtocol` command, [12](c01.xhtml#Page_12)9'
  prefs: []
  type: TYPE_NORMAL
- en: '`GetPPPCompressionProtocol` command, [12](c01.xhtml#Page_12)9'
  prefs: []
  type: TYPE_NORMAL
- en: '`GetPPPEncryptionProtocol` command, [12](c01.xhtml#Page_12)9'
  prefs: []
  type: TYPE_NORMAL
- en: '`GetSpecificPortMappingEntry` command, [12](c01.xhtml#Page_12)9'
  prefs: []
  type: TYPE_NORMAL
- en: '`GetStatusInfo` command, [12](c01.xhtml#Page_12)9'
  prefs: []
  type: TYPE_NORMAL
- en: '`GetUserName` command, [12](c01.xhtml#Page_12)9'
  prefs: []
  type: TYPE_NORMAL
- en: '`GetWarnDisconnectDelay` command, [12](c01.xhtml#Page_12)9'
  prefs: []
  type: TYPE_NORMAL
- en: Ghidra, [185](c07.xhtml#Page_185), [406](b01.xhtml#Page_406)
  prefs: []
  type: TYPE_NORMAL
- en: '`git` command, [226](c09.xhtml#Page_226)–[227](c09.xhtml#Page_227)'
  prefs: []
  type: TYPE_NORMAL
- en: glitching attacks, *[42](c03.xhtml#Page_42)*
  prefs: []
  type: TYPE_NORMAL
- en: GND (ground line), [197](c08.xhtml#Page_197), [199](c08.xhtml#Page_199)
  prefs: []
  type: TYPE_NORMAL
- en: GND (Ground) port, UART, [159](c07.xhtml#Page_159), [161](c07.xhtml#Page_161)–[162](c07.xhtml#Page_162),
    [178](c07.xhtml#Page_178)
  prefs: []
  type: TYPE_NORMAL
- en: GNUcitizen, [118](c06.xhtml#Page_118)
  prefs: []
  type: TYPE_NORMAL
- en: GNU Debugger (GDB), *[172](c07.xhtml#Page_172)*
  prefs: []
  type: TYPE_NORMAL
- en: debugging with, [183](c07.xhtml#Page_183)–[188](c07.xhtml#Page_188)
  prefs: []
  type: TYPE_NORMAL
- en: installing, [172](c07.xhtml#Page_172)
  prefs: []
  type: TYPE_NORMAL
- en: Goldberg, Dave, [400](c15.xhtml#Page_400)
  prefs: []
  type: TYPE_NORMAL
- en: Goode, Lauren, [4](c01.xhtml#Page_4)
  prefs: []
  type: TYPE_NORMAL
- en: Google Dorks, [209](c09.xhtml#Page_209)
  prefs: []
  type: TYPE_NORMAL
- en: Ground (GND) port, UART, [159](c07.xhtml#Page_159), [161](c07.xhtml#Page_161)–[162](c07.xhtml#Page_162),
    [178](c07.xhtml#Page_178)
  prefs: []
  type: TYPE_NORMAL
- en: ground line (GND), [197](c08.xhtml#Page_197), [199](c08.xhtml#Page_199)
  prefs: []
  type: TYPE_NORMAL
- en: group owner, *[295](c12.xhtml#Page_295)*
  prefs: []
  type: TYPE_NORMAL
- en: Group Temporal Key (GTK), *[300](c12.xhtml#Page_300)*
  prefs: []
  type: TYPE_NORMAL
- en: guidance documents, *[8](c01.xhtml#Page_8)*–[10](c01.xhtml#Page_10)
  prefs: []
  type: TYPE_NORMAL
- en: '**H**'
  prefs: []
  type: TYPE_NORMAL
- en: HackRF One, [407](b01.xhtml#Page_407)
  prefs: []
  type: TYPE_NORMAL
- en: HAL (Hardware Abstraction Layer), *[396](c15.xhtml#Page_396)*
  prefs: []
  type: TYPE_NORMAL
- en: '`halt` command, [182](c07.xhtml#Page_182)'
  prefs: []
  type: TYPE_NORMAL
- en: hardcoded credentials, [233](c09.xhtml#Page_233)–[234](c09.xhtml#Page_234)
  prefs: []
  type: TYPE_NORMAL
- en: hardware
  prefs: []
  type: TYPE_NORMAL
- en: BLE, [273](c11.xhtml#Page_273)
  prefs: []
  type: TYPE_NORMAL
- en: identifying threats, [26](c02.xhtml#Page_26)–[27](c02.xhtml#Page_27)
  prefs: []
  type: TYPE_NORMAL
- en: security testing, [40](c03.xhtml#Page_40)–[43](c03.xhtml#Page_43)
  prefs: []
  type: TYPE_NORMAL
- en: smart treadmill design, [394](c15.xhtml#Page_394)–[396](c15.xhtml#Page_396)
  prefs: []
  type: TYPE_NORMAL
- en: for Wi-Fi security assessments, [288](c12.xhtml#Page_288)
  prefs: []
  type: TYPE_NORMAL
- en: Hardware Abstraction Layer (HAL), *[396](c15.xhtml#Page_396)*
  prefs: []
  type: TYPE_NORMAL
- en: Hardware Abstraction Layer APK, [396](c15.xhtml#Page_396)
  prefs: []
  type: TYPE_NORMAL
- en: hardware folder, Arduino IDE, [170](c07.xhtml#Page_170)–[171](c07.xhtml#Page_171)
  prefs: []
  type: TYPE_NORMAL
- en: hardware integrity attacks, *[32](c02.xhtml#Page_32)*
  prefs: []
  type: TYPE_NORMAL
- en: Hashcat, [213](c09.xhtml#Page_213)–[214](c09.xhtml#Page_214), [302](c12.xhtml#Page_302),
    [304](c12.xhtml#Page_304), [407](b01.xhtml#Page_407)
  prefs: []
  type: TYPE_NORMAL
- en: hashid, [213](c09.xhtml#Page_213)–[214](c09.xhtml#Page_214)
  prefs: []
  type: TYPE_NORMAL
- en: hashing algorithms, insecure, [234](c09.xhtml#Page_234)
  prefs: []
  type: TYPE_NORMAL
- en: Hciconfig, *[274](c11.xhtml#Page_274)*
  prefs: []
  type: TYPE_NORMAL
- en: Hcxdumptool, [302](c12.xhtml#Page_302)–[303](c12.xhtml#Page_303), [407](b01.xhtml#Page_407)
  prefs: []
  type: TYPE_NORMAL
- en: '`hcxpcaptool` command, [303](c12.xhtml#Page_303)'
  prefs: []
  type: TYPE_NORMAL
- en: Hcxtools, [302](c12.xhtml#Page_302), [407](b01.xhtml#Page_407)
  prefs: []
  type: TYPE_NORMAL
- en: Heffner, Craig, [163](c07.xhtml#Page_163)
  prefs: []
  type: TYPE_NORMAL
- en: Heltec LoRa [32](c02.xhtml#Page_32) development board, *[309](c13.xhtml#Page_309)*
  prefs: []
  type: TYPE_NORMAL
- en: overview, [309](c13.xhtml#Page_309), [407](b01.xhtml#Page_407)
  prefs: []
  type: TYPE_NORMAL
- en: programming as LoRa sender, [310](c13.xhtml#Page_310)–[313](c13.xhtml#Page_313)
  prefs: []
  type: TYPE_NORMAL
- en: setting up, [309](c13.xhtml#Page_309)–[310](c13.xhtml#Page_310)
  prefs: []
  type: TYPE_NORMAL
- en: testing LoRa sender, [310](c13.xhtml#Page_310)–[314](c13.xhtml#Page_314)
  prefs: []
  type: TYPE_NORMAL
- en: '`hf [14](c01.xhtml#Page_14)a raw` command, [258](c10.xhtml#Page_258)–[259](c10.xhtml#Page_259)'
  prefs: []
  type: TYPE_NORMAL
- en: hf-mf-B46F6F79-data.bin file, [254](c10.xhtml#Page_254)
  prefs: []
  type: TYPE_NORMAL
- en: '`hf mf` command, [251](c10.xhtml#Page_251)'
  prefs: []
  type: TYPE_NORMAL
- en: '`hf mf ecfill` command, [374](c15.xhtml#Page_374)'
  prefs: []
  type: TYPE_NORMAL
- en: '`hf mf mifare` command, [373](c15.xhtml#Page_373)–[374](c15.xhtml#Page_374)'
  prefs: []
  type: TYPE_NORMAL
- en: '`hf mf nested` command, [374](c15.xhtml#Page_374)'
  prefs: []
  type: TYPE_NORMAL
- en: '`hf mf rdsc` command, [253](c10.xhtml#Page_253)'
  prefs: []
  type: TYPE_NORMAL
- en: '`hf mf sim` command, [262](c10.xhtml#Page_262)–[263](c10.xhtml#Page_263), [375](c15.xhtml#Page_375)'
  prefs: []
  type: TYPE_NORMAL
- en: '`hf` parameter, [248](c10.xhtml#Page_248)'
  prefs: []
  type: TYPE_NORMAL
- en: '`hf search` command, [258](c10.xhtml#Page_258), [372](c15.xhtml#Page_372)–[373](c15.xhtml#Page_373)'
  prefs: []
  type: TYPE_NORMAL
- en: Hickory Smart app, [351](c14.xhtml#Page_351)
  prefs: []
  type: TYPE_NORMAL
- en: hidden content, *[48](c03.xhtml#Page_48)*
  prefs: []
  type: TYPE_NORMAL
- en: hidden Wi-Fi networks, *[288](c12.xhtml#Page_288)*
  prefs: []
  type: TYPE_NORMAL
- en: HID Global ProxCard, [244](c10.xhtml#Page_244), [246](c10.xhtml#Page_246)
  prefs: []
  type: TYPE_NORMAL
- en: '`hid` parameter, [249](c10.xhtml#Page_249)'
  prefs: []
  type: TYPE_NORMAL
- en: high-frequency RFID
  prefs: []
  type: TYPE_NORMAL
- en: antennas for, [243](c10.xhtml#Page_243)
  prefs: []
  type: TYPE_NORMAL
- en: cloning tags, [250](c10.xhtml#Page_250)–[254](c10.xhtml#Page_254)
  prefs: []
  type: TYPE_NORMAL
- en: general discussion, [245](c10.xhtml#Page_245)
  prefs: []
  type: TYPE_NORMAL
- en: identifying with Proxmark3, [248](c10.xhtml#Page_248)–[249](c10.xhtml#Page_249)
  prefs: []
  type: TYPE_NORMAL
- en: HiLetgo USB logic analyzer, [176](c07.xhtml#Page_176)–[177](c07.xhtml#Page_177)
  prefs: []
  type: TYPE_NORMAL
- en: Hippocratic Oath for Connected Medical Devices, [9](c01.xhtml#Page_9)
  prefs: []
  type: TYPE_NORMAL
- en: HMAC-MD5, [234](c09.xhtml#Page_234)
  prefs: []
  type: TYPE_NORMAL
- en: Homebrew package, [347](c14.xhtml#Page_347)–[348](c14.xhtml#Page_348)
  prefs: []
  type: TYPE_NORMAL
- en: host configuration review, *[50](c03.xhtml#Page_50)*–[54](c03.xhtml#Page_54)
  prefs: []
  type: TYPE_NORMAL
- en: host discovery, *[43](c03.xhtml#Page_43)*
  prefs: []
  type: TYPE_NORMAL
- en: HTTP caches, [350](c14.xhtml#Page_350)
  prefs: []
  type: TYPE_NORMAL
- en: Huawei HiLink app, [353](c14.xhtml#Page_353)
  prefs: []
  type: TYPE_NORMAL
- en: Hydrabus, [407](b01.xhtml#Page_407)
  prefs: []
  type: TYPE_NORMAL
- en: '**I**'
  prefs: []
  type: TYPE_NORMAL
- en: I²C. *See* Inter-Integrated Circuit (I²C)
  prefs: []
  type: TYPE_NORMAL
- en: I Am The Cavalry framework, [5](c01.xhtml#Page_5)–[6](c01.xhtml#Page_6), [9](c01.xhtml#Page_9)
  prefs: []
  type: TYPE_NORMAL
- en: IDA Pro, [408](b01.xhtml#Page_408)
  prefs: []
  type: TYPE_NORMAL
- en: IDE (Integrated Development Environment), Arduino. *See* Arduino Integrated
    Development Environment (IDE)
  prefs: []
  type: TYPE_NORMAL
- en: identification data, in RFID tags, *[243](c10.xhtml#Page_243)*
  prefs: []
  type: TYPE_NORMAL
- en: idle state, UART, [158](c07.xhtml#Page_158)
  prefs: []
  type: TYPE_NORMAL
- en: IDOR (Insecure Direct Object References), *[54](c03.xhtml#Page_54)*
  prefs: []
  type: TYPE_NORMAL
- en: IGD (Internet Gateway Device) protocol. *See* Internet Gateway Device (IGD)
    protocol
  prefs: []
  type: TYPE_NORMAL
- en: iGoat mobile app
  prefs: []
  type: TYPE_NORMAL
- en: binary reversing, [355](c14.xhtml#Page_355)–[356](c14.xhtml#Page_356)
  prefs: []
  type: TYPE_NORMAL
- en: dynamic analysis, [347](c14.xhtml#Page_347)–[353](c14.xhtml#Page_353)
  prefs: []
  type: TYPE_NORMAL
- en: injection attacks, [353](c14.xhtml#Page_353)–[354](c14.xhtml#Page_354)
  prefs: []
  type: TYPE_NORMAL
- en: IPAs, extracting and re-signing, [343](c14.xhtml#Page_343)–[344](c14.xhtml#Page_344)
  prefs: []
  type: TYPE_NORMAL
- en: jailbreak detection, avoiding, [357](c14.xhtml#Page_357)–[360](c14.xhtml#Page_360)
  prefs: []
  type: TYPE_NORMAL
- en: keychain storage, [354](c14.xhtml#Page_354)
  prefs: []
  type: TYPE_NORMAL
- en: network traffic, intercepting and examining, [356](c14.xhtml#Page_356)–[357](c14.xhtml#Page_357)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [341](c14.xhtml#Page_341)–[342](c14.xhtml#Page_342)
  prefs: []
  type: TYPE_NORMAL
- en: static analysis, [344](c14.xhtml#Page_344)–[346](c14.xhtml#Page_346)
  prefs: []
  type: TYPE_NORMAL
- en: test environment, preparing, [342](c14.xhtml#Page_342)–[343](c14.xhtml#Page_343)
  prefs: []
  type: TYPE_NORMAL
- en: '`iI` command, [355](c14.xhtml#Page_355)'
  prefs: []
  type: TYPE_NORMAL
- en: implicit header mode, [322](c13.xhtml#Page_322)
  prefs: []
  type: TYPE_NORMAL
- en: incline of treadmills, remotely controlling, [394](c15.xhtml#Page_394)–[398](c15.xhtml#Page_398)
  prefs: []
  type: TYPE_NORMAL
- en: '`info functions` command, GDB, [183](c07.xhtml#Page_183)–[184](c07.xhtml#Page_184)'
  prefs: []
  type: TYPE_NORMAL
- en: '`info registers` command, GDB, [185](c07.xhtml#Page_185)'
  prefs: []
  type: TYPE_NORMAL
- en: information disclosure, *[22](c02.xhtml#Page_22)*
  prefs: []
  type: TYPE_NORMAL
- en: on control server service, [24](c02.xhtml#Page_24)
  prefs: []
  type: TYPE_NORMAL
- en: on drug library, [24](c02.xhtml#Page_24)
  prefs: []
  type: TYPE_NORMAL
- en: on firmware, [26](c02.xhtml#Page_26)
  prefs: []
  type: TYPE_NORMAL
- en: on hardware, [27](c02.xhtml#Page_27)
  prefs: []
  type: TYPE_NORMAL
- en: on operating system, [25](c02.xhtml#Page_25)
  prefs: []
  type: TYPE_NORMAL
- en: on pump service, [28](c02.xhtml#Page_28)
  prefs: []
  type: TYPE_NORMAL
- en: on restrictive user interface, [22](c02.xhtml#Page_22)
  prefs: []
  type: TYPE_NORMAL
- en: STRIDE threat classification model, [19](c02.xhtml#Page_19)
  prefs: []
  type: TYPE_NORMAL
- en: information-gathering phase, network protocol inspections, [90](c05.xhtml#Page_90)–[91](c05.xhtml#Page_91)
  prefs: []
  type: TYPE_NORMAL
- en: Information Object Definitions (IODs), *[110](c05.xhtml#Page_110)*–[111](c05.xhtml#Page_111)
  prefs: []
  type: TYPE_NORMAL
- en: information property list file, *[344](c14.xhtml#Page_344)*–[345](c14.xhtml#Page_345)
  prefs: []
  type: TYPE_NORMAL
- en: '`init` command, [182](c07.xhtml#Page_182)'
  prefs: []
  type: TYPE_NORMAL
- en: injection attacks
  prefs: []
  type: TYPE_NORMAL
- en: OWASP iGoat app, [353](c14.xhtml#Page_353)–[354](c14.xhtml#Page_354)
  prefs: []
  type: TYPE_NORMAL
- en: SQL, [24](c02.xhtml#Page_24), [120](c06.xhtml#Page_120), [354](c14.xhtml#Page_354)
  prefs: []
  type: TYPE_NORMAL
- en: XSS, [353](c14.xhtml#Page_353)–[354](c14.xhtml#Page_354)
  prefs: []
  type: TYPE_NORMAL
- en: injuries due to treadmill attacks, [400](c15.xhtml#Page_400)
  prefs: []
  type: TYPE_NORMAL
- en: input validation, [50](c03.xhtml#Page_50)
  prefs: []
  type: TYPE_NORMAL
- en: InsecureBankV2 app
  prefs: []
  type: TYPE_NORMAL
- en: binary reversing, [362](c14.xhtml#Page_362)–[363](c14.xhtml#Page_363)
  prefs: []
  type: TYPE_NORMAL
- en: dynamic analysis, [363](c14.xhtml#Page_363)–[367](c14.xhtml#Page_367)
  prefs: []
  type: TYPE_NORMAL
- en: extracting APK, [361](c14.xhtml#Page_361)
  prefs: []
  type: TYPE_NORMAL
- en: intercepting and examining network traffic, [367](c14.xhtml#Page_367)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [360](c14.xhtml#Page_360)
  prefs: []
  type: TYPE_NORMAL
- en: preparing test environment, [360](c14.xhtml#Page_360)–[361](c14.xhtml#Page_361)
  prefs: []
  type: TYPE_NORMAL
- en: side-channel leaks, [367](c14.xhtml#Page_367)–[368](c14.xhtml#Page_368)
  prefs: []
  type: TYPE_NORMAL
- en: static analysis, [361](c14.xhtml#Page_361)–[362](c14.xhtml#Page_362)
  prefs: []
  type: TYPE_NORMAL
- en: Insecure Direct Object References (IDOR), *[54](c03.xhtml#Page_54)*
  prefs: []
  type: TYPE_NORMAL
- en: insecure hashing algorithms, [234](c09.xhtml#Page_234)
  prefs: []
  type: TYPE_NORMAL
- en: insecurity canaries, [14](c01.xhtml#Page_14)
  prefs: []
  type: TYPE_NORMAL
- en: insulin pumps, [11](c01.xhtml#Page_11)–[12](c01.xhtml#Page_12), [16](c01.xhtml#Page_16)
  prefs: []
  type: TYPE_NORMAL
- en: Inter-Integrated Circuit (I²C), *[189](c08.xhtml#Page_189)*
  prefs: []
  type: TYPE_NORMAL
- en: Bus Pirate, attacking with, [202](c08.xhtml#Page_202)–[206](c08.xhtml#Page_206)
  prefs: []
  type: TYPE_NORMAL
- en: controller-peripheral bus architecture, setting up, [198](c08.xhtml#Page_198)–[202](c08.xhtml#Page_202)
  prefs: []
  type: TYPE_NORMAL
- en: general discussion, [197](c08.xhtml#Page_197)–[198](c08.xhtml#Page_198)
  prefs: []
  type: TYPE_NORMAL
- en: hardware for communicating with, [190](c08.xhtml#Page_190)–[191](c08.xhtml#Page_191)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [189](c08.xhtml#Page_189)
  prefs: []
  type: TYPE_NORMAL
- en: Internet Gateway Device (IGD) protocol, *[121](c06.xhtml#Page_121)*
  prefs: []
  type: TYPE_NORMAL
- en: abusing UPnP through WAN interfaces, [126](c06.xhtml#Page_126)–[131](c06.xhtml#Page_131)
  prefs: []
  type: TYPE_NORMAL
- en: punching holes through firewalls, [121](c06.xhtml#Page_121)–[122](c06.xhtml#Page_122),
    [124](c06.xhtml#Page_124)–[125](c06.xhtml#Page_125)
  prefs: []
  type: TYPE_NORMAL
- en: Internet of Things (IoT), *[3](c01.xhtml#Page_3)–[4](c01.xhtml#Page_4)*
  prefs: []
  type: TYPE_NORMAL
- en: IODs (Information Object Definitions), *[110](c05.xhtml#Page_110)*–[111](c05.xhtml#Page_111)
  prefs: []
  type: TYPE_NORMAL
- en: iOS apps
  prefs: []
  type: TYPE_NORMAL
- en: binary reversing, [355](c14.xhtml#Page_355)–[356](c14.xhtml#Page_356)
  prefs: []
  type: TYPE_NORMAL
- en: dynamic analysis, [347](c14.xhtml#Page_347)–[353](c14.xhtml#Page_353)
  prefs: []
  type: TYPE_NORMAL
- en: injection attacks, [353](c14.xhtml#Page_353)–[354](c14.xhtml#Page_354)
  prefs: []
  type: TYPE_NORMAL
- en: IPAs, extracting and re-signing, [343](c14.xhtml#Page_343)–[344](c14.xhtml#Page_344)
  prefs: []
  type: TYPE_NORMAL
- en: jailbreak detection, avoiding, [357](c14.xhtml#Page_357)–[360](c14.xhtml#Page_360)
  prefs: []
  type: TYPE_NORMAL
- en: keychain storage, [354](c14.xhtml#Page_354)
  prefs: []
  type: TYPE_NORMAL
- en: network traffic, intercepting and examining, [356](c14.xhtml#Page_356)–[357](c14.xhtml#Page_357)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [341](c14.xhtml#Page_341)–[342](c14.xhtml#Page_342)
  prefs: []
  type: TYPE_NORMAL
- en: security controls, [339](c14.xhtml#Page_339)–[341](c14.xhtml#Page_341)
  prefs: []
  type: TYPE_NORMAL
- en: static analysis, [344](c14.xhtml#Page_344)–[346](c14.xhtml#Page_346)
  prefs: []
  type: TYPE_NORMAL
- en: test environment, preparing, [342](c14.xhtml#Page_342)–[343](c14.xhtml#Page_343)
  prefs: []
  type: TYPE_NORMAL
- en: threats to, [337](c14.xhtml#Page_337)–[338](c14.xhtml#Page_338)
  prefs: []
  type: TYPE_NORMAL
- en: iOS App Store Package (IPA), *[343](c14.xhtml#Page_343)*–[344](c14.xhtml#Page_344)
  prefs: []
  type: TYPE_NORMAL
- en: IoT (Internet of Things), *[3](c01.xhtml#Page_3)–[4](c01.xhtml#Page_4)*
  prefs: []
  type: TYPE_NORMAL
- en: IoT devices, identifying on networks
  prefs: []
  type: TYPE_NORMAL
- en: fingerprinting services, [67](c04.xhtml#Page_67)–[71](c04.xhtml#Page_71)
  prefs: []
  type: TYPE_NORMAL
- en: Nmap service probes, writing new, [71](c04.xhtml#Page_71)–[73](c04.xhtml#Page_73)
  prefs: []
  type: TYPE_NORMAL
- en: IoT security
  prefs: []
  type: TYPE_NORMAL
- en: expert perspectives, [12](c01.xhtml#Page_12)–[16](c01.xhtml#Page_16)
  prefs: []
  type: TYPE_NORMAL
- en: frameworks, standards, and guides, [8](c01.xhtml#Page_8)–[10](c01.xhtml#Page_10)
  prefs: []
  type: TYPE_NORMAL
- en: hacking techniques, [6](c01.xhtml#Page_6)–[8](c01.xhtml#Page_8)
  prefs: []
  type: TYPE_NORMAL
- en: importance of, [4](c01.xhtml#Page_4)–[5](c01.xhtml#Page_5)
  prefs: []
  type: TYPE_NORMAL
- en: insulin pump security issue, [11](c01.xhtml#Page_11)–[12](c01.xhtml#Page_12)
  prefs: []
  type: TYPE_NORMAL
- en: traditional security versus, [5](c01.xhtml#Page_5)–[6](c01.xhtml#Page_6)
  prefs: []
  type: TYPE_NORMAL
- en: IPA (iOS App Store Package), *[343](c14.xhtml#Page_343)*–[344](c14.xhtml#Page_344)
  prefs: []
  type: TYPE_NORMAL
- en: IP cameras
  prefs: []
  type: TYPE_NORMAL
- en: faking on network
  prefs: []
  type: TYPE_NORMAL
- en: analyzing requests and replies in Wireshark, [147](c06.xhtml#Page_147)–[149](c06.xhtml#Page_149)
  prefs: []
  type: TYPE_NORMAL
- en: emulating cameras, [149](c06.xhtml#Page_149)–[152](c06.xhtml#Page_152)
  prefs: []
  type: TYPE_NORMAL
- en: setting up, [147](c06.xhtml#Page_147)
  prefs: []
  type: TYPE_NORMAL
- en: Nmap service probes, writing, [71](c04.xhtml#Page_71)–[73](c04.xhtml#Page_73)
  prefs: []
  type: TYPE_NORMAL
- en: playing back stream from
  prefs: []
  type: TYPE_NORMAL
- en: analyzing network traffic, [380](c15.xhtml#Page_380)–[382](c15.xhtml#Page_382)
  prefs: []
  type: TYPE_NORMAL
- en: extracting video stream, [382](c15.xhtml#Page_382)–[385](c15.xhtml#Page_385)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [379](c15.xhtml#Page_379)–[380](c15.xhtml#Page_380)
  prefs: []
  type: TYPE_NORMAL
- en: streaming protocols, [380](c15.xhtml#Page_380)
  prefs: []
  type: TYPE_NORMAL
- en: service fingerprinting, [67](c04.xhtml#Page_67)–[71](c04.xhtml#Page_71)
  prefs: []
  type: TYPE_NORMAL
- en: WS-Discovery attacks, [152](c06.xhtml#Page_152)–[153](c06.xhtml#Page_153)
  prefs: []
  type: TYPE_NORMAL
- en: '`IP()` function, [64](c04.xhtml#Page_64)'
  prefs: []
  type: TYPE_NORMAL
- en: ippserver, *[136](c06.xhtml#Page_136)*–[137](c06.xhtml#Page_137), [140](c06.xhtml#Page_140),
    [145](c06.xhtml#Page_145)
  prefs: []
  type: TYPE_NORMAL
- en: '`iptables` utility, [222](c09.xhtml#Page_222)'
  prefs: []
  type: TYPE_NORMAL
- en: iRemocon- WiFi app, [367](c14.xhtml#Page_367)
  prefs: []
  type: TYPE_NORMAL
- en: '`iwconfig` command, [299](c12.xhtml#Page_299)'
  prefs: []
  type: TYPE_NORMAL
- en: '**J**'
  prefs: []
  type: TYPE_NORMAL
- en: JADX, [361](c14.xhtml#Page_361), [408](b01.xhtml#Page_408)
  prefs: []
  type: TYPE_NORMAL
- en: jailbreak detection, avoiding, [357](c14.xhtml#Page_357)–[358](c14.xhtml#Page_358)
  prefs: []
  type: TYPE_NORMAL
- en: jamming wireless alarms, [375](c15.xhtml#Page_375)–[379](c15.xhtml#Page_379)
  prefs: []
  type: TYPE_NORMAL
- en: Jarsigner, [369](c14.xhtml#Page_369)
  prefs: []
  type: TYPE_NORMAL
- en: John the Ripper, [213](c09.xhtml#Page_213)–[214](c09.xhtml#Page_214), [408](b01.xhtml#Page_408)
  prefs: []
  type: TYPE_NORMAL
- en: Join-Accept, [326](c13.xhtml#Page_326)
  prefs: []
  type: TYPE_NORMAL
- en: joining LoRaWAN networks, [324](c13.xhtml#Page_324)–[327](c13.xhtml#Page_327)
  prefs: []
  type: TYPE_NORMAL
- en: Join-Request, [325](c13.xhtml#Page_325)–[326](c13.xhtml#Page_326)
  prefs: []
  type: TYPE_NORMAL
- en: Joint Test Action Group (JTAG), *[157](c07.xhtml#Page_157)*
  prefs: []
  type: TYPE_NORMAL
- en: boundary scan commands, [164](c07.xhtml#Page_164)
  prefs: []
  type: TYPE_NORMAL
- en: hardware tools for communicating with, [165](c07.xhtml#Page_165)
  prefs: []
  type: TYPE_NORMAL
- en: identifying pins, [166](c07.xhtml#Page_166)–[167](c07.xhtml#Page_167)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [157](c07.xhtml#Page_157)–[158](c07.xhtml#Page_158), [164](c07.xhtml#Page_164)
  prefs: []
  type: TYPE_NORMAL
- en: Test Access Port (TAP), [164](c07.xhtml#Page_164)–[165](c07.xhtml#Page_165)
  prefs: []
  type: TYPE_NORMAL
- en: JTAGenum utility, [167](c07.xhtml#Page_167)
  prefs: []
  type: TYPE_NORMAL
- en: JTAGulator, *[166](c07.xhtml#Page_166)*, [408](b01.xhtml#Page_408)
  prefs: []
  type: TYPE_NORMAL
- en: jumper pins, *[175](c07.xhtml#Page_175)*
  prefs: []
  type: TYPE_NORMAL
- en: jumper wires, [169](c07.xhtml#Page_169)
  prefs: []
  type: TYPE_NORMAL
- en: Junior, M., [366](c14.xhtml#Page_366)
  prefs: []
  type: TYPE_NORMAL
- en: '**K**'
  prefs: []
  type: TYPE_NORMAL
- en: KARMA attack, *[292](c12.xhtml#Page_292)*
  prefs: []
  type: TYPE_NORMAL
- en: keychain service API, *[354](c14.xhtml#Page_354)*
  prefs: []
  type: TYPE_NORMAL
- en: keychain storage, iGoat app, [354](c14.xhtml#Page_354)
  prefs: []
  type: TYPE_NORMAL
- en: key generation and management, LoRaWAN, [330](c13.xhtml#Page_330)
  prefs: []
  type: TYPE_NORMAL
- en: keylock systems, cloning RFID tag of, [372](c15.xhtml#Page_372)–[375](c15.xhtml#Page_375)
  prefs: []
  type: TYPE_NORMAL
- en: Keytool, [369](c14.xhtml#Page_369)
  prefs: []
  type: TYPE_NORMAL
- en: kiosk mode, *[40](c03.xhtml#Page_40)*–[41](c03.xhtml#Page_41)
  prefs: []
  type: TYPE_NORMAL
- en: Known Beacons attack, *[292](c12.xhtml#Page_292)*–[295](c12.xhtml#Page_295)
  prefs: []
  type: TYPE_NORMAL
- en: Kohnfelder, Loren, [18](c02.xhtml#Page_18)
  prefs: []
  type: TYPE_NORMAL
- en: Kr00k, [291](c12.xhtml#Page_291)
  prefs: []
  type: TYPE_NORMAL
- en: '**L**'
  prefs: []
  type: TYPE_NORMAL
- en: laws affecting IoT research, [12](c01.xhtml#Page_12)–[13](c01.xhtml#Page_13)
  prefs: []
  type: TYPE_NORMAL
- en: legitimate RFID reader attack, [262](c10.xhtml#Page_262)–[263](c10.xhtml#Page_263)
  prefs: []
  type: TYPE_NORMAL
- en: '`lf` parameter, [248](c10.xhtml#Page_248)'
  prefs: []
  type: TYPE_NORMAL
- en: LimeSDR, [408](b01.xhtml#Page_408)
  prefs: []
  type: TYPE_NORMAL
- en: '`list` command, GDB, [184](c07.xhtml#Page_184)–[185](c07.xhtml#Page_185)'
  prefs: []
  type: TYPE_NORMAL
- en: LLDB, [348](c14.xhtml#Page_348)–[350](c14.xhtml#Page_350), [408](b01.xhtml#Page_408)
  prefs: []
  type: TYPE_NORMAL
- en: '`llvm clang` static analyzer, [346](c14.xhtml#Page_346)'
  prefs: []
  type: TYPE_NORMAL
- en: '`load_seed_tag()` function, [265](c10.xhtml#Page_265), [266](c10.xhtml#Page_266)'
  prefs: []
  type: TYPE_NORMAL
- en: local-link protocols, [131](c06.xhtml#Page_131)–[132](c06.xhtml#Page_132)
  prefs: []
  type: TYPE_NORMAL
- en: local-scope helper function, *[79](c04.xhtml#Page_79)*
  prefs: []
  type: TYPE_NORMAL
- en: lockout mechanisms, *[51](c03.xhtml#Page_51)*
  prefs: []
  type: TYPE_NORMAL
- en: locks, assessing, [41](c03.xhtml#Page_41)
  prefs: []
  type: TYPE_NORMAL
- en: log files, sensitive, [234](c09.xhtml#Page_234)
  prefs: []
  type: TYPE_NORMAL
- en: logging, UPnP, [121](c06.xhtml#Page_121)
  prefs: []
  type: TYPE_NORMAL
- en: logic analyzer, *[162](c07.xhtml#Page_162)*, [163](c07.xhtml#Page_163), [176](c07.xhtml#Page_176)–[177](c07.xhtml#Page_177)
  prefs: []
  type: TYPE_NORMAL
- en: logic flaws, [50](c03.xhtml#Page_50)
  prefs: []
  type: TYPE_NORMAL
- en: Long Range (LoRa), *[307](c13.xhtml#Page_307)–[308](c13.xhtml#Page_308)*. *See
    also* LoRaWAN protocol
  prefs: []
  type: TYPE_NORMAL
- en: CatWAN USB stick, turning into LoRa sniffer, [318](c13.xhtml#Page_318)–[322](c13.xhtml#Page_322)
  prefs: []
  type: TYPE_NORMAL
- en: Heltec LoRa [32](c02.xhtml#Page_32), setting up, [309](c13.xhtml#Page_309)–[314](c13.xhtml#Page_314)
  prefs: []
  type: TYPE_NORMAL
- en: LoStik, setting up, [314](c13.xhtml#Page_314)–[318](c13.xhtml#Page_318)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [308](c13.xhtml#Page_308)–[309](c13.xhtml#Page_309)
  prefs: []
  type: TYPE_NORMAL
- en: physical layer, [323](c13.xhtml#Page_323)–[324](c13.xhtml#Page_324)
  prefs: []
  type: TYPE_NORMAL
- en: sending packets, [311](c13.xhtml#Page_311)–[313](c13.xhtml#Page_313)
  prefs: []
  type: TYPE_NORMAL
- en: '`loop()`function, [173](c07.xhtml#Page_173)–[174](c07.xhtml#Page_174), [313](c13.xhtml#Page_313)'
  prefs: []
  type: TYPE_NORMAL
- en: '`LoRa.endPacket()` function, [313](c13.xhtml#Page_313)'
  prefs: []
  type: TYPE_NORMAL
- en: '*lora-packet* library, [328](c13.xhtml#Page_328)–[329](c13.xhtml#Page_329)'
  prefs: []
  type: TYPE_NORMAL
- en: '`LoRa.print()` function, [313](c13.xhtml#Page_313)'
  prefs: []
  type: TYPE_NORMAL
- en: LoRaWAN protocol
  prefs: []
  type: TYPE_NORMAL
- en: ACK spoofing, [331](c13.xhtml#Page_331)
  prefs: []
  type: TYPE_NORMAL
- en: application-specific attacks, [331](c13.xhtml#Page_331)
  prefs: []
  type: TYPE_NORMAL
- en: bit-flipping attacks, [327](c13.xhtml#Page_327)–[330](c13.xhtml#Page_330)
  prefs: []
  type: TYPE_NORMAL
- en: eavesdropping, [331](c13.xhtml#Page_331)
  prefs: []
  type: TYPE_NORMAL
- en: general discussion, [308](c13.xhtml#Page_308)–[309](c13.xhtml#Page_309)
  prefs: []
  type: TYPE_NORMAL
- en: joining networks, [324](c13.xhtml#Page_324)–[327](c13.xhtml#Page_327)
  prefs: []
  type: TYPE_NORMAL
- en: key generation and management, [330](c13.xhtml#Page_330)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [318](c13.xhtml#Page_318)–[322](c13.xhtml#Page_322)
  prefs: []
  type: TYPE_NORMAL
- en: packet format, [323](c13.xhtml#Page_323)–[324](c13.xhtml#Page_324)
  prefs: []
  type: TYPE_NORMAL
- en: replay attacks, [330](c13.xhtml#Page_330)–[331](c13.xhtml#Page_331)
  prefs: []
  type: TYPE_NORMAL
- en: LoStik, *[309](c13.xhtml#Page_309)*, [314](c13.xhtml#Page_314)–[318](c13.xhtml#Page_318),
    [409](b01.xhtml#Page_409)
  prefs: []
  type: TYPE_NORMAL
- en: low-frequency RFID
  prefs: []
  type: TYPE_NORMAL
- en: antennas for, [243](c10.xhtml#Page_243)
  prefs: []
  type: TYPE_NORMAL
- en: cloning tags, [249](c10.xhtml#Page_249)
  prefs: []
  type: TYPE_NORMAL
- en: general discussion, [244](c10.xhtml#Page_244)–[245](c10.xhtml#Page_245)
  prefs: []
  type: TYPE_NORMAL
- en: identifying with Proxmark3, [248](c10.xhtml#Page_248)–[249](c10.xhtml#Page_249)
  prefs: []
  type: TYPE_NORMAL
- en: Low-Power Wide Area Network (LPWAN), *[307](c13.xhtml#Page_307)*–[309](c13.xhtml#Page_309).
    *See also* Long Range (LoRa); LoRaWAN protocol
  prefs: []
  type: TYPE_NORMAL
- en: Lua, *[95](c05.xhtml#Page_95)*. *See also* DICOM service scanner
  prefs: []
  type: TYPE_NORMAL
- en: enabling in Wireshark, [97](c05.xhtml#Page_97)–[99](c05.xhtml#Page_99)
  prefs: []
  type: TYPE_NORMAL
- en: general discussion, [95](c05.xhtml#Page_95)
  prefs: []
  type: TYPE_NORMAL
- en: generating DICOM traffic, [97](c05.xhtml#Page_97)
  prefs: []
  type: TYPE_NORMAL
- en: prototyping with, [93](c05.xhtml#Page_93)
  prefs: []
  type: TYPE_NORMAL
- en: Wireshark dissector, developing for DICOM protocol, [99](c05.xhtml#Page_99)–[101](c05.xhtml#Page_101)
  prefs: []
  type: TYPE_NORMAL
- en: '**M**'
  prefs: []
  type: TYPE_NORMAL
- en: MAC address, spoofing, [283](c11.xhtml#Page_283)–[285](c11.xhtml#Page_285)
  prefs: []
  type: TYPE_NORMAL
- en: MAC header (MHDR), *[324](c13.xhtml#Page_324)*
  prefs: []
  type: TYPE_NORMAL
- en: MAC layer, LoRaWAN, [324](c13.xhtml#Page_324)
  prefs: []
  type: TYPE_NORMAL
- en: '`mac pause` command, [316](c13.xhtml#Page_316)'
  prefs: []
  type: TYPE_NORMAL
- en: MACPayload, [324](c13.xhtml#Page_324)
  prefs: []
  type: TYPE_NORMAL
- en: macros, *I²C* library, [204](c08.xhtml#Page_204)–[205](c08.xhtml#Page_205)
  prefs: []
  type: TYPE_NORMAL
- en: '`main()` function, [142](c06.xhtml#Page_142), [229](c09.xhtml#Page_229)–[232](c09.xhtml#Page_232)'
  prefs: []
  type: TYPE_NORMAL
- en: '`make` command, [226](c09.xhtml#Page_226)'
  prefs: []
  type: TYPE_NORMAL
- en: Malith, Osanda, [224](c09.xhtml#Page_224)
  prefs: []
  type: TYPE_NORMAL
- en: managed service accounts, *[52](c03.xhtml#Page_52)*
  prefs: []
  type: TYPE_NORMAL
- en: management frame, *[288](c12.xhtml#Page_288)*
  prefs: []
  type: TYPE_NORMAL
- en: man-in-the-middle attacks, *[23](c02.xhtml#Page_23)*. *See also* playing back
    IP camera stream
  prefs: []
  type: TYPE_NORMAL
- en: on control server service, [23](c02.xhtml#Page_23)
  prefs: []
  type: TYPE_NORMAL
- en: iOS apps, [356](c14.xhtml#Page_356)–[357](c14.xhtml#Page_357)
  prefs: []
  type: TYPE_NORMAL
- en: mDNS or DNS-SD
  prefs: []
  type: TYPE_NORMAL
- en: mDNS poisoner, creating, [141](c06.xhtml#Page_141)–[144](c06.xhtml#Page_144)
  prefs: []
  type: TYPE_NORMAL
- en: mDNS poisoner, testing, [144](c06.xhtml#Page_144)–[146](c06.xhtml#Page_146)
  prefs: []
  type: TYPE_NORMAL
- en: typical client and server interactions, [139](c06.xhtml#Page_139)–[140](c06.xhtml#Page_140)
  prefs: []
  type: TYPE_NORMAL
- en: victim client, setting up, [138](c06.xhtml#Page_138)–[139](c06.xhtml#Page_139)
  prefs: []
  type: TYPE_NORMAL
- en: victim server, setting up, [136](c06.xhtml#Page_136)–[138](c06.xhtml#Page_138)
  prefs: []
  type: TYPE_NORMAL
- en: obtaining firmware through, [211](c09.xhtml#Page_211)
  prefs: []
  type: TYPE_NORMAL
- en: manuals, system, [37](c03.xhtml#Page_37)
  prefs: []
  type: TYPE_NORMAL
- en: manufacturer data, *[244](c10.xhtml#Page_244)*
  prefs: []
  type: TYPE_NORMAL
- en: '`match` Nmap service probe directive, [72](c04.xhtml#Page_72)'
  prefs: []
  type: TYPE_NORMAL
- en: MCU (microcontroller unit), *[211](c09.xhtml#Page_211)*
  prefs: []
  type: TYPE_NORMAL
- en: MD5 hash, [232](c09.xhtml#Page_232)
  prefs: []
  type: TYPE_NORMAL
- en: MDM (Mobile Device Management), *[386](c15.xhtml#Page_386)*
  prefs: []
  type: TYPE_NORMAL
- en: mDNS. *See* multicast Domain Name System (mDNS)
  prefs: []
  type: TYPE_NORMAL
- en: '`MDNS` class, creating, [143](c06.xhtml#Page_143)–[144](c06.xhtml#Page_144)'
  prefs: []
  type: TYPE_NORMAL
- en: mDNS poisoner
  prefs: []
  type: TYPE_NORMAL
- en: creating, [141](c06.xhtml#Page_141)–[144](c06.xhtml#Page_144)
  prefs: []
  type: TYPE_NORMAL
- en: testing, [144](c06.xhtml#Page_144)–[146](c06.xhtml#Page_146)
  prefs: []
  type: TYPE_NORMAL
- en: typical client and server interactions, [139](c06.xhtml#Page_139)–[140](c06.xhtml#Page_140)
  prefs: []
  type: TYPE_NORMAL
- en: victim client, setting up, [138](c06.xhtml#Page_138)–[139](c06.xhtml#Page_139)
  prefs: []
  type: TYPE_NORMAL
- en: victim server, setting up, [136](c06.xhtml#Page_136)–[138](c06.xhtml#Page_138)
  prefs: []
  type: TYPE_NORMAL
- en: '`MDNS_poisoner` function, [142](c06.xhtml#Page_142)'
  prefs: []
  type: TYPE_NORMAL
- en: mDNS reflection DDoS attack, [94](c05.xhtml#Page_94)
  prefs: []
  type: TYPE_NORMAL
- en: '`mdw` command, [182](c07.xhtml#Page_182)'
  prefs: []
  type: TYPE_NORMAL
- en: medical device security
  prefs: []
  type: TYPE_NORMAL
- en: insulin pump security issue, [11](c01.xhtml#Page_11)–[12](c01.xhtml#Page_12)
  prefs: []
  type: TYPE_NORMAL
- en: patient perspectives on, [14](c01.xhtml#Page_14)–[16](c01.xhtml#Page_16)
  prefs: []
  type: TYPE_NORMAL
- en: memory corruption bugs, [120](c06.xhtml#Page_120)
  prefs: []
  type: TYPE_NORMAL
- en: Message Integrity Code (MIC), *[300](c12.xhtml#Page_300)*, [323](c13.xhtml#Page_323)–[326](c13.xhtml#Page_326)
  prefs: []
  type: TYPE_NORMAL
- en: Message Queuing Telemetry Transport (MQTT)
  prefs: []
  type: TYPE_NORMAL
- en: publish-subscribe architecture, [73](c04.xhtml#Page_73)–[74](c04.xhtml#Page_74)
  prefs: []
  type: TYPE_NORMAL
- en: test environment, setting up, [75](c04.xhtml#Page_75)–[76](c04.xhtml#Page_76)
  prefs: []
  type: TYPE_NORMAL
- en: testing Ncrack module against, [86](c04.xhtml#Page_86)–[87](c04.xhtml#Page_87)
  prefs: []
  type: TYPE_NORMAL
- en: writing authentication-cracking module in Ncrack, [77](c04.xhtml#Page_77)–[86](c04.xhtml#Page_86)
  prefs: []
  type: TYPE_NORMAL
- en: '`mfkey64` tool, [262](c10.xhtml#Page_262)'
  prefs: []
  type: TYPE_NORMAL
- en: '`mfkeys` script, [263](c10.xhtml#Page_263)'
  prefs: []
  type: TYPE_NORMAL
- en: MHDR (MAC header), *[324](c13.xhtml#Page_324)*
  prefs: []
  type: TYPE_NORMAL
- en: MIC (Message Integrity Code), *[300](c12.xhtml#Page_300)*, [323](c13.xhtml#Page_323)–[326](c13.xhtml#Page_326)
  prefs: []
  type: TYPE_NORMAL
- en: microcontroller hacking
  prefs: []
  type: TYPE_NORMAL
- en: boot mode, selecting, [174](c07.xhtml#Page_174)–[175](c07.xhtml#Page_175)
  prefs: []
  type: TYPE_NORMAL
- en: coding target program in Arduino, [172](c07.xhtml#Page_172)–[174](c07.xhtml#Page_174)
  prefs: []
  type: TYPE_NORMAL
- en: connecting to computer, [179](c07.xhtml#Page_179)–[180](c07.xhtml#Page_180)
  prefs: []
  type: TYPE_NORMAL
- en: connecting USB to serial adapter, [178](c07.xhtml#Page_178)
  prefs: []
  type: TYPE_NORMAL
- en: debugging environment, setting up, [170](c07.xhtml#Page_170)–[172](c07.xhtml#Page_172)
  prefs: []
  type: TYPE_NORMAL
- en: debugging target, [181](c07.xhtml#Page_181)–[188](c07.xhtml#Page_188)
  prefs: []
  type: TYPE_NORMAL
- en: flashing and running Arduino program, [174](c07.xhtml#Page_174)–[180](c07.xhtml#Page_180)
  prefs: []
  type: TYPE_NORMAL
- en: STM32F103C8T6 target device, [169](c07.xhtml#Page_169)–[170](c07.xhtml#Page_170)
  prefs: []
  type: TYPE_NORMAL
- en: tools for, [168](c07.xhtml#Page_168)–[169](c07.xhtml#Page_169)
  prefs: []
  type: TYPE_NORMAL
- en: UART pins, identifying with logic analyzer, [176](c07.xhtml#Page_176)–[177](c07.xhtml#Page_177)
  prefs: []
  type: TYPE_NORMAL
- en: uploading Arduino program, [175](c07.xhtml#Page_175)–[176](c07.xhtml#Page_176)
  prefs: []
  type: TYPE_NORMAL
- en: microcontroller unit (MCU), *[211](c09.xhtml#Page_211)*
  prefs: []
  type: TYPE_NORMAL
- en: MIFARE cards
  prefs: []
  type: TYPE_NORMAL
- en: access bits, [251](c10.xhtml#Page_251)
  prefs: []
  type: TYPE_NORMAL
- en: altering RFID tags, [255](c10.xhtml#Page_255)–[256](c10.xhtml#Page_256)
  prefs: []
  type: TYPE_NORMAL
- en: attacking with Android app, [256](c10.xhtml#Page_256)–[257](c10.xhtml#Page_257)
  prefs: []
  type: TYPE_NORMAL
- en: authentication protocol, [258](c10.xhtml#Page_258), [259](c10.xhtml#Page_259)
  prefs: []
  type: TYPE_NORMAL
- en: cloning Classic cards, [250](c10.xhtml#Page_250)–[254](c10.xhtml#Page_254)
  prefs: []
  type: TYPE_NORMAL
- en: cloning RFID tag of keylock system, [372](c15.xhtml#Page_372)–[375](c15.xhtml#Page_375)
  prefs: []
  type: TYPE_NORMAL
- en: extracting private key from captured traffic, [261](c10.xhtml#Page_261)–[262](c10.xhtml#Page_262)
  prefs: []
  type: TYPE_NORMAL
- en: MIFARE Classic memory map, [250](c10.xhtml#Page_250)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [245](c10.xhtml#Page_245)
  prefs: []
  type: TYPE_NORMAL
- en: raw commands, reading with, [258](c10.xhtml#Page_258)
  prefs: []
  type: TYPE_NORMAL
- en: simulating RFID tags, [254](c10.xhtml#Page_254)–[255](c10.xhtml#Page_255)
  prefs: []
  type: TYPE_NORMAL
- en: MIFARE Classic Tool, [256](c10.xhtml#Page_256)–[257](c10.xhtml#Page_257)
  prefs: []
  type: TYPE_NORMAL
- en: mini ST-Link programmer, *[168](c07.xhtml#Page_168)*
  prefs: []
  type: TYPE_NORMAL
- en: MiniUPnP, setting up, [122](c06.xhtml#Page_122)–[124](c06.xhtml#Page_124)
  prefs: []
  type: TYPE_NORMAL
- en: Mirai botnet, [4](c01.xhtml#Page_4)–[5](c01.xhtml#Page_5), [6](c01.xhtml#Page_6)
  prefs: []
  type: TYPE_NORMAL
- en: Miranda, [125](c06.xhtml#Page_125), [13](c01.xhtml#Page_13)0, [409](b01.xhtml#Page_409)
  prefs: []
  type: TYPE_NORMAL
- en: mobile apps. *See also* iGoat mobile app; InsecureBankV2 app
  prefs: []
  type: TYPE_NORMAL
- en: architecture of, [336](c14.xhtml#Page_336)
  prefs: []
  type: TYPE_NORMAL
- en: general mobile device threats, [337](c14.xhtml#Page_337)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [335](c14.xhtml#Page_335)–[336](c14.xhtml#Page_336)
  prefs: []
  type: TYPE_NORMAL
- en: root detection, avoiding, [368](c14.xhtml#Page_368)–[370](c14.xhtml#Page_370)
  prefs: []
  type: TYPE_NORMAL
- en: security controls, [339](c14.xhtml#Page_339)–[341](c14.xhtml#Page_341)
  prefs: []
  type: TYPE_NORMAL
- en: security testing, [54](c03.xhtml#Page_54)
  prefs: []
  type: TYPE_NORMAL
- en: threats to, [337](c14.xhtml#Page_337)–[338](c14.xhtml#Page_338)
  prefs: []
  type: TYPE_NORMAL
- en: Mobile Device Management (MDM), *[386](c15.xhtml#Page_386)*
  prefs: []
  type: TYPE_NORMAL
- en: Mobile Security Framework (MobSF), [346](c14.xhtml#Page_346), [409](b01.xhtml#Page_409)
  prefs: []
  type: TYPE_NORMAL
- en: ModemManager, [247](c10.xhtml#Page_247)
  prefs: []
  type: TYPE_NORMAL
- en: '`modprobe` command, [63](c04.xhtml#Page_63)'
  prefs: []
  type: TYPE_NORMAL
- en: Moe, Marie, [15](c01.xhtml#Page_15)
  prefs: []
  type: TYPE_NORMAL
- en: monitor mode, AP, *[288](c12.xhtml#Page_288)*
  prefs: []
  type: TYPE_NORMAL
- en: Moore, H.D., [118](c06.xhtml#Page_118)
  prefs: []
  type: TYPE_NORMAL
- en: '*.mpy* files, [319](c13.xhtml#Page_319)'
  prefs: []
  type: TYPE_NORMAL
- en: MQTT. *See* Message Queuing Telemetry Transport (MQTT)
  prefs: []
  type: TYPE_NORMAL
- en: '`MQTT_FINI` state, Ncrack, [79](c04.xhtml#Page_79)–[80](c04.xhtml#Page_80),
    [85](c04.xhtml#Page_85)–[86](c04.xhtml#Page_86)'
  prefs: []
  type: TYPE_NORMAL
- en: '`MQTT_INIT` state, Ncrack, [79](c04.xhtml#Page_79)–[80](c04.xhtml#Page_80),
    [84](c04.xhtml#Page_84)–[86](c04.xhtml#Page_86)'
  prefs: []
  type: TYPE_NORMAL
- en: '`mqtt_loop_read` function, [79](c04.xhtml#Page_79), [83](c04.xhtml#Page_83),
    [86](c04.xhtml#Page_86)'
  prefs: []
  type: TYPE_NORMAL
- en: '`msearch` command, [125](c06.xhtml#Page_125)'
  prefs: []
  type: TYPE_NORMAL
- en: M-SEARCH request, *[119](c06.xhtml#Page_119)*
  prefs: []
  type: TYPE_NORMAL
- en: MU editor, [320](c13.xhtml#Page_320)–[322](c13.xhtml#Page_322)
  prefs: []
  type: TYPE_NORMAL
- en: multicast Domain Name System (mDNS), *[131](c06.xhtml#Page_131)*
  prefs: []
  type: TYPE_NORMAL
- en: abusing Probing phase, [134](c06.xhtml#Page_134)–[136](c06.xhtml#Page_136)
  prefs: []
  type: TYPE_NORMAL
- en: general discussion, [132](c06.xhtml#Page_132)
  prefs: []
  type: TYPE_NORMAL
- en: man-in-the-middle attacks
  prefs: []
  type: TYPE_NORMAL
- en: mDNS poisoner, creating, [141](c06.xhtml#Page_141)–[144](c06.xhtml#Page_144)
  prefs: []
  type: TYPE_NORMAL
- en: mDNS poisoner, testing, [144](c06.xhtml#Page_144)–[146](c06.xhtml#Page_146)
  prefs: []
  type: TYPE_NORMAL
- en: typical client and server interactions, [139](c06.xhtml#Page_139)–[140](c06.xhtml#Page_140)
  prefs: []
  type: TYPE_NORMAL
- en: victim client, setting up, [138](c06.xhtml#Page_138)–[139](c06.xhtml#Page_139)
  prefs: []
  type: TYPE_NORMAL
- en: victim server, setting up, [136](c06.xhtml#Page_136)–[138](c06.xhtml#Page_138)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [131](c06.xhtml#Page_131)–[132](c06.xhtml#Page_132)
  prefs: []
  type: TYPE_NORMAL
- en: reconnaissance with, [133](c06.xhtml#Page_133)–[134](c06.xhtml#Page_134)
  prefs: []
  type: TYPE_NORMAL
- en: multimeters, *[160](c07.xhtml#Page_160)*–[162](c07.xhtml#Page_162)
  prefs: []
  type: TYPE_NORMAL
- en: mutation-based fuzzing, [264](c10.xhtml#Page_264)
  prefs: []
  type: TYPE_NORMAL
- en: mutual authentication, [94](c05.xhtml#Page_94)
  prefs: []
  type: TYPE_NORMAL
- en: MyCar Controls mobile app, [356](c14.xhtml#Page_356)
  prefs: []
  type: TYPE_NORMAL
- en: '**N**'
  prefs: []
  type: TYPE_NORMAL
- en: NAC (network access control), [18](c02.xhtml#Page_18)
  prefs: []
  type: TYPE_NORMAL
- en: NarrowBand (NB-IoT), *[308](c13.xhtml#Page_308)*
  prefs: []
  type: TYPE_NORMAL
- en: NAT (network address translation), *[121](c06.xhtml#Page_121)*
  prefs: []
  type: TYPE_NORMAL
- en: native VLAN, [63](c04.xhtml#Page_63), *[63](c04.xhtml#Page_63)*
  prefs: []
  type: TYPE_NORMAL
- en: NB-IoT (NarrowBand), *[308](c13.xhtml#Page_308)*
  prefs: []
  type: TYPE_NORMAL
- en: '`ncat` Nmap command, [69](c04.xhtml#Page_69)'
  prefs: []
  type: TYPE_NORMAL
- en: Ncrack, *[74](c04.xhtml#Page_74)*, [409](b01.xhtml#Page_409)
  prefs: []
  type: TYPE_NORMAL
- en: architecture of, [77](c04.xhtml#Page_77)
  prefs: []
  type: TYPE_NORMAL
- en: compiling, [77](c04.xhtml#Page_77)–[78](c04.xhtml#Page_78)
  prefs: []
  type: TYPE_NORMAL
- en: initializing modules, [78](c04.xhtml#Page_78)–[79](c04.xhtml#Page_79)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [77](c04.xhtml#Page_77)
  prefs: []
  type: TYPE_NORMAL
- en: testing module against MQTT, [86](c04.xhtml#Page_86)–[87](c04.xhtml#Page_87)
  prefs: []
  type: TYPE_NORMAL
- en: writing authentication-cracking module in, [77](c04.xhtml#Page_77)–[86](c04.xhtml#Page_86)
  prefs: []
  type: TYPE_NORMAL
- en: '`ncrack_mqtt` function, [84](c04.xhtml#Page_84)–[86](c04.xhtml#Page_86)'
  prefs: []
  type: TYPE_NORMAL
- en: '*ncrack-services* file, [78](c04.xhtml#Page_78)'
  prefs: []
  type: TYPE_NORMAL
- en: Near-Field Communication (NFC), *[245](c10.xhtml#Page_245)*, [296](c12.xhtml#Page_296)
  prefs: []
  type: TYPE_NORMAL
- en: nested authentication attack, *[374](c15.xhtml#Page_374)*
  prefs: []
  type: TYPE_NORMAL
- en: Netgear D6000
  prefs: []
  type: TYPE_NORMAL
- en: dynamic analysis, [221](c09.xhtml#Page_221)–[223](c09.xhtml#Page_223)
  prefs: []
  type: TYPE_NORMAL
- en: extracting filesystem, [212](c09.xhtml#Page_212)
  prefs: []
  type: TYPE_NORMAL
- en: firmware emulation, [216](c09.xhtml#Page_216)–[221](c09.xhtml#Page_221)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [211](c09.xhtml#Page_211)–[212](c09.xhtml#Page_212)
  prefs: []
  type: TYPE_NORMAL
- en: statically analyzing filesystem contents, [213](c09.xhtml#Page_213)–[216](c09.xhtml#Page_216)
  prefs: []
  type: TYPE_NORMAL
- en: support page, [211](c09.xhtml#Page_211)
  prefs: []
  type: TYPE_NORMAL
- en: web app, [223](c09.xhtml#Page_223)
  prefs: []
  type: TYPE_NORMAL
- en: NetID (network identifier), [326](c13.xhtml#Page_326)
  prefs: []
  type: TYPE_NORMAL
- en: '`netstat` command, [222](c09.xhtml#Page_222)'
  prefs: []
  type: TYPE_NORMAL
- en: network access control (NAC), *[18](c02.xhtml#Page_18)*
  prefs: []
  type: TYPE_NORMAL
- en: network address translation (NAT), *[121](c06.xhtml#Page_121)*
  prefs: []
  type: TYPE_NORMAL
- en: network assessments
  prefs: []
  type: TYPE_NORMAL
- en: identifying IoT devices on networks, [67](c04.xhtml#Page_67)
  prefs: []
  type: TYPE_NORMAL
- en: with fingerprinting services, [67](c04.xhtml#Page_67)–[71](c04.xhtml#Page_71)
  prefs: []
  type: TYPE_NORMAL
- en: Nmap service probes, writing new, [71](c04.xhtml#Page_71)–[73](c04.xhtml#Page_73)
  prefs: []
  type: TYPE_NORMAL
- en: MQTT, attacking
  prefs: []
  type: TYPE_NORMAL
- en: overview, [73](c04.xhtml#Page_73)–[74](c04.xhtml#Page_74)
  prefs: []
  type: TYPE_NORMAL
- en: test environment, setting up, [75](c04.xhtml#Page_75)–[76](c04.xhtml#Page_76)
  prefs: []
  type: TYPE_NORMAL
- en: testing Ncrack module against MQTT, [86](c04.xhtml#Page_86)–[87](c04.xhtml#Page_87)
  prefs: []
  type: TYPE_NORMAL
- en: writing authentication-cracking module in Ncrack, [77](c04.xhtml#Page_77)–[86](c04.xhtml#Page_86)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [59](c04.xhtml#Page_59)
  prefs: []
  type: TYPE_NORMAL
- en: VLAN-hopping attacks
  prefs: []
  type: TYPE_NORMAL
- en: double tagging attacks, [63](c04.xhtml#Page_63)–[65](c04.xhtml#Page_65)
  prefs: []
  type: TYPE_NORMAL
- en: imitating VoIP devices, [65](c04.xhtml#Page_65)–[67](c04.xhtml#Page_67)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [60](c04.xhtml#Page_60)
  prefs: []
  type: TYPE_NORMAL
- en: switch spoofing attacks, [61](c04.xhtml#Page_61)–[63](c04.xhtml#Page_63)
  prefs: []
  type: TYPE_NORMAL
- en: VLANs and network switches, understanding, [60](c04.xhtml#Page_60)–[61](c04.xhtml#Page_61)
  prefs: []
  type: TYPE_NORMAL
- en: network identifier (NetID), [326](c13.xhtml#Page_326)
  prefs: []
  type: TYPE_NORMAL
- en: network layer, *[43](c03.xhtml#Page_43)*–[47](c03.xhtml#Page_47)
  prefs: []
  type: TYPE_NORMAL
- en: network printers, man-in-the-middle attacks on. *See* mDNS poisoner
  prefs: []
  type: TYPE_NORMAL
- en: network protocols. *See also* DICOM protocol
  prefs: []
  type: TYPE_NORMAL
- en: analysis phase, [92](c05.xhtml#Page_92)–[93](c05.xhtml#Page_93)
  prefs: []
  type: TYPE_NORMAL
- en: C-ECHO requests dissector, building, [101](c05.xhtml#Page_101)–[105](c05.xhtml#Page_105)
  prefs: []
  type: TYPE_NORMAL
- en: information-gathering phase, [90](c05.xhtml#Page_90)–[91](c05.xhtml#Page_91)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [89](c05.xhtml#Page_89)–[90](c05.xhtml#Page_90)
  prefs: []
  type: TYPE_NORMAL
- en: prototyping and tool development, [93](c05.xhtml#Page_93)
  prefs: []
  type: TYPE_NORMAL
- en: security assessments, [93](c05.xhtml#Page_93)–[94](c05.xhtml#Page_94)
  prefs: []
  type: TYPE_NORMAL
- en: stages of attacks on, [45](c03.xhtml#Page_45)–[47](c03.xhtml#Page_47)
  prefs: []
  type: TYPE_NORMAL
- en: network server, *[309](c13.xhtml#Page_309)*
  prefs: []
  type: TYPE_NORMAL
- en: network sockets, setting up, [150](c06.xhtml#Page_150)
  prefs: []
  type: TYPE_NORMAL
- en: network switches, [60](c04.xhtml#Page_60)–[61](c04.xhtml#Page_61)
  prefs: []
  type: TYPE_NORMAL
- en: network traffic
  prefs: []
  type: TYPE_NORMAL
- en: analysis of, [46](c03.xhtml#Page_46)
  prefs: []
  type: TYPE_NORMAL
- en: analyzing with Wireshark, [92](c05.xhtml#Page_92)
  prefs: []
  type: TYPE_NORMAL
- en: InsecureBankV2 app, [367](c14.xhtml#Page_367)
  prefs: []
  type: TYPE_NORMAL
- en: of IP camera stream, analyzing, [380](c15.xhtml#Page_380)–[382](c15.xhtml#Page_382)
  prefs: []
  type: TYPE_NORMAL
- en: obtaining copies of, [92](c05.xhtml#Page_92)
  prefs: []
  type: TYPE_NORMAL
- en: OWASP iGoat app, [356](c14.xhtml#Page_356)–[357](c14.xhtml#Page_357)
  prefs: []
  type: TYPE_NORMAL
- en: '`NewInternalClient` bug, [120](c06.xhtml#Page_120)'
  prefs: []
  type: TYPE_NORMAL
- en: NFC (Near-Field Communication), *[245](c10.xhtml#Page_245)*, [296](c12.xhtml#Page_296)
  prefs: []
  type: TYPE_NORMAL
- en: Nmap, [409](b01.xhtml#Page_409)
  prefs: []
  type: TYPE_NORMAL
- en: fingerprinting services, [67](c04.xhtml#Page_67)–[71](c04.xhtml#Page_71)
  prefs: []
  type: TYPE_NORMAL
- en: writing new service probes, [71](c04.xhtml#Page_71)–[73](c04.xhtml#Page_73)
  prefs: []
  type: TYPE_NORMAL
- en: '*nmap* library, [106](c05.xhtml#Page_106)–[107](c05.xhtml#Page_107)'
  prefs: []
  type: TYPE_NORMAL
- en: Nmap Scripting Engine (NSE), [112](c05.xhtml#Page_112). *See also* DICOM service
    scanner
  prefs: []
  type: TYPE_NORMAL
- en: Nmap Scripting Engine (NSE) Library, [106](c05.xhtml#Page_106)
  prefs: []
  type: TYPE_NORMAL
- en: '*nmap-service-probes* file, [68](c04.xhtml#Page_68), [70](c04.xhtml#Page_70),
    [72](c04.xhtml#Page_72)'
  prefs: []
  type: TYPE_NORMAL
- en: '`nmcli` command, [63](c04.xhtml#Page_63)'
  prefs: []
  type: TYPE_NORMAL
- en: node-applesign, [344](c14.xhtml#Page_344)
  prefs: []
  type: TYPE_NORMAL
- en: node cloning, *[32](c02.xhtml#Page_32)*
  prefs: []
  type: TYPE_NORMAL
- en: Node.js, [327](c13.xhtml#Page_327)–[328](c13.xhtml#Page_328)
  prefs: []
  type: TYPE_NORMAL
- en: nodes, LoRaWAN, *[309](c13.xhtml#Page_309)*
  prefs: []
  type: TYPE_NORMAL
- en: NOTIFY message, [119](c06.xhtml#Page_119)
  prefs: []
  type: TYPE_NORMAL
- en: NotPetya attack, [5](c01.xhtml#Page_5)
  prefs: []
  type: TYPE_NORMAL
- en: '`npm` package manager, [328](c13.xhtml#Page_328)'
  prefs: []
  type: TYPE_NORMAL
- en: '`nr` parameter, [261](c10.xhtml#Page_261)–[262](c10.xhtml#Page_262)'
  prefs: []
  type: TYPE_NORMAL
- en: NSE (Nmap Scripting Engine), [112](c05.xhtml#Page_112). *See also* DICOM service
    scanner
  prefs: []
  type: TYPE_NORMAL
- en: NSE (Nmap Scripting Engine) Library, [106](c05.xhtml#Page_106)
  prefs: []
  type: TYPE_NORMAL
- en: '*nsedebug* library, [106](c05.xhtml#Page_106)'
  prefs: []
  type: TYPE_NORMAL
- en: NSEdoc block format, [108](c05.xhtml#Page_108)
  prefs: []
  type: TYPE_NORMAL
- en: '`nsock_iod` variable, [85](c04.xhtml#Page_85)'
  prefs: []
  type: TYPE_NORMAL
- en: '`nsock_read` variable, [85](c04.xhtml#Page_85)'
  prefs: []
  type: TYPE_NORMAL
- en: '`nsock_write` variable, [85](c04.xhtml#Page_85)'
  prefs: []
  type: TYPE_NORMAL
- en: '*Nsock* library, [77](c04.xhtml#Page_77)'
  prefs: []
  type: TYPE_NORMAL
- en: '`nt` parameter, [261](c10.xhtml#Page_261)–[262](c10.xhtml#Page_262)'
  prefs: []
  type: TYPE_NORMAL
- en: '`NULL` probe, Nmap, [72](c04.xhtml#Page_72)'
  prefs: []
  type: TYPE_NORMAL
- en: NwkSKey, *[323](c13.xhtml#Page_323)*, [326](c13.xhtml#Page_326)
  prefs: []
  type: TYPE_NORMAL
- en: NXP cards, [245](c10.xhtml#Page_245)
  prefs: []
  type: TYPE_NORMAL
- en: '**O**'
  prefs: []
  type: TYPE_NORMAL
- en: OhMiBod Remote app for Android, [367](c14.xhtml#Page_367)
  prefs: []
  type: TYPE_NORMAL
- en: '*ojbc.pl* script, [355](c14.xhtml#Page_355)'
  prefs: []
  type: TYPE_NORMAL
- en: ONVIF, [145](c06.xhtml#Page_145)
  prefs: []
  type: TYPE_NORMAL
- en: open drain drivers, *[197](c08.xhtml#Page_197)*
  prefs: []
  type: TYPE_NORMAL
- en: open mode, Wi-Fi networks, *[288](c12.xhtml#Page_288)*
  prefs: []
  type: TYPE_NORMAL
- en: OpenOCD (Open On-Chip Debugger), *[165](c07.xhtml#Page_165)*
  prefs: []
  type: TYPE_NORMAL
- en: installing, [171](c07.xhtml#Page_171)–[172](c07.xhtml#Page_172)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [165](c07.xhtml#Page_165), [409](b01.xhtml#Page_409)
  prefs: []
  type: TYPE_NORMAL
- en: open source intelligence (OSINT), *[37](c03.xhtml#Page_37)*–[40](c03.xhtml#Page_40)
  prefs: []
  type: TYPE_NORMAL
- en: Open Web Application Security Project (OWASP), [9](c01.xhtml#Page_9)–[10](c01.xhtml#Page_10).
    *See also* iGoat mobile app
  prefs: []
  type: TYPE_NORMAL
- en: OpenWrt
  prefs: []
  type: TYPE_NORMAL
- en: compiling backdoor agent, *[225](c09.xhtml#Page_225)*–[226](c09.xhtml#Page_226)
  prefs: []
  type: TYPE_NORMAL
- en: test UPnP server, setting up, [122](c06.xhtml#Page_122)–[125](c06.xhtml#Page_125)
  prefs: []
  type: TYPE_NORMAL
- en: operating system, [25](c02.xhtml#Page_25), [44](c03.xhtml#Page_44)
  prefs: []
  type: TYPE_NORMAL
- en: Orthanc, *[97](c05.xhtml#Page_97)*
  prefs: []
  type: TYPE_NORMAL
- en: OSINT (open source intelligence), *[37](c03.xhtml#Page_37)*–[40](c03.xhtml#Page_40)
  prefs: []
  type: TYPE_NORMAL
- en: Otool, [345](c14.xhtml#Page_345)–[346](c14.xhtml#Page_346), [410](b01.xhtml#Page_410)
  prefs: []
  type: TYPE_NORMAL
- en: over-the-air (OTA) updates, [26](c02.xhtml#Page_26)
  prefs: []
  type: TYPE_NORMAL
- en: Over-the-Air Activation (OTAA) method, *[323](c13.xhtml#Page_323)*–[326](c13.xhtml#Page_326),
    [330](c13.xhtml#Page_330)–[331](c13.xhtml#Page_331)
  prefs: []
  type: TYPE_NORMAL
- en: OWASP (Open Web Application Security Project), [9](c01.xhtml#Page_9)–[10](c01.xhtml#Page_10)
  prefs: []
  type: TYPE_NORMAL
- en: OWASP iGoat project. *See* iGoat mobile app
  prefs: []
  type: TYPE_NORMAL
- en: OWASP IoTGoat, [235](c09.xhtml#Page_235)
  prefs: []
  type: TYPE_NORMAL
- en: OWASP Zed Attack Proxy (ZAP), [410](b01.xhtml#Page_410)
  prefs: []
  type: TYPE_NORMAL
- en: '**P**'
  prefs: []
  type: TYPE_NORMAL
- en: pacemakers, [15](c01.xhtml#Page_15)
  prefs: []
  type: TYPE_NORMAL
- en: packet format
  prefs: []
  type: TYPE_NORMAL
- en: LoRaWAN, [323](c13.xhtml#Page_323)–[324](c13.xhtml#Page_324)
  prefs: []
  type: TYPE_NORMAL
- en: UART, [158](c07.xhtml#Page_158)
  prefs: []
  type: TYPE_NORMAL
- en: packet injection capabilities, *[288](c12.xhtml#Page_288)*
  prefs: []
  type: TYPE_NORMAL
- en: packet structure, BLE, [271](c11.xhtml#Page_271)
  prefs: []
  type: TYPE_NORMAL
- en: Padding Oracle on Downgraded Legacy Encryption (POODLE) attack, [94](c05.xhtml#Page_94)
  prefs: []
  type: TYPE_NORMAL
- en: pads, UART, *[159](c07.xhtml#Page_159)*
  prefs: []
  type: TYPE_NORMAL
- en: Pairwise-Master Key (PMK), [300](c12.xhtml#Page_300)
  prefs: []
  type: TYPE_NORMAL
- en: Pairwise Master Key Identifier (PMKID) field, *[299](c12.xhtml#Page_299)*, [301](c12.xhtml#Page_301)–[304](c12.xhtml#Page_304)
  prefs: []
  type: TYPE_NORMAL
- en: Pairwise Transient Key (PTK), [300](c12.xhtml#Page_300)
  prefs: []
  type: TYPE_NORMAL
- en: parallel communication protocols, *[158](c07.xhtml#Page_158)*
  prefs: []
  type: TYPE_NORMAL
- en: parity bit, UART, [158](c07.xhtml#Page_158)
  prefs: []
  type: TYPE_NORMAL
- en: parsing variable-length fields, [103](c05.xhtml#Page_103)–[104](c05.xhtml#Page_104)
  prefs: []
  type: TYPE_NORMAL
- en: passive reconnaissance, *[37](c03.xhtml#Page_37)*–[40](c03.xhtml#Page_40), [292](c12.xhtml#Page_292)
  prefs: []
  type: TYPE_NORMAL
- en: passive RFID technologies, *[241](c10.xhtml#Page_241)*–[242](c10.xhtml#Page_242)
  prefs: []
  type: TYPE_NORMAL
- en: passive spidering, *[48](c03.xhtml#Page_48)*
  prefs: []
  type: TYPE_NORMAL
- en: password expiration, *[51](c03.xhtml#Page_51)*
  prefs: []
  type: TYPE_NORMAL
- en: password history, *[51](c03.xhtml#Page_51)*
  prefs: []
  type: TYPE_NORMAL
- en: passwords
  prefs: []
  type: TYPE_NORMAL
- en: cracking Netgear D6000 admin credentials, [213](c09.xhtml#Page_213)–[214](c09.xhtml#Page_214)
  prefs: []
  type: TYPE_NORMAL
- en: expiration, [51](c03.xhtml#Page_51)
  prefs: []
  type: TYPE_NORMAL
- en: firmware update services vulnerabilities, [233](c09.xhtml#Page_233)–[234](c09.xhtml#Page_234)
  prefs: []
  type: TYPE_NORMAL
- en: history, [51](c03.xhtml#Page_51)
  prefs: []
  type: TYPE_NORMAL
- en: resetting in Android apps, [363](c14.xhtml#Page_363)–[365](c14.xhtml#Page_365)
  prefs: []
  type: TYPE_NORMAL
- en: strength, testing, [51](c03.xhtml#Page_51)
  prefs: []
  type: TYPE_NORMAL
- en: uncovering by fingerprinting services, [67](c04.xhtml#Page_67)–[71](c04.xhtml#Page_71)
  prefs: []
  type: TYPE_NORMAL
- en: pasteboard, *[353](c14.xhtml#Page_353)*
  prefs: []
  type: TYPE_NORMAL
- en: patch levels, testing, [52](c03.xhtml#Page_52)
  prefs: []
  type: TYPE_NORMAL
- en: patents, [38](c03.xhtml#Page_38)
  prefs: []
  type: TYPE_NORMAL
- en: payload, MQTT *CONNECT* packet, *[81](c04.xhtml#Page_81)*–[82](c04.xhtml#Page_82)
  prefs: []
  type: TYPE_NORMAL
- en: PBC (Push-Button Configuration), *[296](c12.xhtml#Page_296)*, [297](c12.xhtml#Page_297)–[299](c12.xhtml#Page_299)
  prefs: []
  type: TYPE_NORMAL
- en: PCB. *See* printed circuit board (PCB)
  prefs: []
  type: TYPE_NORMAL
- en: (P-DATA-TF) message, [96](c05.xhtml#Page_96)
  prefs: []
  type: TYPE_NORMAL
- en: '`pdc` command, [356](c14.xhtml#Page_356)'
  prefs: []
  type: TYPE_NORMAL
- en: '`pdf` command, [356](c14.xhtml#Page_356)'
  prefs: []
  type: TYPE_NORMAL
- en: '`pdu_header_encode()` function, [110](c05.xhtml#Page_110)'
  prefs: []
  type: TYPE_NORMAL
- en: PDUs (Protocol Data Units), [96](c05.xhtml#Page_96)–[97](c05.xhtml#Page_97),
    [271](c11.xhtml#Page_271)
  prefs: []
  type: TYPE_NORMAL
- en: PEAP (Protected-EAP), [304](c12.xhtml#Page_304)–[305](c12.xhtml#Page_305)
  prefs: []
  type: TYPE_NORMAL
- en: penetration testing. *See* security testing methodology
  prefs: []
  type: TYPE_NORMAL
- en: perception layer, testing, [47](c03.xhtml#Page_47)
  prefs: []
  type: TYPE_NORMAL
- en: peripheral interfaces, *[40](c03.xhtml#Page_40)*–[41](c03.xhtml#Page_41)
  prefs: []
  type: TYPE_NORMAL
- en: Personally Identifiable Information (PII), *[53](c03.xhtml#Page_53)*
  prefs: []
  type: TYPE_NORMAL
- en: PHDR (physical header), [324](c13.xhtml#Page_324)
  prefs: []
  type: TYPE_NORMAL
- en: PHDR_CRC, [324](c13.xhtml#Page_324)
  prefs: []
  type: TYPE_NORMAL
- en: PHI (Protected Health Information), *[53](c03.xhtml#Page_53)*
  prefs: []
  type: TYPE_NORMAL
- en: Philips HealthSuite Health Android app, [366](c14.xhtml#Page_366)
  prefs: []
  type: TYPE_NORMAL
- en: Pholus, [410](b01.xhtml#Page_410)
  prefs: []
  type: TYPE_NORMAL
- en: abusing mDNS Probing phase, [134](c06.xhtml#Page_134)–[136](c06.xhtml#Page_136)
  prefs: []
  type: TYPE_NORMAL
- en: reconnaissance with, [133](c06.xhtml#Page_133)–[134](c06.xhtml#Page_134)
  prefs: []
  type: TYPE_NORMAL
- en: PHYPayload, [324](c13.xhtml#Page_324)
  prefs: []
  type: TYPE_NORMAL
- en: physical buttons of treadmills, disabling, [398](c15.xhtml#Page_398)–[400](c15.xhtml#Page_400)
  prefs: []
  type: TYPE_NORMAL
- en: physical entry into smart homes
  prefs: []
  type: TYPE_NORMAL
- en: cloning RFID tag of keylock system, [372](c15.xhtml#Page_372)–[375](c15.xhtml#Page_375)
  prefs: []
  type: TYPE_NORMAL
- en: jamming wireless alarms, [375](c15.xhtml#Page_375)–[379](c15.xhtml#Page_379)
  prefs: []
  type: TYPE_NORMAL
- en: physical equipment, identifying threats to, [26](c02.xhtml#Page_26)–[27](c02.xhtml#Page_27)
  prefs: []
  type: TYPE_NORMAL
- en: physical header (PHDR), [324](c13.xhtml#Page_324)
  prefs: []
  type: TYPE_NORMAL
- en: physical robustness, testing, [42](c03.xhtml#Page_42)–[43](c03.xhtml#Page_43)
  prefs: []
  type: TYPE_NORMAL
- en: PII (Personally Identifiable Information), *[53](c03.xhtml#Page_53)*
  prefs: []
  type: TYPE_NORMAL
- en: PIN entry, WPS, [296](c12.xhtml#Page_296)–[297](c12.xhtml#Page_297)
  prefs: []
  type: TYPE_NORMAL
- en: pinout, UART, *[159](c07.xhtml#Page_159)*–[162](c07.xhtml#Page_162)
  prefs: []
  type: TYPE_NORMAL
- en: pins
  prefs: []
  type: TYPE_NORMAL
- en: Arduino Uno, [198](c08.xhtml#Page_198)
  prefs: []
  type: TYPE_NORMAL
- en: flash memory chips, [192](c08.xhtml#Page_192)–[193](c08.xhtml#Page_193), [194](c08.xhtml#Page_194)
  prefs: []
  type: TYPE_NORMAL
- en: JTAG, [166](c07.xhtml#Page_166)–[167](c07.xhtml#Page_167)
  prefs: []
  type: TYPE_NORMAL
- en: UART, [159](c07.xhtml#Page_159)–[162](c07.xhtml#Page_162), [176](c07.xhtml#Page_176)–[177](c07.xhtml#Page_177)
  prefs: []
  type: TYPE_NORMAL
- en: playing back IP camera stream
  prefs: []
  type: TYPE_NORMAL
- en: analyzing network traffic, [380](c15.xhtml#Page_380)–[382](c15.xhtml#Page_382)
  prefs: []
  type: TYPE_NORMAL
- en: extracting video stream, [382](c15.xhtml#Page_382)–[385](c15.xhtml#Page_385)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [379](c15.xhtml#Page_379)–[380](c15.xhtml#Page_380)
  prefs: []
  type: TYPE_NORMAL
- en: streaming protocols, [380](c15.xhtml#Page_380)
  prefs: []
  type: TYPE_NORMAL
- en: '`PLAY` request, [382](c15.xhtml#Page_382)'
  prefs: []
  type: TYPE_NORMAL
- en: Plutil tool, [345](c14.xhtml#Page_345)
  prefs: []
  type: TYPE_NORMAL
- en: PMK (Pairwise-Master Key), [300](c12.xhtml#Page_300)
  prefs: []
  type: TYPE_NORMAL
- en: PMKID (Pairwise Master Key Identifier) field, *[299](c12.xhtml#Page_299)*, [301](c12.xhtml#Page_301)–[304](c12.xhtml#Page_304)
  prefs: []
  type: TYPE_NORMAL
- en: pointer records (PTR), [132](c06.xhtml#Page_132)–[133](c06.xhtml#Page_133),
    [138](c06.xhtml#Page_138), [139](c06.xhtml#Page_139)–[140](c06.xhtml#Page_140)
  prefs: []
  type: TYPE_NORMAL
- en: POODLE (Padding Oracle on Downgraded Legacy Encryption) attack, [94](c05.xhtml#Page_94)
  prefs: []
  type: TYPE_NORMAL
- en: '`portfwd` command, [399](c15.xhtml#Page_399)'
  prefs: []
  type: TYPE_NORMAL
- en: ports
  prefs: []
  type: TYPE_NORMAL
- en: for network protocols, [90](c05.xhtml#Page_90)
  prefs: []
  type: TYPE_NORMAL
- en: UART, [159](c07.xhtml#Page_159)–[162](c07.xhtml#Page_162)
  prefs: []
  type: TYPE_NORMAL
- en: '`ports` Nmap service probe directive, [72](c04.xhtml#Page_72)'
  prefs: []
  type: TYPE_NORMAL
- en: preamble, radio, [323](c13.xhtml#Page_323)
  prefs: []
  type: TYPE_NORMAL
- en: Preboot Execution Environment (PXE), *[41](c03.xhtml#Page_41)*
  prefs: []
  type: TYPE_NORMAL
- en: predictive text engine, *[353](c14.xhtml#Page_353)*
  prefs: []
  type: TYPE_NORMAL
- en: preferred network list, *[292](c12.xhtml#Page_292)*
  prefs: []
  type: TYPE_NORMAL
- en: Presentation Context, A-ASSOCIATE request message, [111](c05.xhtml#Page_111)
  prefs: []
  type: TYPE_NORMAL
- en: presentation layer, UPnP, *[120](c06.xhtml#Page_120)*
  prefs: []
  type: TYPE_NORMAL
- en: preshared key attacks, [299](c12.xhtml#Page_299)
  prefs: []
  type: TYPE_NORMAL
- en: principle of least privilege, *[51](c03.xhtml#Page_51)*–[52](c03.xhtml#Page_52)
  prefs: []
  type: TYPE_NORMAL
- en: printed circuit board (PCB)
  prefs: []
  type: TYPE_NORMAL
- en: JTAG pins on, [166](c07.xhtml#Page_166), [167](c07.xhtml#Page_167)
  prefs: []
  type: TYPE_NORMAL
- en: UART pins on, [159](c07.xhtml#Page_159)–[160](c07.xhtml#Page_160)
  prefs: []
  type: TYPE_NORMAL
- en: printers, man-in-the-middle attacks on. *See* mDNS poisoner
  prefs: []
  type: TYPE_NORMAL
- en: privacy breaches, [32](c02.xhtml#Page_32)
  prefs: []
  type: TYPE_NORMAL
- en: privilege, elevation of. *See* elevation of privilege
  prefs: []
  type: TYPE_NORMAL
- en: PRNG (pseudorandom number generator), *[373](c15.xhtml#Page_373)*
  prefs: []
  type: TYPE_NORMAL
- en: '`Probe` Nmap service probe directive, [72](c04.xhtml#Page_72)'
  prefs: []
  type: TYPE_NORMAL
- en: probe request, *[292](c12.xhtml#Page_292)*
  prefs: []
  type: TYPE_NORMAL
- en: Probing phase, mDNS, [132](c06.xhtml#Page_132), [134](c06.xhtml#Page_134)–[136](c06.xhtml#Page_136)
  prefs: []
  type: TYPE_NORMAL
- en: Protected-EAP (PEAP), [304](c12.xhtml#Page_304)–[305](c12.xhtml#Page_305)
  prefs: []
  type: TYPE_NORMAL
- en: Protected Health Information (PHI), *[53](c03.xhtml#Page_53)*
  prefs: []
  type: TYPE_NORMAL
- en: Protocol Data Units (PDUs), [96](c05.xhtml#Page_96)–[97](c05.xhtml#Page_97),
    [271](c11.xhtml#Page_271)
  prefs: []
  type: TYPE_NORMAL
- en: '`ProtoField` class, [99](c05.xhtml#Page_99)'
  prefs: []
  type: TYPE_NORMAL
- en: '`ProtoField.string` function, [102](c05.xhtml#Page_102)'
  prefs: []
  type: TYPE_NORMAL
- en: '`Proto(name, description)` function, [99](c05.xhtml#Page_99)'
  prefs: []
  type: TYPE_NORMAL
- en: prototyping, *[93](c05.xhtml#Page_93)*
  prefs: []
  type: TYPE_NORMAL
- en: ProxCard, HID Global, [244](c10.xhtml#Page_244), [246](c10.xhtml#Page_246)
  prefs: []
  type: TYPE_NORMAL
- en: Proxmark3, [410](b01.xhtml#Page_410)
  prefs: []
  type: TYPE_NORMAL
- en: altering RFID tags, [255](c10.xhtml#Page_255)–[256](c10.xhtml#Page_256)
  prefs: []
  type: TYPE_NORMAL
- en: attacking MIFARE with Android app, [256](c10.xhtml#Page_256)–[257](c10.xhtml#Page_257)
  prefs: []
  type: TYPE_NORMAL
- en: automating RFID attacks using Scripting Engine, [263](c10.xhtml#Page_263)–[264](c10.xhtml#Page_264)
  prefs: []
  type: TYPE_NORMAL
- en: eavesdropping on tag-to-reader communication, [260](c10.xhtml#Page_260)–[261](c10.xhtml#Page_261)
  prefs: []
  type: TYPE_NORMAL
- en: extracting sector’s key from captured traffic, [261](c10.xhtml#Page_261)–[262](c10.xhtml#Page_262)
  prefs: []
  type: TYPE_NORMAL
- en: high-frequency tag cloning, [250](c10.xhtml#Page_250)–[254](c10.xhtml#Page_254)
  prefs: []
  type: TYPE_NORMAL
- en: identifying low- and high-frequency cards, [248](c10.xhtml#Page_248)–[249](c10.xhtml#Page_249)
  prefs: []
  type: TYPE_NORMAL
- en: keylock system tags, cloning, [372](c15.xhtml#Page_372)–[375](c15.xhtml#Page_375)
  prefs: []
  type: TYPE_NORMAL
- en: legitimate RFID reader attack, [262](c10.xhtml#Page_262)–[263](c10.xhtml#Page_263)
  prefs: []
  type: TYPE_NORMAL
- en: low-frequency tag cloning, [249](c10.xhtml#Page_249)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [245](c10.xhtml#Page_245)–[246](c10.xhtml#Page_246)
  prefs: []
  type: TYPE_NORMAL
- en: RAW commands, [258](c10.xhtml#Page_258)–[260](c10.xhtml#Page_260)
  prefs: []
  type: TYPE_NORMAL
- en: RFID fuzzing using custom scripting, [264](c10.xhtml#Page_264)–[268](c10.xhtml#Page_268)
  prefs: []
  type: TYPE_NORMAL
- en: setting up, [246](c10.xhtml#Page_246)
  prefs: []
  type: TYPE_NORMAL
- en: simulating RFID tags, [254](c10.xhtml#Page_254)–[255](c10.xhtml#Page_255)
  prefs: []
  type: TYPE_NORMAL
- en: updating, [246](c10.xhtml#Page_246)–[248](c10.xhtml#Page_248)
  prefs: []
  type: TYPE_NORMAL
- en: pseudorandom number generator (PRNG), *[373](c15.xhtml#Page_373)*,
  prefs: []
  type: TYPE_NORMAL
- en: PTK (Pairwise Transient Key), [300](c12.xhtml#Page_300)
  prefs: []
  type: TYPE_NORMAL
- en: PTR (pointer records), [132](c06.xhtml#Page_132)–[133](c06.xhtml#Page_133),
    [138](c06.xhtml#Page_138)–[140](c06.xhtml#Page_140)
  prefs: []
  type: TYPE_NORMAL
- en: publish-subscribe architecture, *[73](c04.xhtml#Page_73)*
  prefs: []
  type: TYPE_NORMAL
- en: pump service, identifying threats to, [27](c02.xhtml#Page_27)–[28](c02.xhtml#Page_28)
  prefs: []
  type: TYPE_NORMAL
- en: punching holes through firewalls, [121](c06.xhtml#Page_121)–[126](c06.xhtml#Page_126)
  prefs: []
  type: TYPE_NORMAL
- en: Pupy, [391](c15.xhtml#Page_391), [393](c15.xhtml#Page_393), [399](c15.xhtml#Page_399),
    [410](b01.xhtml#Page_410)
  prefs: []
  type: TYPE_NORMAL
- en: '`pupygen` command, [391](c15.xhtml#Page_391)'
  prefs: []
  type: TYPE_NORMAL
- en: Push-Button Configuration (PBC), *[296](c12.xhtml#Page_296)*–[299](c12.xhtml#Page_299)
  prefs: []
  type: TYPE_NORMAL
- en: PuTTY, [319](c13.xhtml#Page_319)–[320](c13.xhtml#Page_320)
  prefs: []
  type: TYPE_NORMAL
- en: PXE (Preboot Execution Environment), *[41](c03.xhtml#Page_41)*
  prefs: []
  type: TYPE_NORMAL
- en: '`pyserial` package, [315](c13.xhtml#Page_315)–[316](c13.xhtml#Page_316)'
  prefs: []
  type: TYPE_NORMAL
- en: Python 2, [128](c06.xhtml#Page_128), [134](c06.xhtml#Page_134)
  prefs: []
  type: TYPE_NORMAL
- en: '**Q**'
  prefs: []
  type: TYPE_NORMAL
- en: Qark, [361](c14.xhtml#Page_361), [410](b01.xhtml#Page_410)
  prefs: []
  type: TYPE_NORMAL
- en: QEMU (Quick Emulator), *[216](c09.xhtml#Page_216)*–[217](c09.xhtml#Page_217),
    [411](b01.xhtml#Page_411)
  prefs: []
  type: TYPE_NORMAL
- en: QU bit, [132](c06.xhtml#Page_132)
  prefs: []
  type: TYPE_NORMAL
- en: '**R**'
  prefs: []
  type: TYPE_NORMAL
- en: '`r2` command, [355](c14.xhtml#Page_355)'
  prefs: []
  type: TYPE_NORMAL
- en: '`rabin2` command, [355](c14.xhtml#Page_355)'
  prefs: []
  type: TYPE_NORMAL
- en: Radare2, [355](c14.xhtml#Page_355)–[356](c14.xhtml#Page_356), [358](c14.xhtml#Page_358),
    [411](b01.xhtml#Page_411)
  prefs: []
  type: TYPE_NORMAL
- en: Radcliffe, Jay, [11](c01.xhtml#Page_11)–[12](c01.xhtml#Page_12), [16](c01.xhtml#Page_16)
  prefs: []
  type: TYPE_NORMAL
- en: Radio Frequency Identification (RFID), *[239](c10.xhtml#Page_239)*. *See also*
    Proxmark3
  prefs: []
  type: TYPE_NORMAL
- en: altering tags, [255](c10.xhtml#Page_255)–[256](c10.xhtml#Page_256)
  prefs: []
  type: TYPE_NORMAL
- en: automating attacks using Scripting Engine, [263](c10.xhtml#Page_263)–[264](c10.xhtml#Page_264)
  prefs: []
  type: TYPE_NORMAL
- en: eavesdropping on tag-to-reader communication, [260](c10.xhtml#Page_260)–[261](c10.xhtml#Page_261)
  prefs: []
  type: TYPE_NORMAL
- en: extracting sector’s key from captured traffic, [261](c10.xhtml#Page_261)–[262](c10.xhtml#Page_262)
  prefs: []
  type: TYPE_NORMAL
- en: fuzzing using custom scripting, [264](c10.xhtml#Page_264)–[268](c10.xhtml#Page_268)
  prefs: []
  type: TYPE_NORMAL
- en: general discussion, [240](c10.xhtml#Page_240)
  prefs: []
  type: TYPE_NORMAL
- en: high-frequency tag cloning, [250](c10.xhtml#Page_250)–[254](c10.xhtml#Page_254)
  prefs: []
  type: TYPE_NORMAL
- en: high-frequency tags, [245](c10.xhtml#Page_245)
  prefs: []
  type: TYPE_NORMAL
- en: identifying low- and high-frequency cards, [248](c10.xhtml#Page_248)–[249](c10.xhtml#Page_249)
  prefs: []
  type: TYPE_NORMAL
- en: keylock system tags, cloning, [372](c15.xhtml#Page_372)–[375](c15.xhtml#Page_375)
  prefs: []
  type: TYPE_NORMAL
- en: legitimate reader attack, [262](c10.xhtml#Page_262)–[263](c10.xhtml#Page_263)
  prefs: []
  type: TYPE_NORMAL
- en: low-frequency tag cloning, [249](c10.xhtml#Page_249)
  prefs: []
  type: TYPE_NORMAL
- en: low-frequency tags, [244](c10.xhtml#Page_244)–[245](c10.xhtml#Page_245)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [239](c10.xhtml#Page_239)
  prefs: []
  type: TYPE_NORMAL
- en: passive and active technologies, [241](c10.xhtml#Page_241)–[242](c10.xhtml#Page_242)
  prefs: []
  type: TYPE_NORMAL
- en: radio frequency bands, [240](c10.xhtml#Page_240)–[241](c10.xhtml#Page_241)
  prefs: []
  type: TYPE_NORMAL
- en: RAW commands for tags, [258](c10.xhtml#Page_258)–[260](c10.xhtml#Page_260)
  prefs: []
  type: TYPE_NORMAL
- en: simulating tags, [254](c10.xhtml#Page_254)–[255](c10.xhtml#Page_255)
  prefs: []
  type: TYPE_NORMAL
- en: structure of tags, [242](c10.xhtml#Page_242)–[244](c10.xhtml#Page_244)
  prefs: []
  type: TYPE_NORMAL
- en: radio jamming, *[291](c12.xhtml#Page_291)*
  prefs: []
  type: TYPE_NORMAL
- en: '`radio rx 0` command, [316](c13.xhtml#Page_316)–[317](c13.xhtml#Page_317)'
  prefs: []
  type: TYPE_NORMAL
- en: '`radio set crc off` command, [316](c13.xhtml#Page_316)–[317](c13.xhtml#Page_317)'
  prefs: []
  type: TYPE_NORMAL
- en: '`radio set sf sf7` command, [316](c13.xhtml#Page_316)–[317](c13.xhtml#Page_317)'
  prefs: []
  type: TYPE_NORMAL
- en: '`radio set wdt 0` command, [316](c13.xhtml#Page_316)'
  prefs: []
  type: TYPE_NORMAL
- en: RADIUS (Remote Authentication Dial-In User Service) server, *[304](c12.xhtml#Page_304)*
  prefs: []
  type: TYPE_NORMAL
- en: '`randomize()` function, [265](c10.xhtml#Page_265)–[266](c10.xhtml#Page_266)'
  prefs: []
  type: TYPE_NORMAL
- en: ransomware attacks, [5](c01.xhtml#Page_5)
  prefs: []
  type: TYPE_NORMAL
- en: rarity level, *[68](c04.xhtml#Page_68)*
  prefs: []
  type: TYPE_NORMAL
- en: '`rarity` Nmap service probe directive, [72](c04.xhtml#Page_72)'
  prefs: []
  type: TYPE_NORMAL
- en: Raspberry Pi, transforming into radio transmitter, [378](c15.xhtml#Page_378)–[379](c15.xhtml#Page_379)
  prefs: []
  type: TYPE_NORMAL
- en: rate limiting, *[297](c12.xhtml#Page_297)*
  prefs: []
  type: TYPE_NORMAL
- en: RAW commands for RFID tags, [258](c10.xhtml#Page_258)–[260](c10.xhtml#Page_260)
  prefs: []
  type: TYPE_NORMAL
- en: RBAC (role-based access control), [49](c03.xhtml#Page_49)–[50](c03.xhtml#Page_50)
  prefs: []
  type: TYPE_NORMAL
- en: '`rdbl` parameter, [253](c10.xhtml#Page_253)'
  prefs: []
  type: TYPE_NORMAL
- en: Read-Only Memory (ROM), *[338](c14.xhtml#Page_338)*
  prefs: []
  type: TYPE_NORMAL
- en: Realtek RTL[283](c11.xhtml#Page_283)2U chipset, [376](c15.xhtml#Page_376)
  prefs: []
  type: TYPE_NORMAL
- en: Reaver, [297](c12.xhtml#Page_297), [411](b01.xhtml#Page_411)
  prefs: []
  type: TYPE_NORMAL
- en: Receive (RX) port, UART, [159](c07.xhtml#Page_159), [162](c07.xhtml#Page_162),
    [178](c07.xhtml#Page_178)
  prefs: []
  type: TYPE_NORMAL
- en: '`receive(dcm)` function, [109](c05.xhtml#Page_109)'
  prefs: []
  type: TYPE_NORMAL
- en: reconnaissance
  prefs: []
  type: TYPE_NORMAL
- en: active, *[43](c03.xhtml#Page_43)*–[45](c03.xhtml#Page_45)
  prefs: []
  type: TYPE_NORMAL
- en: with DNS-SD, [133](c06.xhtml#Page_133)–[134](c06.xhtml#Page_134)
  prefs: []
  type: TYPE_NORMAL
- en: with mDNS, [133](c06.xhtml#Page_133)–[134](c06.xhtml#Page_134)
  prefs: []
  type: TYPE_NORMAL
- en: passive, *[37](c03.xhtml#Page_37)*–[40](c03.xhtml#Page_40), [292](c12.xhtml#Page_292)
  prefs: []
  type: TYPE_NORMAL
- en: '`recv_data()` function, [174](c07.xhtml#Page_174)'
  prefs: []
  type: TYPE_NORMAL
- en: Remote Authentication Dial-In User Service (RADIUS) server, *[304](c12.xhtml#Page_304)*
  prefs: []
  type: TYPE_NORMAL
- en: remotely controlling speed and incline of treadmills, [394](c15.xhtml#Page_394)–[398](c15.xhtml#Page_398)
  prefs: []
  type: TYPE_NORMAL
- en: remote maintenance, security testing for, [53](c03.xhtml#Page_53)
  prefs: []
  type: TYPE_NORMAL
- en: remote shell access, getting, [391](c15.xhtml#Page_391)
  prefs: []
  type: TYPE_NORMAL
- en: replay attacks, *[23](c02.xhtml#Page_23)*, *[31](c02.xhtml#Page_31)*
  prefs: []
  type: TYPE_NORMAL
- en: on control server service, [23](c02.xhtml#Page_23)
  prefs: []
  type: TYPE_NORMAL
- en: LoRaWAN, [330](c13.xhtml#Page_330)–[331](c13.xhtml#Page_331)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [31](c02.xhtml#Page_31)
  prefs: []
  type: TYPE_NORMAL
- en: Repository APK, [397](c15.xhtml#Page_397)–[399](c15.xhtml#Page_399)
  prefs: []
  type: TYPE_NORMAL
- en: repudiation, *[22](c02.xhtml#Page_22)*
  prefs: []
  type: TYPE_NORMAL
- en: on control server service, [23](c02.xhtml#Page_23)
  prefs: []
  type: TYPE_NORMAL
- en: on drug library, [23](c02.xhtml#Page_23)
  prefs: []
  type: TYPE_NORMAL
- en: on firmware, [26](c02.xhtml#Page_26)
  prefs: []
  type: TYPE_NORMAL
- en: on hardware, [27](c02.xhtml#Page_27)
  prefs: []
  type: TYPE_NORMAL
- en: on operating system, [25](c02.xhtml#Page_25)
  prefs: []
  type: TYPE_NORMAL
- en: on pump service, [28](c02.xhtml#Page_28)
  prefs: []
  type: TYPE_NORMAL
- en: on restrictive user interface, [22](c02.xhtml#Page_22)
  prefs: []
  type: TYPE_NORMAL
- en: STRIDE threat classification model, [19](c02.xhtml#Page_19)
  prefs: []
  type: TYPE_NORMAL
- en: Request all (REQA) command, [258](c10.xhtml#Page_258)–[259](c10.xhtml#Page_259)
  prefs: []
  type: TYPE_NORMAL
- en: '`RequestConnection` command, [12](c01.xhtml#Page_12)9'
  prefs: []
  type: TYPE_NORMAL
- en: '`RequestTermination` command, [12](c01.xhtml#Page_12)9'
  prefs: []
  type: TYPE_NORMAL
- en: '`restore` parameter, [254](c10.xhtml#Page_254)'
  prefs: []
  type: TYPE_NORMAL
- en: restrictive user interface (RUI), *[22](c02.xhtml#Page_22)*–[23](c02.xhtml#Page_23)
  prefs: []
  type: TYPE_NORMAL
- en: '`ret_code` field, [83](c04.xhtml#Page_83)'
  prefs: []
  type: TYPE_NORMAL
- en: reverse engineering protocols, [46](c03.xhtml#Page_46)–[47](c03.xhtml#Page_47)
  prefs: []
  type: TYPE_NORMAL
- en: revocation evasion attack, [7](c01.xhtml#Page_7)–[8](c01.xhtml#Page_8)
  prefs: []
  type: TYPE_NORMAL
- en: RfCat, [411](b01.xhtml#Page_411)
  prefs: []
  type: TYPE_NORMAL
- en: RFID. *See* Radio Frequency Identification (RFID)
  prefs: []
  type: TYPE_NORMAL
- en: '`rfm9x` class, [322](c13.xhtml#Page_322)'
  prefs: []
  type: TYPE_NORMAL
- en: '`rfm9x.receive()` function, [322](c13.xhtml#Page_322)'
  prefs: []
  type: TYPE_NORMAL
- en: '`rfm9x.rssi()` function, [322](c13.xhtml#Page_322)'
  prefs: []
  type: TYPE_NORMAL
- en: RFQuack, [411](b01.xhtml#Page_411)
  prefs: []
  type: TYPE_NORMAL
- en: Robust Security Network (RSN), *[301](c12.xhtml#Page_301)*
  prefs: []
  type: TYPE_NORMAL
- en: Rogers, David, [14](c01.xhtml#Page_14)
  prefs: []
  type: TYPE_NORMAL
- en: role-based access control (RBAC), *[49](c03.xhtml#Page_49)*–[50](c03.xhtml#Page_50)
  prefs: []
  type: TYPE_NORMAL
- en: ROM (Read-Only Memory), *[338](c14.xhtml#Page_338)*
  prefs: []
  type: TYPE_NORMAL
- en: root detection, avoiding, [368](c14.xhtml#Page_368)–[370](c14.xhtml#Page_370)
  prefs: []
  type: TYPE_NORMAL
- en: root user, [394](c15.xhtml#Page_394)
  prefs: []
  type: TYPE_NORMAL
- en: Rpitx, [378](c15.xhtml#Page_378)–[379](c15.xhtml#Page_379), [411](b01.xhtml#Page_411)
  prefs: []
  type: TYPE_NORMAL
- en: '`rpitx` command, [378](c15.xhtml#Page_378)–[379](c15.xhtml#Page_379)'
  prefs: []
  type: TYPE_NORMAL
- en: RSN (Robust Security Network), *[301](c12.xhtml#Page_301)*
  prefs: []
  type: TYPE_NORMAL
- en: RTCP protocol, [380](c15.xhtml#Page_380)
  prefs: []
  type: TYPE_NORMAL
- en: RTL-SDR DVB-T dongle, [375](c15.xhtml#Page_375)–[376](c15.xhtml#Page_376), [411](b01.xhtml#Page_411)
  prefs: []
  type: TYPE_NORMAL
- en: '*rtpdump* file, [383](c15.xhtml#Page_383)–[384](c15.xhtml#Page_384)'
  prefs: []
  type: TYPE_NORMAL
- en: '`rtpplay` command, [384](c15.xhtml#Page_384)'
  prefs: []
  type: TYPE_NORMAL
- en: RTP protocol, [380](c15.xhtml#Page_380)
  prefs: []
  type: TYPE_NORMAL
- en: RTP stream, extracting, [383](c15.xhtml#Page_383)
  prefs: []
  type: TYPE_NORMAL
- en: RTP Tools, [384](c15.xhtml#Page_384), [412](b01.xhtml#Page_412)
  prefs: []
  type: TYPE_NORMAL
- en: '`RTSP DESCRIBE` request, [381](c15.xhtml#Page_381)'
  prefs: []
  type: TYPE_NORMAL
- en: '`RTSP OPTIONS` request, [381](c15.xhtml#Page_381)'
  prefs: []
  type: TYPE_NORMAL
- en: RTSP protocol, [380](c15.xhtml#Page_380)
  prefs: []
  type: TYPE_NORMAL
- en: RUI (restrictive user interface), [22](c02.xhtml#Page_22)–[23](c02.xhtml#Page_23)
  prefs: []
  type: TYPE_NORMAL
- en: RX (Receive) port, UART, [159](c07.xhtml#Page_159), [162](c07.xhtml#Page_162),
    [178](c07.xhtml#Page_178)
  prefs: []
  type: TYPE_NORMAL
- en: '**S**'
  prefs: []
  type: TYPE_NORMAL
- en: S3Scanner, [209](c09.xhtml#Page_209)–[210](c09.xhtml#Page_210), [412](b01.xhtml#Page_412)
  prefs: []
  type: TYPE_NORMAL
- en: Saleae logic analyzer, [163](c07.xhtml#Page_163), [176](c07.xhtml#Page_176)–[177](c07.xhtml#Page_177)
  prefs: []
  type: TYPE_NORMAL
- en: SAMD21 microcontroller, [318](c13.xhtml#Page_318)
  prefs: []
  type: TYPE_NORMAL
- en: SAMPLE/PRELOAD command, JTAG, [164](c07.xhtml#Page_164)
  prefs: []
  type: TYPE_NORMAL
- en: sandbox, [340](c14.xhtml#Page_340), [347](c14.xhtml#Page_347)
  prefs: []
  type: TYPE_NORMAL
- en: SCAN request, *[270](c11.xhtml#Page_270)*
  prefs: []
  type: TYPE_NORMAL
- en: Scapy, [64](c04.xhtml#Page_64)–[65](c04.xhtml#Page_65), [412](b01.xhtml#Page_412)
  prefs: []
  type: TYPE_NORMAL
- en: Schlage door lock companion app, [368](c14.xhtml#Page_368)
  prefs: []
  type: TYPE_NORMAL
- en: SCK (Serial Clock), [191](c08.xhtml#Page_191)
  prefs: []
  type: TYPE_NORMAL
- en: SCL (serial clock line), [197](c08.xhtml#Page_197), [199](c08.xhtml#Page_199)–[200](c08.xhtml#Page_200)
  prefs: []
  type: TYPE_NORMAL
- en: screenshots, application, [352](c14.xhtml#Page_352)
  prefs: []
  type: TYPE_NORMAL
- en: Scripting Engine, Proxmark3, [263](c10.xhtml#Page_263)–[264](c10.xhtml#Page_264)
  prefs: []
  type: TYPE_NORMAL
- en: '`script list` command, [263](c10.xhtml#Page_263)'
  prefs: []
  type: TYPE_NORMAL
- en: '`script run` command, [263](c10.xhtml#Page_263)'
  prefs: []
  type: TYPE_NORMAL
- en: '`script run fuzzer` command, [267](c10.xhtml#Page_267)'
  prefs: []
  type: TYPE_NORMAL
- en: SDA (serial data line), [197](c08.xhtml#Page_197), [199](c08.xhtml#Page_199)–[200](c08.xhtml#Page_200)
  prefs: []
  type: TYPE_NORMAL
- en: SD card directory, inspecting, [367](c14.xhtml#Page_367)
  prefs: []
  type: TYPE_NORMAL
- en: SDP (Session Description Protocol) file, [381](c15.xhtml#Page_381)–[383](c15.xhtml#Page_383)
  prefs: []
  type: TYPE_NORMAL
- en: SDR (software defined radio), *[375](c15.xhtml#Page_375)*–[376](c15.xhtml#Page_376)
  prefs: []
  type: TYPE_NORMAL
- en: '`search` parameter, [248](c10.xhtml#Page_248)'
  prefs: []
  type: TYPE_NORMAL
- en: sector trailer, [250](c10.xhtml#Page_250)–*[251](c10.xhtml#Page_251)*
  prefs: []
  type: TYPE_NORMAL
- en: secure boot, *[341](c14.xhtml#Page_341)*
  prefs: []
  type: TYPE_NORMAL
- en: Secure Enclave, *[341](c14.xhtml#Page_341)*
  prefs: []
  type: TYPE_NORMAL
- en: secure IPC, [340](c14.xhtml#Page_340)
  prefs: []
  type: TYPE_NORMAL
- en: secure mode, Wi-Fi networks, *[288](c12.xhtml#Page_288)*
  prefs: []
  type: TYPE_NORMAL
- en: SecureRom, *[341](c14.xhtml#Page_341)*
  prefs: []
  type: TYPE_NORMAL
- en: Secure RTP (SRTP) protocol, *[385](c15.xhtml#Page_385)*
  prefs: []
  type: TYPE_NORMAL
- en: security breaches, [32](c02.xhtml#Page_32)
  prefs: []
  type: TYPE_NORMAL
- en: security testing methodology
  prefs: []
  type: TYPE_NORMAL
- en: cloud testing, [54](c03.xhtml#Page_54)
  prefs: []
  type: TYPE_NORMAL
- en: conceptual layers, [36](c03.xhtml#Page_36)
  prefs: []
  type: TYPE_NORMAL
- en: hardware layer, [40](c03.xhtml#Page_40)–[43](c03.xhtml#Page_43)
  prefs: []
  type: TYPE_NORMAL
- en: host configuration review, [50](c03.xhtml#Page_50)–[54](c03.xhtml#Page_54)
  prefs: []
  type: TYPE_NORMAL
- en: mobile applications, [54](c03.xhtml#Page_54)
  prefs: []
  type: TYPE_NORMAL
- en: network layer, [43](c03.xhtml#Page_43)–[47](c03.xhtml#Page_47)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [35](c03.xhtml#Page_35)–[37](c03.xhtml#Page_37)
  prefs: []
  type: TYPE_NORMAL
- en: passive reconnaissance, [37](c03.xhtml#Page_37)–[40](c03.xhtml#Page_40)
  prefs: []
  type: TYPE_NORMAL
- en: web applications, [48](c03.xhtml#Page_48)–[50](c03.xhtml#Page_50)
  prefs: []
  type: TYPE_NORMAL
- en: seed, *[264](c10.xhtml#Page_264)*
  prefs: []
  type: TYPE_NORMAL
- en: Segger J-Link Debug Probe, *[165](c07.xhtml#Page_165)*
  prefs: []
  type: TYPE_NORMAL
- en: Select card command, [258](c10.xhtml#Page_258)–[260](c10.xhtml#Page_260)
  prefs: []
  type: TYPE_NORMAL
- en: selective jamming, *[291](c12.xhtml#Page_291)*
  prefs: []
  type: TYPE_NORMAL
- en: semi-passive RFID technologies, *[242](c10.xhtml#Page_242)*
  prefs: []
  type: TYPE_NORMAL
- en: '`send_cmd` function, [317](c13.xhtml#Page_317)'
  prefs: []
  type: TYPE_NORMAL
- en: '`send(dcm, data)` function, [109](c05.xhtml#Page_109)'
  prefs: []
  type: TYPE_NORMAL
- en: sensitive log files, [234](c09.xhtml#Page_234)
  prefs: []
  type: TYPE_NORMAL
- en: Serial Clock (SCK), [191](c08.xhtml#Page_191)
  prefs: []
  type: TYPE_NORMAL
- en: serial clock line (SCL), [197](c08.xhtml#Page_197), [199](c08.xhtml#Page_199)–[200](c08.xhtml#Page_200)
  prefs: []
  type: TYPE_NORMAL
- en: serial data line (SDA), [197](c08.xhtml#Page_197), [199](c08.xhtml#Page_199)–[200](c08.xhtml#Page_200)
  prefs: []
  type: TYPE_NORMAL
- en: Serial Monitor, *[180](c07.xhtml#Page_180)*, [310](c13.xhtml#Page_310), [313](c13.xhtml#Page_313),
    [319](c13.xhtml#Page_319)–[320](c13.xhtml#Page_320)
  prefs: []
  type: TYPE_NORMAL
- en: Serial Peripheral Interface (SPI), *[189](c08.xhtml#Page_189)*
  prefs: []
  type: TYPE_NORMAL
- en: dumping EEPROM flash memory chips with, [192](c08.xhtml#Page_192)–[196](c08.xhtml#Page_196)
  prefs: []
  type: TYPE_NORMAL
- en: general discussion, [191](c08.xhtml#Page_191)
  prefs: []
  type: TYPE_NORMAL
- en: hardware for communicating with, [190](c08.xhtml#Page_190)–[191](c08.xhtml#Page_191)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [189](c08.xhtml#Page_189)
  prefs: []
  type: TYPE_NORMAL
- en: serial protocols, *[158](c07.xhtml#Page_158)*
  prefs: []
  type: TYPE_NORMAL
- en: Serial Wire Debug (SWD), *[158](c07.xhtml#Page_158)*
  prefs: []
  type: TYPE_NORMAL
- en: hacking devices through
  prefs: []
  type: TYPE_NORMAL
- en: coding target program in Arduino, [172](c07.xhtml#Page_172)–[174](c07.xhtml#Page_174)
  prefs: []
  type: TYPE_NORMAL
- en: debugging environment, setting up, [170](c07.xhtml#Page_170)–[172](c07.xhtml#Page_172)
  prefs: []
  type: TYPE_NORMAL
- en: debugging target, [181](c07.xhtml#Page_181)–[188](c07.xhtml#Page_188)
  prefs: []
  type: TYPE_NORMAL
- en: flashing and running Arduino program, [174](c07.xhtml#Page_174)–[180](c07.xhtml#Page_180)
  prefs: []
  type: TYPE_NORMAL
- en: STM32F103C8T6 target device, [169](c07.xhtml#Page_169)–[170](c07.xhtml#Page_170)
  prefs: []
  type: TYPE_NORMAL
- en: tools for, [168](c07.xhtml#Page_168)–[169](c07.xhtml#Page_169)
  prefs: []
  type: TYPE_NORMAL
- en: hardware tools for communicating with, [165](c07.xhtml#Page_165)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [158](c07.xhtml#Page_158), [165](c07.xhtml#Page_165)
  prefs: []
  type: TYPE_NORMAL
- en: Serial Wire or JTAG Debug Port (SWJ-DP), *[165](c07.xhtml#Page_165)*
  prefs: []
  type: TYPE_NORMAL
- en: '`ser` Serial object, [317](c13.xhtml#Page_317)'
  prefs: []
  type: TYPE_NORMAL
- en: server impersonation attacks, [94](c05.xhtml#Page_94)
  prefs: []
  type: TYPE_NORMAL
- en: '`server_ip` variable, [230](c09.xhtml#Page_230)'
  prefs: []
  type: TYPE_NORMAL
- en: server misconfiguration, testing for, [54](c03.xhtml#Page_54)
  prefs: []
  type: TYPE_NORMAL
- en: '`<service>` tag, [120](c06.xhtml#Page_120)'
  prefs: []
  type: TYPE_NORMAL
- en: Service Discovery phase, Wi-Fi Direct, [296](c12.xhtml#Page_296)
  prefs: []
  type: TYPE_NORMAL
- en: services, BLE, *[272](c11.xhtml#Page_272)*
  prefs: []
  type: TYPE_NORMAL
- en: service scanner, DICOM. *See* DICOM service scanner
  prefs: []
  type: TYPE_NORMAL
- en: service scanning, [44](c03.xhtml#Page_44)
  prefs: []
  type: TYPE_NORMAL
- en: service version detection, [44](c03.xhtml#Page_44)
  prefs: []
  type: TYPE_NORMAL
- en: Session Description Protocol (SDP) file, [381](c15.xhtml#Page_381)–[383](c15.xhtml#Page_383)
  prefs: []
  type: TYPE_NORMAL
- en: session management, [49](c03.xhtml#Page_49)
  prefs: []
  type: TYPE_NORMAL
- en: '`SetAutoDisconnectTime` command, [12](c01.xhtml#Page_12)9'
  prefs: []
  type: TYPE_NORMAL
- en: '`SetConnectionType` command, [128](c06.xhtml#Page_128)'
  prefs: []
  type: TYPE_NORMAL
- en: '`SetIdleDisconnectTime` command, [12](c01.xhtml#Page_12)9'
  prefs: []
  type: TYPE_NORMAL
- en: settings tampering attacks, *[32](c02.xhtml#Page_32)*
  prefs: []
  type: TYPE_NORMAL
- en: '`setup()` function, [173](c07.xhtml#Page_173), [312](c13.xhtml#Page_312)–[313](c13.xhtml#Page_313)'
  prefs: []
  type: TYPE_NORMAL
- en: '`SETUP` request, [381](c15.xhtml#Page_381)–[382](c15.xhtml#Page_382)'
  prefs: []
  type: TYPE_NORMAL
- en: '`SetWarnDisconnectDelay` command, [12](c01.xhtml#Page_12)9'
  prefs: []
  type: TYPE_NORMAL
- en: SGX, *[341](c14.xhtml#Page_341)*
  prefs: []
  type: TYPE_NORMAL
- en: shared memory segment, *[397](c15.xhtml#Page_397)*
  prefs: []
  type: TYPE_NORMAL
- en: Shikra, [412](b01.xhtml#Page_412)
  prefs: []
  type: TYPE_NORMAL
- en: short-range radio, [239](c10.xhtml#Page_239). *See also* specific technologies
  prefs: []
  type: TYPE_NORMAL
- en: '`showRootStatus()` function, [368](c14.xhtml#Page_368)–[369](c14.xhtml#Page_369)'
  prefs: []
  type: TYPE_NORMAL
- en: side-channel analysis, *[330](c13.xhtml#Page_330)*
  prefs: []
  type: TYPE_NORMAL
- en: side-channel leaks, [367](c14.xhtml#Page_367)–[368](c14.xhtml#Page_368)
  prefs: []
  type: TYPE_NORMAL
- en: signal jamming attacks, *[31](c02.xhtml#Page_31)*
  prefs: []
  type: TYPE_NORMAL
- en: signal-to-noise ratio (SNR), *[375](c15.xhtml#Page_375)*
  prefs: []
  type: TYPE_NORMAL
- en: signatures, application, [340](c14.xhtml#Page_340)
  prefs: []
  type: TYPE_NORMAL
- en: signing, [94](c05.xhtml#Page_94)
  prefs: []
  type: TYPE_NORMAL
- en: SIMATIC WinCC OA Operator application, [348](c14.xhtml#Page_348)
  prefs: []
  type: TYPE_NORMAL
- en: '`sim` parameter, [255](c10.xhtml#Page_255)'
  prefs: []
  type: TYPE_NORMAL
- en: Simple Object Access Protocol (SOAP), *[120](c06.xhtml#Page_120)*
  prefs: []
  type: TYPE_NORMAL
- en: simulating RFID tags, [254](c10.xhtml#Page_254)–[255](c10.xhtml#Page_255)
  prefs: []
  type: TYPE_NORMAL
- en: skeleton file for mDNS poisoner, [141](c06.xhtml#Page_141)–[143](c06.xhtml#Page_143)
  prefs: []
  type: TYPE_NORMAL
- en: skimming attacks, *[23](c02.xhtml#Page_23)*
  prefs: []
  type: TYPE_NORMAL
- en: small outline integrated (SOIC) clips, [190](c08.xhtml#Page_190), [193](c08.xhtml#Page_193)
  prefs: []
  type: TYPE_NORMAL
- en: smart door locks, circumventing, [372](c15.xhtml#Page_372)–[375](c15.xhtml#Page_375)
  prefs: []
  type: TYPE_NORMAL
- en: smart homes. *See also* smart treadmills, attacking
  prefs: []
  type: TYPE_NORMAL
- en: cloning RFID tag of keylock system, [372](c15.xhtml#Page_372)–[375](c15.xhtml#Page_375)
  prefs: []
  type: TYPE_NORMAL
- en: jamming wireless alarms, [375](c15.xhtml#Page_375)–[379](c15.xhtml#Page_379)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [371](c15.xhtml#Page_371)–[372](c15.xhtml#Page_372)
  prefs: []
  type: TYPE_NORMAL
- en: playing back IP camera stream
  prefs: []
  type: TYPE_NORMAL
- en: analyzing network traffic, [380](c15.xhtml#Page_380)–[382](c15.xhtml#Page_382)
  prefs: []
  type: TYPE_NORMAL
- en: extracting video stream, [382](c15.xhtml#Page_382)–[385](c15.xhtml#Page_385)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [379](c15.xhtml#Page_379)–[380](c15.xhtml#Page_380)
  prefs: []
  type: TYPE_NORMAL
- en: streaming protocols, [380](c15.xhtml#Page_380)
  prefs: []
  type: TYPE_NORMAL
- en: smart lock systems, [7](c01.xhtml#Page_7)–[8](c01.xhtml#Page_8)
  prefs: []
  type: TYPE_NORMAL
- en: '`smartQuotesType` property, [354](c14.xhtml#Page_354)'
  prefs: []
  type: TYPE_NORMAL
- en: smart treadmills, attacking
  prefs: []
  type: TYPE_NORMAL
- en: Android operating system for, [386](c15.xhtml#Page_386)–[387](c15.xhtml#Page_387)
  prefs: []
  type: TYPE_NORMAL
- en: escalating privileges, [394](c15.xhtml#Page_394)
  prefs: []
  type: TYPE_NORMAL
- en: injuries due to, [400](c15.xhtml#Page_400)
  prefs: []
  type: TYPE_NORMAL
- en: installing APKs, [391](c15.xhtml#Page_391)–[393](c15.xhtml#Page_393)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [385](c15.xhtml#Page_385)
  prefs: []
  type: TYPE_NORMAL
- en: remotely controlling speed and incline, [394](c15.xhtml#Page_394)–[398](c15.xhtml#Page_398)
  prefs: []
  type: TYPE_NORMAL
- en: remote shell access, [391](c15.xhtml#Page_391)
  prefs: []
  type: TYPE_NORMAL
- en: software and physical buttons, disabling, [398](c15.xhtml#Page_398)–[400](c15.xhtml#Page_400)
  prefs: []
  type: TYPE_NORMAL
- en: UI restrictions, circumventing, [387](c15.xhtml#Page_387)–[390](c15.xhtml#Page_390)
  prefs: []
  type: TYPE_NORMAL
- en: SMS messages, forcing devices to send, [351](c14.xhtml#Page_351)–[352](c14.xhtml#Page_352),
    [365](c14.xhtml#Page_365)–[366](c14.xhtml#Page_366)
  prefs: []
  type: TYPE_NORMAL
- en: '*Snapshots* folder, [352](c14.xhtml#Page_352)'
  prefs: []
  type: TYPE_NORMAL
- en: sniff CDP mode, [66](c04.xhtml#Page_66)
  prefs: []
  type: TYPE_NORMAL
- en: sniffer macro, [204](c08.xhtml#Page_204)–[205](c08.xhtml#Page_205)
  prefs: []
  type: TYPE_NORMAL
- en: sniffing LoRa traffic with CatWAN USB stick, [318](c13.xhtml#Page_318)–[322](c13.xhtml#Page_322)
  prefs: []
  type: TYPE_NORMAL
- en: sniff mode, CDP, *[66](c04.xhtml#Page_66)*
  prefs: []
  type: TYPE_NORMAL
- en: SNR (signal-to-noise ratio), *[375](c15.xhtml#Page_375)*
  prefs: []
  type: TYPE_NORMAL
- en: SOAP (Simple Object Access Protocol), *[120](c06.xhtml#Page_120)*
  prefs: []
  type: TYPE_NORMAL
- en: socket creation functions, [107](c05.xhtml#Page_107)–[108](c05.xhtml#Page_108)
  prefs: []
  type: TYPE_NORMAL
- en: socket destruction functions, [107](c05.xhtml#Page_107)–[108](c05.xhtml#Page_108)
  prefs: []
  type: TYPE_NORMAL
- en: '`socketserver` framework, [142](c06.xhtml#Page_142), [144](c06.xhtml#Page_144)'
  prefs: []
  type: TYPE_NORMAL
- en: '`softmatch` Nmap service probe directive, [72](c04.xhtml#Page_72)'
  prefs: []
  type: TYPE_NORMAL
- en: software composition analysis, *[52](c03.xhtml#Page_52)*
  prefs: []
  type: TYPE_NORMAL
- en: software defined radio (SDR), *[375](c15.xhtml#Page_375)*–[376](c15.xhtml#Page_376)
  prefs: []
  type: TYPE_NORMAL
- en: software fragmentation, *[338](c14.xhtml#Page_338)*
  prefs: []
  type: TYPE_NORMAL
- en: software integrity control, *[18](c02.xhtml#Page_18)*
  prefs: []
  type: TYPE_NORMAL
- en: software of treadmills, disabling, [398](c15.xhtml#Page_398)–[400](c15.xhtml#Page_400)
  prefs: []
  type: TYPE_NORMAL
- en: software whitelisting, *[18](c02.xhtml#Page_18)*
  prefs: []
  type: TYPE_NORMAL
- en: SOIC (small outline integrated) clips, [190](c08.xhtml#Page_190), [193](c08.xhtml#Page_193)
  prefs: []
  type: TYPE_NORMAL
- en: speed of treadmills, remotely controlling, [394](c15.xhtml#Page_394)–[398](c15.xhtml#Page_398)
  prefs: []
  type: TYPE_NORMAL
- en: SPI. *See* Serial Peripheral Interface (SPI)
  prefs: []
  type: TYPE_NORMAL
- en: spidering tools, *[48](c03.xhtml#Page_48)*
  prefs: []
  type: TYPE_NORMAL
- en: '*spiflash.py* script, [196](c08.xhtml#Page_196)'
  prefs: []
  type: TYPE_NORMAL
- en: spoof CDP mode, [66](c04.xhtml#Page_66)
  prefs: []
  type: TYPE_NORMAL
- en: spoofing, *[22](c02.xhtml#Page_22)*, *[23](c02.xhtml#Page_23)*
  prefs: []
  type: TYPE_NORMAL
- en: on control server service, [23](c02.xhtml#Page_23)
  prefs: []
  type: TYPE_NORMAL
- en: on drug library, [24](c02.xhtml#Page_24)
  prefs: []
  type: TYPE_NORMAL
- en: on firmware, [25](c02.xhtml#Page_25)
  prefs: []
  type: TYPE_NORMAL
- en: on hardware, [27](c02.xhtml#Page_27)
  prefs: []
  type: TYPE_NORMAL
- en: MAC address, [283](c11.xhtml#Page_283)–[285](c11.xhtml#Page_285)
  prefs: []
  type: TYPE_NORMAL
- en: on operating system, [25](c02.xhtml#Page_25)
  prefs: []
  type: TYPE_NORMAL
- en: on pump service, [28](c02.xhtml#Page_28)
  prefs: []
  type: TYPE_NORMAL
- en: on restrictive user interface, [22](c02.xhtml#Page_22)
  prefs: []
  type: TYPE_NORMAL
- en: STRIDE threat classification model, [18](c02.xhtml#Page_18)
  prefs: []
  type: TYPE_NORMAL
- en: spoof mode, CDP, *[66](c04.xhtml#Page_66)*
  prefs: []
  type: TYPE_NORMAL
- en: '`spooftooph` utility, [284](c11.xhtml#Page_284)'
  prefs: []
  type: TYPE_NORMAL
- en: spoof with a pre-made packet mode, CDP, *[66](c04.xhtml#Page_66)*
  prefs: []
  type: TYPE_NORMAL
- en: spreading factor, *[313](c13.xhtml#Page_313)*, [316](c13.xhtml#Page_316)–[317](c13.xhtml#Page_317)
  prefs: []
  type: TYPE_NORMAL
- en: spread spectrum, *[308](c13.xhtml#Page_308)*
  prefs: []
  type: TYPE_NORMAL
- en: SQL injection attacks, *[24](c02.xhtml#Page_24)*, [120](c06.xhtml#Page_120),
    [354](c14.xhtml#Page_354)
  prefs: []
  type: TYPE_NORMAL
- en: Squashfs format, *[71](c04.xhtml#Page_71)*
  prefs: []
  type: TYPE_NORMAL
- en: SRTP (Secure RTP) protocol, *[385](c15.xhtml#Page_385)*
  prefs: []
  type: TYPE_NORMAL
- en: SRV record, [132](c06.xhtml#Page_132)–[133](c06.xhtml#Page_133), [135](c06.xhtml#Page_135),
    [138](c06.xhtml#Page_138)–[140](c06.xhtml#Page_140), [144](c06.xhtml#Page_144)
  prefs: []
  type: TYPE_NORMAL
- en: SSL certificate authority (CA), [357](c14.xhtml#Page_357)
  prefs: []
  type: TYPE_NORMAL
- en: '`sslports` Nmap service probe directive, [72](c04.xhtml#Page_72)'
  prefs: []
  type: TYPE_NORMAL
- en: STA (station), *[288](c12.xhtml#Page_288)*
  prefs: []
  type: TYPE_NORMAL
- en: stack-smashing protection, *[346](c14.xhtml#Page_346)*
  prefs: []
  type: TYPE_NORMAL
- en: Stais, Ioannis, [385](c15.xhtml#Page_385)
  prefs: []
  type: TYPE_NORMAL
- en: standards, *[8](c01.xhtml#Page_8)*–[10](c01.xhtml#Page_10)
  prefs: []
  type: TYPE_NORMAL
- en: star-of-stars topology, *[309](c13.xhtml#Page_309)*
  prefs: []
  type: TYPE_NORMAL
- en: start bit, UART, [158](c07.xhtml#Page_158)
  prefs: []
  type: TYPE_NORMAL
- en: state anti-hacking laws, [13](c01.xhtml#Page_13)
  prefs: []
  type: TYPE_NORMAL
- en: states, Ncrack, [79](c04.xhtml#Page_79)–[80](c04.xhtml#Page_80)
  prefs: []
  type: TYPE_NORMAL
- en: static analysis
  prefs: []
  type: TYPE_NORMAL
- en: of firmware filesystem contents, [213](c09.xhtml#Page_213)–[216](c09.xhtml#Page_216)
  prefs: []
  type: TYPE_NORMAL
- en: InsecureBankV2 app, [361](c14.xhtml#Page_361)–[362](c14.xhtml#Page_362)
  prefs: []
  type: TYPE_NORMAL
- en: OWASP iGoat app, [344](c14.xhtml#Page_344)–[346](c14.xhtml#Page_346)
  prefs: []
  type: TYPE_NORMAL
- en: static patching
  prefs: []
  type: TYPE_NORMAL
- en: jailbreak detection, avoiding with, [358](c14.xhtml#Page_358)–[360](c14.xhtml#Page_360)
  prefs: []
  type: TYPE_NORMAL
- en: root detection, avoiding with, [368](c14.xhtml#Page_368)–[369](c14.xhtml#Page_369)
  prefs: []
  type: TYPE_NORMAL
- en: station (STA), *[288](c12.xhtml#Page_288)*
  prefs: []
  type: TYPE_NORMAL
- en: '*stdnse* library, [106](c05.xhtml#Page_106)'
  prefs: []
  type: TYPE_NORMAL
- en: '`step` command, [349](c14.xhtml#Page_349)'
  prefs: []
  type: TYPE_NORMAL
- en: ST-Link programmer, *[165](c07.xhtml#Page_165)*
  prefs: []
  type: TYPE_NORMAL
- en: boot mode, selecting, [174](c07.xhtml#Page_174)–[175](c07.xhtml#Page_175)
  prefs: []
  type: TYPE_NORMAL
- en: connecting to computer, [179](c07.xhtml#Page_179)–[180](c07.xhtml#Page_180)
  prefs: []
  type: TYPE_NORMAL
- en: connecting USB to serial adapter, [178](c07.xhtml#Page_178)
  prefs: []
  type: TYPE_NORMAL
- en: flashing and running Arduino program, [174](c07.xhtml#Page_174)–[180](c07.xhtml#Page_180)
  prefs: []
  type: TYPE_NORMAL
- en: UART pins, identifying with logic analyzer, [176](c07.xhtml#Page_176)–[177](c07.xhtml#Page_177)
  prefs: []
  type: TYPE_NORMAL
- en: uploading Arduino program, [175](c07.xhtml#Page_175)–[176](c07.xhtml#Page_176)
  prefs: []
  type: TYPE_NORMAL
- en: STM32F103C8T6 (Black Pill)
  prefs: []
  type: TYPE_NORMAL
- en: boot mode, selecting, [174](c07.xhtml#Page_174)–[175](c07.xhtml#Page_175)
  prefs: []
  type: TYPE_NORMAL
- en: coding target program in Arduino, [172](c07.xhtml#Page_172)–[174](c07.xhtml#Page_174)
  prefs: []
  type: TYPE_NORMAL
- en: connecting to computer, [179](c07.xhtml#Page_179)–[180](c07.xhtml#Page_180)
  prefs: []
  type: TYPE_NORMAL
- en: connecting USB to serial adapter, [178](c07.xhtml#Page_178)
  prefs: []
  type: TYPE_NORMAL
- en: debugging target, [181](c07.xhtml#Page_181)–[188](c07.xhtml#Page_188)
  prefs: []
  type: TYPE_NORMAL
- en: flashing and running Arduino program, [174](c07.xhtml#Page_174)–[180](c07.xhtml#Page_180)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [169](c07.xhtml#Page_169)–[170](c07.xhtml#Page_170), [412](b01.xhtml#Page_412)
  prefs: []
  type: TYPE_NORMAL
- en: UART pins, identifying with logic analyzer, [176](c07.xhtml#Page_176)–[177](c07.xhtml#Page_177)
  prefs: []
  type: TYPE_NORMAL
- en: uploading Arduino program, [175](c07.xhtml#Page_175)–[176](c07.xhtml#Page_176)
  prefs: []
  type: TYPE_NORMAL
- en: stop bit, UART, [158](c07.xhtml#Page_158)
  prefs: []
  type: TYPE_NORMAL
- en: '`strcmp()` function, [185](c07.xhtml#Page_185)–[186](c07.xhtml#Page_186)'
  prefs: []
  type: TYPE_NORMAL
- en: streaming protocols, [380](c15.xhtml#Page_380)
  prefs: []
  type: TYPE_NORMAL
- en: STRIDE threat classification model, *[18](c02.xhtml#Page_18)*
  prefs: []
  type: TYPE_NORMAL
- en: attack trees, using, [28](c02.xhtml#Page_28)–[29](c02.xhtml#Page_29)
  prefs: []
  type: TYPE_NORMAL
- en: breaking architecture into components, [20](c02.xhtml#Page_20)–[21](c02.xhtml#Page_21)
  prefs: []
  type: TYPE_NORMAL
- en: identifying architecture, [19](c02.xhtml#Page_19)
  prefs: []
  type: TYPE_NORMAL
- en: identifying threats
  prefs: []
  type: TYPE_NORMAL
- en: control server service, [23](c02.xhtml#Page_23)–[24](c02.xhtml#Page_24)
  prefs: []
  type: TYPE_NORMAL
- en: drug library, [24](c02.xhtml#Page_24)
  prefs: []
  type: TYPE_NORMAL
- en: firmware, [25](c02.xhtml#Page_25)–[26](c02.xhtml#Page_26)
  prefs: []
  type: TYPE_NORMAL
- en: operating system, [25](c02.xhtml#Page_25)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [21](c02.xhtml#Page_21)–[22](c02.xhtml#Page_22)
  prefs: []
  type: TYPE_NORMAL
- en: physical equipment, [26](c02.xhtml#Page_26)–[27](c02.xhtml#Page_27)
  prefs: []
  type: TYPE_NORMAL
- en: pump service, [27](c02.xhtml#Page_27)–[28](c02.xhtml#Page_28)
  prefs: []
  type: TYPE_NORMAL
- en: RUI, [22](c02.xhtml#Page_22)–[23](c02.xhtml#Page_23)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [18](c02.xhtml#Page_18)–[19](c02.xhtml#Page_19)
  prefs: []
  type: TYPE_NORMAL
- en: '*string* library, [106](c05.xhtml#Page_106)'
  prefs: []
  type: TYPE_NORMAL
- en: '`string.pack()` function, [109](c05.xhtml#Page_109)–[110](c05.xhtml#Page_110)'
  prefs: []
  type: TYPE_NORMAL
- en: '`string.unpack()` function, [109](c05.xhtml#Page_109), [113](c05.xhtml#Page_113)–[114](c05.xhtml#Page_114)'
  prefs: []
  type: TYPE_NORMAL
- en: string values of application entity titles, extracting, [102](c05.xhtml#Page_102)
  prefs: []
  type: TYPE_NORMAL
- en: subscribers, in publish-subscribe architecture, [73](c04.xhtml#Page_73)
  prefs: []
  type: TYPE_NORMAL
- en: subtrees, adding to existing protocol trees, [102](c05.xhtml#Page_102)–[103](c05.xhtml#Page_103)
  prefs: []
  type: TYPE_NORMAL
- en: SUID binaries, *[394](c15.xhtml#Page_394)*
  prefs: []
  type: TYPE_NORMAL
- en: supplementary data, in RFID tags, *[243](c10.xhtml#Page_243)*–[244](c10.xhtml#Page_244)
  prefs: []
  type: TYPE_NORMAL
- en: supply chain attacks, *[27](c02.xhtml#Page_27)*
  prefs: []
  type: TYPE_NORMAL
- en: '`(-sV)`Nmap command, [68](c04.xhtml#Page_68)'
  prefs: []
  type: TYPE_NORMAL
- en: SWD. *See* Serial Wire Debug (SWD)
  prefs: []
  type: TYPE_NORMAL
- en: switch spoofing attack, *[61](c04.xhtml#Page_61)*–[63](c04.xhtml#Page_63)
  prefs: []
  type: TYPE_NORMAL
- en: '`switch` statement, [85](c04.xhtml#Page_85)'
  prefs: []
  type: TYPE_NORMAL
- en: SWJ-DP (Serial Wire or JTAG Debug Port), *[165](c07.xhtml#Page_165)*
  prefs: []
  type: TYPE_NORMAL
- en: Sybil attack, *[32](c02.xhtml#Page_32)*
  prefs: []
  type: TYPE_NORMAL
- en: symbolic links, [216](c09.xhtml#Page_216)–*[217](c09.xhtml#Page_217)*
  prefs: []
  type: TYPE_NORMAL
- en: synchronous communication protocol, *[191](c08.xhtml#Page_191)*
  prefs: []
  type: TYPE_NORMAL
- en: '`syslog` function, [230](c09.xhtml#Page_230)–[231](c09.xhtml#Page_231)'
  prefs: []
  type: TYPE_NORMAL
- en: system manuals, [37](c03.xhtml#Page_37)
  prefs: []
  type: TYPE_NORMAL
- en: '**T**'
  prefs: []
  type: TYPE_NORMAL
- en: '*table* library, [106](c05.xhtml#Page_106)'
  prefs: []
  type: TYPE_NORMAL
- en: Tag-Connect interface, *[167](c07.xhtml#Page_167)*
  prefs: []
  type: TYPE_NORMAL
- en: tagged port, *[60](c04.xhtml#Page_60)*
  prefs: []
  type: TYPE_NORMAL
- en: tag-to-reader communication, eavesdropping on, [260](c10.xhtml#Page_260)–[261](c10.xhtml#Page_261)
  prefs: []
  type: TYPE_NORMAL
- en: TAGulator, [166](c07.xhtml#Page_166)–[167](c07.xhtml#Page_167)
  prefs: []
  type: TYPE_NORMAL
- en: '`tag` variable, [265](c10.xhtml#Page_265)'
  prefs: []
  type: TYPE_NORMAL
- en: tampering, *[22](c02.xhtml#Page_22)*
  prefs: []
  type: TYPE_NORMAL
- en: on control server service, [23](c02.xhtml#Page_23)
  prefs: []
  type: TYPE_NORMAL
- en: on drug library, [23](c02.xhtml#Page_23)
  prefs: []
  type: TYPE_NORMAL
- en: on firmware, [26](c02.xhtml#Page_26)
  prefs: []
  type: TYPE_NORMAL
- en: on hardware, [27](c02.xhtml#Page_27)
  prefs: []
  type: TYPE_NORMAL
- en: on operating system, [25](c02.xhtml#Page_25)
  prefs: []
  type: TYPE_NORMAL
- en: protection and detection, [41](c03.xhtml#Page_41)–[42](c03.xhtml#Page_42)
  prefs: []
  type: TYPE_NORMAL
- en: on pump service, [28](c02.xhtml#Page_28)
  prefs: []
  type: TYPE_NORMAL
- en: on restrictive user interface, [22](c02.xhtml#Page_22)
  prefs: []
  type: TYPE_NORMAL
- en: STRIDE threat classification model, [18](c02.xhtml#Page_18)
  prefs: []
  type: TYPE_NORMAL
- en: tamper-resistant hardware, [341](c14.xhtml#Page_341)
  prefs: []
  type: TYPE_NORMAL
- en: TAP (Test Access Port), *[164](c07.xhtml#Page_164)*–[165](c07.xhtml#Page_165)
  prefs: []
  type: TYPE_NORMAL
- en: Target Service, WS-Discovery, *[145](c06.xhtml#Page_145)*–[146](c06.xhtml#Page_146)
  prefs: []
  type: TYPE_NORMAL
- en: TCK (Test clock input), [164](c07.xhtml#Page_164)
  prefs: []
  type: TYPE_NORMAL
- en: TCP SYN flood attack, [94](c05.xhtml#Page_94)
  prefs: []
  type: TYPE_NORMAL
- en: '`tcpwrappedms` Nmap service probe directive, [72](c04.xhtml#Page_72)'
  prefs: []
  type: TYPE_NORMAL
- en: TDI (Test data input), [164](c07.xhtml#Page_164)–[165](c07.xhtml#Page_165)
  prefs: []
  type: TYPE_NORMAL
- en: '`tdnse.get_script_args()` function, [112](c05.xhtml#Page_112)'
  prefs: []
  type: TYPE_NORMAL
- en: TDO (Test data output), [164](c07.xhtml#Page_164)–[165](c07.xhtml#Page_165)
  prefs: []
  type: TYPE_NORMAL
- en: technological protection measures (TPMs), *[12](c01.xhtml#Page_12)*–[13](c01.xhtml#Page_13)
  prefs: []
  type: TYPE_NORMAL
- en: TEE (Trusted Execution Environment), [41](c03.xhtml#Page_41), *[341](c14.xhtml#Page_341)*
  prefs: []
  type: TYPE_NORMAL
- en: Test Access Port (TAP), *[164](c07.xhtml#Page_164)*–[165](c07.xhtml#Page_165)
  prefs: []
  type: TYPE_NORMAL
- en: Test clock input (TCK), [164](c07.xhtml#Page_164)
  prefs: []
  type: TYPE_NORMAL
- en: Test data input (TDI), [164](c07.xhtml#Page_164)–[165](c07.xhtml#Page_165)
  prefs: []
  type: TYPE_NORMAL
- en: Test data output (TDO), [164](c07.xhtml#Page_164)–[165](c07.xhtml#Page_165)
  prefs: []
  type: TYPE_NORMAL
- en: test environment, setting up, [75](c04.xhtml#Page_75)–[76](c04.xhtml#Page_76)
  prefs: []
  type: TYPE_NORMAL
- en: test hook clips, [190](c08.xhtml#Page_190), [194](c08.xhtml#Page_194)
  prefs: []
  type: TYPE_NORMAL
- en: testing
  prefs: []
  type: TYPE_NORMAL
- en: dissectors, [104](c05.xhtml#Page_104)
  prefs: []
  type: TYPE_NORMAL
- en: firmware update service, [232](c09.xhtml#Page_232)–[233](c09.xhtml#Page_233)
  prefs: []
  type: TYPE_NORMAL
- en: LoRa sender, [310](c13.xhtml#Page_310)–[314](c13.xhtml#Page_314)
  prefs: []
  type: TYPE_NORMAL
- en: mDNS poisoner, [144](c06.xhtml#Page_144)–[146](c06.xhtml#Page_146)
  prefs: []
  type: TYPE_NORMAL
- en: testing methodology. *See* security testing methodology
  prefs: []
  type: TYPE_NORMAL
- en: Test mode select (TMS) input, [164](c07.xhtml#Page_164)–[165](c07.xhtml#Page_165)
  prefs: []
  type: TYPE_NORMAL
- en: test point interfaces, [42](c03.xhtml#Page_42)
  prefs: []
  type: TYPE_NORMAL
- en: test probes, *[159](c07.xhtml#Page_159)*
  prefs: []
  type: TYPE_NORMAL
- en: Test reset (TRST) input, [164](c07.xhtml#Page_164)–[165](c07.xhtml#Page_165)
  prefs: []
  type: TYPE_NORMAL
- en: text messages, forcing devices to send, [351](c14.xhtml#Page_351)–[352](c14.xhtml#Page_352),
    [365](c14.xhtml#Page_365)–[366](c14.xhtml#Page_366)
  prefs: []
  type: TYPE_NORMAL
- en: thick clients, *[210](c09.xhtml#Page_210)–[211](c09.xhtml#Page_211)*
  prefs: []
  type: TYPE_NORMAL
- en: thinning the binary, [355](c14.xhtml#Page_355)
  prefs: []
  type: TYPE_NORMAL
- en: threat modeling, *[17](c02.xhtml#Page_17)*. *See also* STRIDE threat classification
    model
  prefs: []
  type: TYPE_NORMAL
- en: common threats, [31](c02.xhtml#Page_31)–[33](c02.xhtml#Page_33)
  prefs: []
  type: TYPE_NORMAL
- en: DREAD Classification Scheme, [29](c02.xhtml#Page_29)–[30](c02.xhtml#Page_30)
  prefs: []
  type: TYPE_NORMAL
- en: issues in, [18](c02.xhtml#Page_18)
  prefs: []
  type: TYPE_NORMAL
- en: other types of, [30](c02.xhtml#Page_30)–[31](c02.xhtml#Page_31)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [17](c02.xhtml#Page_17)
  prefs: []
  type: TYPE_NORMAL
- en: timescales, [6](c01.xhtml#Page_6)
  prefs: []
  type: TYPE_NORMAL
- en: Time-to-Live (TTL) value, [132](c06.xhtml#Page_132)
  prefs: []
  type: TYPE_NORMAL
- en: timing markers, *[177](c07.xhtml#Page_177)*
  prefs: []
  type: TYPE_NORMAL
- en: Titan M, *[341](c14.xhtml#Page_341)*
  prefs: []
  type: TYPE_NORMAL
- en: TMS (Test mode select) input, [164](c07.xhtml#Page_164)–[165](c07.xhtml#Page_165)
  prefs: []
  type: TYPE_NORMAL
- en: tool development, [93](c05.xhtml#Page_93)
  prefs: []
  type: TYPE_NORMAL
- en: tools. See specific tools
  prefs: []
  type: TYPE_NORMAL
- en: topics, in publish-subscribe architecture, [73](c04.xhtml#Page_73)
  prefs: []
  type: TYPE_NORMAL
- en: topology mapping, *[44](c03.xhtml#Page_44)*
  prefs: []
  type: TYPE_NORMAL
- en: '`totalwaitms` Nmap service probe directive, [72](c04.xhtml#Page_72)'
  prefs: []
  type: TYPE_NORMAL
- en: TP-Link Kasa app, [366](c14.xhtml#Page_366)
  prefs: []
  type: TYPE_NORMAL
- en: TPMs (technological protection measures), [12](c01.xhtml#Page_12)–[13](c01.xhtml#Page_13)
  prefs: []
  type: TYPE_NORMAL
- en: traditional versus IoT security, [5](c01.xhtml#Page_5)–[6](c01.xhtml#Page_6)
  prefs: []
  type: TYPE_NORMAL
- en: Transfer Syntax, *[111](c05.xhtml#Page_111)*
  prefs: []
  type: TYPE_NORMAL
- en: transistor-transistor logic (TTL), *[168](c07.xhtml#Page_168)*
  prefs: []
  type: TYPE_NORMAL
- en: transmission power, *[313](c13.xhtml#Page_313)*
  prefs: []
  type: TYPE_NORMAL
- en: Transmit (TX) port, UART, [159](c07.xhtml#Page_159), [162](c07.xhtml#Page_162),
    [178](c07.xhtml#Page_178)
  prefs: []
  type: TYPE_NORMAL
- en: treadmills, attacking. *See* smart treadmills, attacking
  prefs: []
  type: TYPE_NORMAL
- en: TRST (Test reset) input, [164](c07.xhtml#Page_164)–[165](c07.xhtml#Page_165)
  prefs: []
  type: TYPE_NORMAL
- en: trunk link, *[61](c04.xhtml#Page_61)*
  prefs: []
  type: TYPE_NORMAL
- en: trunk port, *[60](c04.xhtml#Page_60)*
  prefs: []
  type: TYPE_NORMAL
- en: trust boundaries, *[20](c02.xhtml#Page_20)*–[21](c02.xhtml#Page_21)
  prefs: []
  type: TYPE_NORMAL
- en: Trusted Execution Environment (TEE), [41](c03.xhtml#Page_41), *[341](c14.xhtml#Page_341)*
  prefs: []
  type: TYPE_NORMAL
- en: trusted platform module, *[341](c14.xhtml#Page_341)*
  prefs: []
  type: TYPE_NORMAL
- en: TrustZone, *[341](c14.xhtml#Page_341)*
  prefs: []
  type: TYPE_NORMAL
- en: TTL (Time-to-Live) value, [132](c06.xhtml#Page_132)
  prefs: []
  type: TYPE_NORMAL
- en: TTL (transistor-transistor logic), *[168](c07.xhtml#Page_168)*
  prefs: []
  type: TYPE_NORMAL
- en: TX (Transmit) port, UART, [159](c07.xhtml#Page_159), [162](c07.xhtml#Page_162),
    [178](c07.xhtml#Page_178)
  prefs: []
  type: TYPE_NORMAL
- en: TXT record, [133](c06.xhtml#Page_133), [138](c06.xhtml#Page_138)–[140](c06.xhtml#Page_140),
    [144](c06.xhtml#Page_144)
  prefs: []
  type: TYPE_NORMAL
- en: '**U**'
  prefs: []
  type: TYPE_NORMAL
- en: UART. *See* Universal Asynchronous Receiver-Transmitter (UART)
  prefs: []
  type: TYPE_NORMAL
- en: UART bridge VCP driver, [310](c13.xhtml#Page_310)
  prefs: []
  type: TYPE_NORMAL
- en: Ubertooth One, [412](b01.xhtml#Page_412)
  prefs: []
  type: TYPE_NORMAL
- en: '`UDP_server`, creating, [142](c06.xhtml#Page_142)'
  prefs: []
  type: TYPE_NORMAL
- en: UEFI (Unified Extensible Firmware Interface) Secure Boot, *[41](c03.xhtml#Page_41)*
  prefs: []
  type: TYPE_NORMAL
- en: UF2 (USB Flashing Format), *[318](c13.xhtml#Page_318)*
  prefs: []
  type: TYPE_NORMAL
- en: UID (Unique Identifier), *[244](c10.xhtml#Page_244)*, [255](c10.xhtml#Page_255),
    [258](c10.xhtml#Page_258)
  prefs: []
  type: TYPE_NORMAL
- en: UI restrictions, circumventing, [387](c15.xhtml#Page_387)–[390](c15.xhtml#Page_390)
  prefs: []
  type: TYPE_NORMAL
- en: UK Code of Practice, [14](c01.xhtml#Page_14)
  prefs: []
  type: TYPE_NORMAL
- en: Ultra Narrowband (UNB), *[308](c13.xhtml#Page_308)*
  prefs: []
  type: TYPE_NORMAL
- en: Umap, [118](c06.xhtml#Page_118), [413](b01.xhtml#Page_413)
  prefs: []
  type: TYPE_NORMAL
- en: abusing UPnP through WAN interfaces, [126](c06.xhtml#Page_126)–[131](c06.xhtml#Page_131)
  prefs: []
  type: TYPE_NORMAL
- en: unencrypted communication channels, [234](c09.xhtml#Page_234)
  prefs: []
  type: TYPE_NORMAL
- en: Unified Extensible Firmware Interface (UEFI) Secure Boot, *[41](c03.xhtml#Page_41)*
  prefs: []
  type: TYPE_NORMAL
- en: Unique Identifier (UID), *[244](c10.xhtml#Page_244)*, [255](c10.xhtml#Page_255),
    [258](c10.xhtml#Page_258)
  prefs: []
  type: TYPE_NORMAL
- en: Universal Asynchronous Receiver-Transmitter (UART), *[157](c07.xhtml#Page_157)*
  prefs: []
  type: TYPE_NORMAL
- en: baud rate, identifying, [162](c07.xhtml#Page_162)–[163](c07.xhtml#Page_163)
  prefs: []
  type: TYPE_NORMAL
- en: hacking devices through
  prefs: []
  type: TYPE_NORMAL
- en: coding target program in Arduino, [172](c07.xhtml#Page_172)–[174](c07.xhtml#Page_174)
  prefs: []
  type: TYPE_NORMAL
- en: debugging environment, setting up, [170](c07.xhtml#Page_170)–[172](c07.xhtml#Page_172)
  prefs: []
  type: TYPE_NORMAL
- en: debugging target, [181](c07.xhtml#Page_181)–[188](c07.xhtml#Page_188)
  prefs: []
  type: TYPE_NORMAL
- en: flashing and running Arduino program, [174](c07.xhtml#Page_174)–[180](c07.xhtml#Page_180)
  prefs: []
  type: TYPE_NORMAL
- en: STM32F103C8T6 target device, [169](c07.xhtml#Page_169)–[170](c07.xhtml#Page_170)
  prefs: []
  type: TYPE_NORMAL
- en: tools for, [168](c07.xhtml#Page_168)–[169](c07.xhtml#Page_169)
  prefs: []
  type: TYPE_NORMAL
- en: hardware tools for communicating with, [158](c07.xhtml#Page_158)–[159](c07.xhtml#Page_159)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [157](c07.xhtml#Page_157)
  prefs: []
  type: TYPE_NORMAL
- en: packet format, [158](c07.xhtml#Page_158)
  prefs: []
  type: TYPE_NORMAL
- en: ports, identifying, [159](c07.xhtml#Page_159)–[162](c07.xhtml#Page_162), [176](c07.xhtml#Page_176)–[177](c07.xhtml#Page_177)
  prefs: []
  type: TYPE_NORMAL
- en: Universal Plug and Play (UPnP)
  prefs: []
  type: TYPE_NORMAL
- en: abusing through WAN interfaces, [126](c06.xhtml#Page_126)–[131](c06.xhtml#Page_131)
  prefs: []
  type: TYPE_NORMAL
- en: common vulnerabilities, [120](c06.xhtml#Page_120)–[121](c06.xhtml#Page_121)
  prefs: []
  type: TYPE_NORMAL
- en: history of vulnerabilities, [118](c06.xhtml#Page_118)
  prefs: []
  type: TYPE_NORMAL
- en: other types of attacks, [131](c06.xhtml#Page_131)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [118](c06.xhtml#Page_118)
  prefs: []
  type: TYPE_NORMAL
- en: punching holes through firewalls, [121](c06.xhtml#Page_121)–[126](c06.xhtml#Page_126)
  prefs: []
  type: TYPE_NORMAL
- en: UPnP stack, [119](c06.xhtml#Page_119)–[120](c06.xhtml#Page_120)
  prefs: []
  type: TYPE_NORMAL
- en: '`u` parameter, [255](c10.xhtml#Page_255)'
  prefs: []
  type: TYPE_NORMAL
- en: update mechanisms, firmware. *See* firmware update mechanisms
  prefs: []
  type: TYPE_NORMAL
- en: '`upload` command, [399](c15.xhtml#Page_399)'
  prefs: []
  type: TYPE_NORMAL
- en: UPnP. *See* Universal Plug and Play (UPnP)
  prefs: []
  type: TYPE_NORMAL
- en: UPnProxy, [118](c06.xhtml#Page_118)
  prefs: []
  type: TYPE_NORMAL
- en: URL schemes, [344](c14.xhtml#Page_344)–*[345](c14.xhtml#Page_345)*, [351](c14.xhtml#Page_351)–[352](c14.xhtml#Page_352)
  prefs: []
  type: TYPE_NORMAL
- en: USB Flashing Format (UF2), *[318](c13.xhtml#Page_318)*
  prefs: []
  type: TYPE_NORMAL
- en: USB ports, assessment of, [40](c03.xhtml#Page_40)–[41](c03.xhtml#Page_41)
  prefs: []
  type: TYPE_NORMAL
- en: USB-to-serial adapter, *[168](c07.xhtml#Page_168)*, [176](c07.xhtml#Page_176)–[177](c07.xhtml#Page_177)
  prefs: []
  type: TYPE_NORMAL
- en: USB-to-serial interface. *See* Bus Pirate
  prefs: []
  type: TYPE_NORMAL
- en: user accounts, testing, [51](c03.xhtml#Page_51)
  prefs: []
  type: TYPE_NORMAL
- en: user authentication, mobile app, [340](c14.xhtml#Page_340)–[341](c14.xhtml#Page_341)
  prefs: []
  type: TYPE_NORMAL
- en: User Info Context, A-ASSOCIATE request message, [111](c05.xhtml#Page_111)
  prefs: []
  type: TYPE_NORMAL
- en: user knowledge, [39](c03.xhtml#Page_39)–[40](c03.xhtml#Page_40)
  prefs: []
  type: TYPE_NORMAL
- en: user-level segregation, *[49](c03.xhtml#Page_49)*–[50](c03.xhtml#Page_50)
  prefs: []
  type: TYPE_NORMAL
- en: username enumeration, *[49](c03.xhtml#Page_49)*
  prefs: []
  type: TYPE_NORMAL
- en: user passwords, resetting, [363](c14.xhtml#Page_363)–[365](c14.xhtml#Page_365)
  prefs: []
  type: TYPE_NORMAL
- en: user security awareness, [32](c02.xhtml#Page_32)–[33](c02.xhtml#Page_33)
  prefs: []
  type: TYPE_NORMAL
- en: USRP, [413](b01.xhtml#Page_413)
  prefs: []
  type: TYPE_NORMAL
- en: UUIDs, [278](c11.xhtml#Page_278)
  prefs: []
  type: TYPE_NORMAL
- en: '**V**'
  prefs: []
  type: TYPE_NORMAL
- en: '`validate()` function, [174](c07.xhtml#Page_174), [184](c07.xhtml#Page_184)–[187](c07.xhtml#Page_187)'
  prefs: []
  type: TYPE_NORMAL
- en: Valsamaras, Dimitris, [385](c15.xhtml#Page_385)
  prefs: []
  type: TYPE_NORMAL
- en: variable header, MQTT *CONNECT* packet, *[80](c04.xhtml#Page_80)*–[82](c04.xhtml#Page_82)
  prefs: []
  type: TYPE_NORMAL
- en: variable-length fields, parsing, [103](c05.xhtml#Page_103)–[104](c05.xhtml#Page_104)
  prefs: []
  type: TYPE_NORMAL
- en: Vcc (Voltage) port, UART, [159](c07.xhtml#Page_159), [162](c07.xhtml#Page_162)
  prefs: []
  type: TYPE_NORMAL
- en: '`vconfig` command, [63](c04.xhtml#Page_63)'
  prefs: []
  type: TYPE_NORMAL
- en: vendors, obtaining firmware from, [208](c09.xhtml#Page_208)–[209](c09.xhtml#Page_209)
  prefs: []
  type: TYPE_NORMAL
- en: version intensity, [68](c04.xhtml#Page_68)
  prefs: []
  type: TYPE_NORMAL
- en: Vibease Wireless Remote Vibrator app, [367](c14.xhtml#Page_367)
  prefs: []
  type: TYPE_NORMAL
- en: video management servers, *[145](c06.xhtml#Page_145)*
  prefs: []
  type: TYPE_NORMAL
- en: attacks on, [152](c06.xhtml#Page_152)–[153](c06.xhtml#Page_153)
  prefs: []
  type: TYPE_NORMAL
- en: faking network cameras, [147](c06.xhtml#Page_147)–[152](c06.xhtml#Page_152)
  prefs: []
  type: TYPE_NORMAL
- en: Vim, [315](c13.xhtml#Page_315)
  prefs: []
  type: TYPE_NORMAL
- en: Virtual Local Area Networks (VLANs), *[60](c04.xhtml#Page_60)*–[61](c04.xhtml#Page_61)
  prefs: []
  type: TYPE_NORMAL
- en: VLAN-hopping attacks
  prefs: []
  type: TYPE_NORMAL
- en: double tagging attacks, [63](c04.xhtml#Page_63)–[65](c04.xhtml#Page_65)
  prefs: []
  type: TYPE_NORMAL
- en: imitating VoIP devices, [65](c04.xhtml#Page_65)–[67](c04.xhtml#Page_67)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [60](c04.xhtml#Page_60)
  prefs: []
  type: TYPE_NORMAL
- en: switch spoofing attacks, [61](c04.xhtml#Page_61)–[63](c04.xhtml#Page_63)
  prefs: []
  type: TYPE_NORMAL
- en: VLAN tagging, *[61](c04.xhtml#Page_61)*
  prefs: []
  type: TYPE_NORMAL
- en: VMware, [122](c06.xhtml#Page_122)–[123](c06.xhtml#Page_123)
  prefs: []
  type: TYPE_NORMAL
- en: Voice over Internet Protocol (VoIP) devices, imitating, [65](c04.xhtml#Page_65)–[67](c04.xhtml#Page_67)
  prefs: []
  type: TYPE_NORMAL
- en: VoIP Hopper, [65](c04.xhtml#Page_65)–[67](c04.xhtml#Page_67), [413](b01.xhtml#Page_413)
  prefs: []
  type: TYPE_NORMAL
- en: Voltage (Vcc) port, UART, [159](c07.xhtml#Page_159), [162](c07.xhtml#Page_162)
  prefs: []
  type: TYPE_NORMAL
- en: vulnerability scanning, [46](c03.xhtml#Page_46)
  prefs: []
  type: TYPE_NORMAL
- en: '`VV` command, [359](c14.xhtml#Page_359)'
  prefs: []
  type: TYPE_NORMAL
- en: '**W**'
  prefs: []
  type: TYPE_NORMAL
- en: WAN interfaces, abusing UPnP through, [126](c06.xhtml#Page_126)–[131](c06.xhtml#Page_131)
  prefs: []
  type: TYPE_NORMAL
- en: WannaCry attack, [5](c01.xhtml#Page_5)–[6](c01.xhtml#Page_6)
  prefs: []
  type: TYPE_NORMAL
- en: Watchdog Timer, [316](c13.xhtml#Page_316)–[317](c13.xhtml#Page_317)
  prefs: []
  type: TYPE_NORMAL
- en: web applications, assessment of, [48](c03.xhtml#Page_48)–[50](c03.xhtml#Page_50)
  prefs: []
  type: TYPE_NORMAL
- en: web application sessions, *[49](c03.xhtml#Page_49)*
  prefs: []
  type: TYPE_NORMAL
- en: Web Services Dynamic Discovery (WS-Discovery), *[145](c06.xhtml#Page_145)*
  prefs: []
  type: TYPE_NORMAL
- en: crafting attacks, [152](c06.xhtml#Page_152)–[153](c06.xhtml#Page_153)
  prefs: []
  type: TYPE_NORMAL
- en: faking cameras on network
  prefs: []
  type: TYPE_NORMAL
- en: analyzing requests and replies in Wireshark, [147](c06.xhtml#Page_147)–[149](c06.xhtml#Page_149)
  prefs: []
  type: TYPE_NORMAL
- en: emulating cameras, [149](c06.xhtml#Page_149)–[152](c06.xhtml#Page_152)
  prefs: []
  type: TYPE_NORMAL
- en: setting up, [147](c06.xhtml#Page_147)
  prefs: []
  type: TYPE_NORMAL
- en: WebView, [350](c14.xhtml#Page_350)
  prefs: []
  type: TYPE_NORMAL
- en: circumventing UI restrictions on treadmills, [387](c15.xhtml#Page_387)–[390](c15.xhtml#Page_390)
  prefs: []
  type: TYPE_NORMAL
- en: XSS vulnerabilities, [353](c14.xhtml#Page_353)–[354](c14.xhtml#Page_354)
  prefs: []
  type: TYPE_NORMAL
- en: '`wget` command, [212](c09.xhtml#Page_212), [226](c09.xhtml#Page_226)'
  prefs: []
  type: TYPE_NORMAL
- en: whole firmware emulation, [218](c09.xhtml#Page_218)–[221](c09.xhtml#Page_221)
  prefs: []
  type: TYPE_NORMAL
- en: Wi-Fi
  prefs: []
  type: TYPE_NORMAL
- en: attacks against APs
  prefs: []
  type: TYPE_NORMAL
- en: cracking into WPA/WPA2 Enterprise, [304](c12.xhtml#Page_304)–[305](c12.xhtml#Page_305)
  prefs: []
  type: TYPE_NORMAL
- en: cracking WPA/WPA2, [299](c12.xhtml#Page_299)–[300](c12.xhtml#Page_300)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [299](c12.xhtml#Page_299)
  prefs: []
  type: TYPE_NORMAL
- en: attacks against wireless clients
  prefs: []
  type: TYPE_NORMAL
- en: association attacks, [291](c12.xhtml#Page_291)–[295](c12.xhtml#Page_295)
  prefs: []
  type: TYPE_NORMAL
- en: deauthentication attacks, [289](c12.xhtml#Page_289)–[291](c12.xhtml#Page_291)
  prefs: []
  type: TYPE_NORMAL
- en: denial-of-service attacks, [289](c12.xhtml#Page_289)–[291](c12.xhtml#Page_291)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [288](c12.xhtml#Page_288)–[289](c12.xhtml#Page_289)
  prefs: []
  type: TYPE_NORMAL
- en: Wi-Fi Direct, [295](c12.xhtml#Page_295)–[299](c12.xhtml#Page_299)
  prefs: []
  type: TYPE_NORMAL
- en: general discussion, [287](c12.xhtml#Page_287)–[288](c12.xhtml#Page_288)
  prefs: []
  type: TYPE_NORMAL
- en: hardware for security assessments, [288](c12.xhtml#Page_288)
  prefs: []
  type: TYPE_NORMAL
- en: testing methodology, [305](c12.xhtml#Page_305)–[306](c12.xhtml#Page_306)
  prefs: []
  type: TYPE_NORMAL
- en: Wi-Fi Direct, attacks against, [295](c12.xhtml#Page_295)–[299](c12.xhtml#Page_299)
  prefs: []
  type: TYPE_NORMAL
- en: Wi-Fi modem router hacking
  prefs: []
  type: TYPE_NORMAL
- en: dynamic analysis, [221](c09.xhtml#Page_221)–[223](c09.xhtml#Page_223)
  prefs: []
  type: TYPE_NORMAL
- en: extracting filesystem, [212](c09.xhtml#Page_212)
  prefs: []
  type: TYPE_NORMAL
- en: firmware emulation, [216](c09.xhtml#Page_216)–[221](c09.xhtml#Page_221)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [211](c09.xhtml#Page_211)–[212](c09.xhtml#Page_212)
  prefs: []
  type: TYPE_NORMAL
- en: statically analyzing filesystem contents, [213](c09.xhtml#Page_213)–[216](c09.xhtml#Page_216)
  prefs: []
  type: TYPE_NORMAL
- en: Wifiphisher, [294](c12.xhtml#Page_294)–[295](c12.xhtml#Page_295), [297](c12.xhtml#Page_297)–[298](c12.xhtml#Page_298),
    [413](b01.xhtml#Page_413)
  prefs: []
  type: TYPE_NORMAL
- en: Wi-Fi Protected Access (WPA/WPA2), [47](c03.xhtml#Page_47), [299](c12.xhtml#Page_299)–[300](c12.xhtml#Page_300)
  prefs: []
  type: TYPE_NORMAL
- en: Wi-Fi Protected Setup (WPS), [296](c12.xhtml#Page_296)–[297](c12.xhtml#Page_297)
  prefs: []
  type: TYPE_NORMAL
- en: Wired Equivalent Privacy (WEP), [47](c03.xhtml#Page_47), [299](c12.xhtml#Page_299)
  prefs: []
  type: TYPE_NORMAL
- en: wireless alarms, jamming, [375](c15.xhtml#Page_375)–[379](c15.xhtml#Page_379)
  prefs: []
  type: TYPE_NORMAL
- en: wireless clients, attacks against
  prefs: []
  type: TYPE_NORMAL
- en: association attacks, [291](c12.xhtml#Page_291)–[295](c12.xhtml#Page_295)
  prefs: []
  type: TYPE_NORMAL
- en: deauthentication and denial-of-service attacks, [289](c12.xhtml#Page_289)–[291](c12.xhtml#Page_291)
  prefs: []
  type: TYPE_NORMAL
- en: Evil Twin attack, [291](c12.xhtml#Page_291)–[292](c12.xhtml#Page_292)
  prefs: []
  type: TYPE_NORMAL
- en: KARMA attack, [292](c12.xhtml#Page_292)
  prefs: []
  type: TYPE_NORMAL
- en: Known Beacons attack, [292](c12.xhtml#Page_292)–[295](c12.xhtml#Page_295)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [288](c12.xhtml#Page_288)–[289](c12.xhtml#Page_289)
  prefs: []
  type: TYPE_NORMAL
- en: Wi-Fi Direct, [295](c12.xhtml#Page_295)–[299](c12.xhtml#Page_299)
  prefs: []
  type: TYPE_NORMAL
- en: wireless protocol testing, [47](c03.xhtml#Page_47)
  prefs: []
  type: TYPE_NORMAL
- en: Wireshark
  prefs: []
  type: TYPE_NORMAL
- en: About Wireshark window, [98](c05.xhtml#Page_98)
  prefs: []
  type: TYPE_NORMAL
- en: additional documentation, [91](c05.xhtml#Page_91)
  prefs: []
  type: TYPE_NORMAL
- en: ADV_IND packet in, [271](c11.xhtml#Page_271)
  prefs: []
  type: TYPE_NORMAL
- en: DICOM traffic, generating, [97](c05.xhtml#Page_97)
  prefs: []
  type: TYPE_NORMAL
- en: Enabled Protocols window, [91](c05.xhtml#Page_91)–[92](c05.xhtml#Page_92)
  prefs: []
  type: TYPE_NORMAL
- en: IP camera network traffic in, [380](c15.xhtml#Page_380)–[381](c15.xhtml#Page_381)
  prefs: []
  type: TYPE_NORMAL
- en: Lua, enabling in, [97](c05.xhtml#Page_97)–[99](c05.xhtml#Page_99)
  prefs: []
  type: TYPE_NORMAL
- en: Lua dissector, developing, [99](c05.xhtml#Page_99)–[101](c05.xhtml#Page_101)
  prefs: []
  type: TYPE_NORMAL
- en: network traffic, analyzing with, [92](c05.xhtml#Page_92)
  prefs: []
  type: TYPE_NORMAL
- en: overview, [413](b01.xhtml#Page_413)
  prefs: []
  type: TYPE_NORMAL
- en: RTP stream, extracting, [383](c15.xhtml#Page_383)
  prefs: []
  type: TYPE_NORMAL
- en: SRV record in, [133](c06.xhtml#Page_133)
  prefs: []
  type: TYPE_NORMAL
- en: testing dissectors, [91](c05.xhtml#Page_91)
  prefs: []
  type: TYPE_NORMAL
- en: traffic dumps
  prefs: []
  type: TYPE_NORMAL
- en: of DHCP frame in voice network, [67](c04.xhtml#Page_67)
  prefs: []
  type: TYPE_NORMAL
- en: of MQTT *CONNACK* packet, [76](c04.xhtml#Page_76)
  prefs: []
  type: TYPE_NORMAL
- en: of MQTT CONNECT packet, [74](c04.xhtml#Page_74)
  prefs: []
  type: TYPE_NORMAL
- en: WS-Discovery requests and replies, analyzing in, [147](c06.xhtml#Page_147)–[149](c06.xhtml#Page_149)
  prefs: []
  type: TYPE_NORMAL
- en: world-writeable logs, *[23](c02.xhtml#Page_23)*
  prefs: []
  type: TYPE_NORMAL
- en: WPA Enterprise, cracking into, [304](c12.xhtml#Page_304)–[305](c12.xhtml#Page_305)
  prefs: []
  type: TYPE_NORMAL
- en: WPA/WPA2 (Wi-Fi Protected Access), [47](c03.xhtml#Page_47), [299](c12.xhtml#Page_299)–[300](c12.xhtml#Page_300)
  prefs: []
  type: TYPE_NORMAL
- en: WPA/WPA2 four-way handshake, *[299](c12.xhtml#Page_299)*–[300](c12.xhtml#Page_300)
  prefs: []
  type: TYPE_NORMAL
- en: WPS (Wi-Fi Protected Setup), [296](c12.xhtml#Page_296)–[297](c12.xhtml#Page_297)
  prefs: []
  type: TYPE_NORMAL
- en: '`wrbl` parameter, [256](c10.xhtml#Page_256)'
  prefs: []
  type: TYPE_NORMAL
- en: Write-Ahead-Logging mechanism, *[354](c14.xhtml#Page_354)*
  prefs: []
  type: TYPE_NORMAL
- en: WS-Discovery. *See* Web Services Dynamic Discovery (WS-Discovery)
  prefs: []
  type: TYPE_NORMAL
- en: '**X**'
  prefs: []
  type: TYPE_NORMAL
- en: '`xcodebuild` command, [343](c14.xhtml#Page_343)'
  prefs: []
  type: TYPE_NORMAL
- en: Xcode IDE, [342](c14.xhtml#Page_342)
  prefs: []
  type: TYPE_NORMAL
- en: '`xcode-select` command, [342](c14.xhtml#Page_342)'
  prefs: []
  type: TYPE_NORMAL
- en: Xcrun, [351](c14.xhtml#Page_351)–[352](c14.xhtml#Page_352)
  prefs: []
  type: TYPE_NORMAL
- en: '`xcrun` command, [342](c14.xhtml#Page_342)–[343](c14.xhtml#Page_343)'
  prefs: []
  type: TYPE_NORMAL
- en: XSS injection attacks, [353](c14.xhtml#Page_353)–[354](c14.xhtml#Page_354)
  prefs: []
  type: TYPE_NORMAL
- en: XXE (External Entity) attacks, *[121](c06.xhtml#Page_121)*
  prefs: []
  type: TYPE_NORMAL
- en: '**Y**'
  prefs: []
  type: TYPE_NORMAL
- en: Yersinia, [61](c04.xhtml#Page_61)–[63](c04.xhtml#Page_63), [413](b01.xhtml#Page_413)
  prefs: []
  type: TYPE_NORMAL
- en: Yushkevich, I., [367](c14.xhtml#Page_367)
  prefs: []
  type: TYPE_NORMAL
- en: '**Z**'
  prefs: []
  type: TYPE_NORMAL
- en: ZAP (OWASP Zed Attack Proxy), [410](b01.xhtml#Page_410)
  prefs: []
  type: TYPE_NORMAL
- en: zero-configuration networking, *[117](c06.xhtml#Page_117)*. *See also**specific
    protocols*
  prefs: []
  type: TYPE_NORMAL
- en: Zipalign, [369](c14.xhtml#Page_369)
  prefs: []
  type: TYPE_NORMAL
