- en: '12'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '12'
- en: WORKING WITH AZURE
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 与 Azure 一起工作
- en: '![Images](../images/common.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![Images](../images/common.jpg)'
- en: With organizations pushing more and more services to the cloud, it’s important
    that automators understand how to work there. Luckily, thanks to PowerShell’s
    modules, and its ability to work with just about any API, working in the cloud
    is a breeze. In this and the next chapter, I’ll show you how to use PowerShell
    to automate tasks; in this chapter, you’ll work with Microsoft Azure, and in the
    next, with Amazon Web Services.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 随着组织将越来越多的服务迁移到云端，自动化人员了解如何在云端工作变得至关重要。幸运的是，借助 PowerShell 的模块以及它与几乎任何 API 兼容的能力，在云端工作变得轻松无比。在本章和下一章中，我将向你展示如何使用
    PowerShell 自动化任务；在本章，你将与 Microsoft Azure 一起工作，下一章则是与 Amazon Web Services 一起工作。
- en: Prerequisites
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 前提条件
- en: If you’ll be running the code in this chapter, I make a few assumptions about
    your environment. The first is that you have a Microsoft Azure subscription set
    up. You’ll be working with real cloud resources in this chapter, so you will receive
    charges to your account, but the fees should be reasonable. As long as you don’t
    leave any of the virtual machines you’re creating up for too long, the fees should
    be less than $10.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你将在本章中运行代码，我对你的环境做了几点假设。第一个是假设你已经设置了 Microsoft Azure 订阅。在本章中，你将使用真实的云资源，所以你的账户会产生费用，但费用应该是合理的。只要你不让任何虚拟机长时间运行，费用应该不会超过
    10 美元。
- en: Once you have an Azure subscription set up, you’ll need the `Az` PowerShell
    module bundle. This bundle of modules provided by Microsoft has hundreds of commands
    to perform tasks on nearly every Azure service available. You can download it
    by running Install-Module Az in your console (make sure to run as the administrator).
    I should note that I am using version 2.4.0 of the `Az` module. If you’re using
    a later version, I can’t guarantee that all of these commands will work exactly
    the same way.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你设置了 Azure 订阅，你需要 `Az` PowerShell 模块包。微软提供的这个模块包包含数百个命令，用于执行几乎所有 Azure 服务的任务。你可以通过在控制台中运行
    Install-Module Az 来下载它（确保以管理员身份运行）。我应该指出，我正在使用 `Az` 模块的 2.4.0 版本。如果你使用的是更新的版本，我不能保证所有这些命令会完全相同地工作。
- en: Azure Authentication
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Azure 身份验证
- en: Azure gives us a few ways to authenticate to its service. In this chapter, you’ll
    use a service principal. A *service principal* is an Azure application’s identity.
    It is the object that represents an application that can then be assigned various
    permissions.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 提供了几种身份验证方式。在本章中，你将使用服务主体。*服务主体*是一个 Azure 应用程序的身份。它是代表一个应用程序的对象，可以为该应用程序分配各种权限。
- en: Why are you creating a service principal? You want to authenticate to Azure
    by using an automated script that requires no user interaction. To do this, Azure
    requires you to use either a service principal or an organizational account. I
    want everyone to be able to follow along regardless of the type of account they
    have, so you’ll use a service principal to authenticate to Azure.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么要创建一个服务主体？你希望通过使用不需要用户交互的自动化脚本来进行 Azure 身份验证。为此，Azure 要求你使用服务主体或组织帐户。我希望每个人都能跟上，不论他们使用哪种类型的帐户，所以你将使用服务主体来进行
    Azure 身份验证。
- en: Creating a Service Principal
  id: totrans-10
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 创建服务主体
- en: Counterintuitively, the first thing you have to do to create a service principal
    is authenticate the old-fashioned way. To do this, use `Connect-AzAccount`, which
    produces a window like [Figure 12-1](ch12.xhtml#ch12fig1).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 与直觉相反，创建服务主体的第一步是采用传统方式进行身份验证。为此，使用 `Connect-AzAccount`，它会弹出一个类似于[图 12-1](ch12.xhtml#ch12fig1)的窗口。
- en: '![Image](../images/12fig01.jpg)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![Image](../images/12fig01.jpg)'
- en: '*Figure 12-1: The `Connect-AzAccount` credential prompt*'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 12-1：`Connect-AzAccount` 凭证提示*'
- en: Provide your Azure username and password, and the window should close, giving
    an output similar to [Listing 12-1](ch12.xhtml#ch12list1).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 提供你的 Azure 用户名和密码后，窗口应该关闭，并显示类似于[清单 12-1](ch12.xhtml#ch12list1)的输出。
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '*Listing 12-1: Output from `Connect-AzAccount`*'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 12-1：`Connect-AzAccount` 输出*'
- en: Be sure to record the subscription ID and tenant ID. You’ll need those in your
    script a little later. If, for some reason, you don’t catch them while authenticating
    with `Connect-AzAccount` here, you can always get them by using the `Get-AzSubscription`
    command later.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 请确保记录下订阅 ID 和租户 ID。稍后在脚本中你将需要这些信息。如果由于某些原因，在这里通过 `Connect-AzAccount` 进行身份验证时没有捕获到它们，你可以稍后使用
    `Get-AzSubscription` 命令获取它们。
- en: 'Now that you’re (interactively) authenticated, you can start creating a service
    principal. It’s a three-step process: first, you create a new Azure AD application;
    then, you create the service principal itself; and last, you create a role assignment
    for that service principal.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经完成了（交互式）认证，可以开始创建服务主体了。这个过程分为三个步骤：首先，创建一个新的Azure AD应用；然后，创建服务主体本身；最后，为该服务主体创建角色分配。
- en: You can create the Azure AD application by using whatever name and URI you like
    ([Listing 12-2](ch12.xhtml#ch12list2)). What URI you use doesn’t matter for our
    purposes, but a URI is required to create the AD application. To ensure that you
    have adequate rights to create an AD application, refer to [*https://docs**.microsoft.com/en-us/azure/active-directory/develop/app-objects-and-service-principals*](https://docs.microsoft.com/en-us/azure/active-directory/develop/app-objects-and-service-principals)*.*
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用任何你喜欢的名称和URI来创建Azure AD应用（[清单12-2](ch12.xhtml#ch12list2)）。对于我们的目的，使用什么URI并不重要，但创建AD应用时必须提供URI。为了确保你有足够的权限来创建AD应用，参见[*https://docs**.microsoft.com/en-us/azure/active-directory/develop/app-objects-and-service-principals*](https://docs.microsoft.com/en-us/azure/active-directory/develop/app-objects-and-service-principals)*.*
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '*Listing 12-2: Creating an Azure AD application*'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单12-2：创建Azure AD应用*'
- en: You can see that you’re first creating a secure string by using a password ❶.
    After you have the password in the correct format, you create a new Azure AD application
    ❷. A service principal requires an Azure AD application to be created.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到，你首先通过使用密码❶来创建一个安全字符串。将密码转换为正确格式后，你会创建一个新的Azure AD应用❷。服务主体需要创建一个Azure AD应用。
- en: Next, you use the `New-AzADServicePrincipal` command to create the service principal,
    as in [Listing 12-3](ch12.xhtml#ch12list3). You reference the application created
    in [Listing 12-2](ch12.xhtml#ch12list2).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你使用`New-AzADServicePrincipal`命令来创建服务主体，如[清单12-3](ch12.xhtml#ch12list3)所示。你引用了[清单12-2](ch12.xhtml#ch12list2)中创建的应用。
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '*Listing 12-3: Creating an Azure service principal with PowerShell*'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单12-3：使用PowerShell创建Azure服务主体*'
- en: Last, you need to assign a role to the service principal. [Listing 12-4](ch12.xhtml#ch12list4)
    assigns a `Contributor` role to ensure that the service principal has the access
    it needs to perform all of the tasks in this chapter.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你需要为服务主体分配一个角色。[清单12-4](ch12.xhtml#ch12list4)为服务主体分配了一个`Contributor`角色，以确保该服务主体具备执行本章所有任务所需的访问权限。
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '*Listing 12-4: Creating a role assignment for a service principal*'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单12-4：为服务主体创建角色分配*'
- en: With that, the service principal has been created and assigned a role.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，服务主体就创建完成并分配了角色。
- en: 'The only thing left to do is save the encrypted password represented as a secure
    string for the application you just created somewhere on the disk. You can do
    that by using the `ConvertFrom-SecureString` command. The `ConvertFrom-SecureString`
    command (the complement of `ConvertTo-SecureString`) converts encrypted text represented
    as a PowerShell secure string to a general string, allowing you to save and reference
    it later:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 剩下的唯一任务是将表示为安全字符串的加密密码保存到磁盘上的某个位置。你可以使用`ConvertFrom-SecureString`命令来实现。`ConvertFrom-SecureString`命令（`ConvertTo-SecureString`的互补命令）将表示为PowerShell安全字符串的加密文本转换为普通字符串，从而允许你稍后保存并引用它：
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Once you have the password saved to disk, you’re ready to set up noninteractive
    authentication for Azure.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你将密码保存到磁盘上，你就可以开始为Azure设置非交互式认证了。
- en: Noninteractively Authenticating with Connect-AzAccount
  id: totrans-33
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用Connect-AzAccount进行非交互式认证
- en: The `Connect-AzAccount` command prompts you to manually input a username and
    password. In your scripts, you want to be as noninteractive as possible, because
    the last thing you want to do is depend on someone sitting in front of a computer
    to type in your password! Luckily, you can also pass a `PSCredential` object to
    `Connect-AzAccount`.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`Connect-AzAccount`命令会提示你手动输入用户名和密码。在你的脚本中，你希望尽可能减少交互操作，因为你最不希望依赖某个人坐在电脑前输入密码！幸运的是，你还可以将`PSCredential`对象传递给`Connect-AzAccount`。'
- en: 'You’ll write a small script to handle noninteractive authentication. First,
    let’s create a `PSCredential` object that contains the Azure app ID and password:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 你将编写一个小脚本来处理非交互式认证。首先，让我们创建一个包含Azure应用ID和密码的`PSCredential`对象：
- en: '[PRE5]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Remember the subscription ID and tenant ID you wrote down earlier? You need
    to pass those into `Connect-AzAccount` as well:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 还记得你之前写下的订阅ID和租户ID吗？你也需要将它们传递给`Connect-AzAccount`：
- en: '[PRE6]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: You’re all set up for noninteractive authentication! Now that you have this
    set up, it will be saved so you don’t have to authenticate like this again.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经为非交互式认证做好了准备！现在你完成了这个设置，它将被保存下来，以便以后无需再次进行认证。
- en: If you want the condensed code, download the *AzureAuthentication.ps1* script
    from the book’s resources for this chapter.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要简化的代码，可以从本章的书籍资源中下载*AzureAuthentication.ps1*脚本。
- en: Creating an Azure Virtual Machine and All Dependencies
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建 Azure 虚拟机及其所有依赖项
- en: It’s time to set up an Azure virtual machine. *Azure virtual machines* are one
    of the most popular Azure services, and having the skills to build Azure VMs will
    be a big advantage for anyone working in an Azure environment.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，是时候设置一个 Azure 虚拟机了。*Azure 虚拟机*是 Azure 最受欢迎的服务之一，掌握构建 Azure 虚拟机的技能对任何在 Azure
    环境中工作的人来说都是一项重大优势。
- en: Now, way back in the day, when I first created my Azure subscription and wanted
    to play around with a virtual machine, I thought there’d be a single command to
    set it up—like all I’d have to do was run `New-AzureVm`, and voila! There’d be
    a brand-new virtual machine for me to play with. Boy, was I wrong.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 很久以前，当我第一次创建我的 Azure 订阅并想玩虚拟机时，我以为会有一个单独的命令来设置它——就像我只需要运行`New-AzureVm`，然后 voilà！就会有一台全新的虚拟机让我玩。哦，我错得可真大。
- en: 'Little did I realize the number of dependencies that had to be in place before
    a virtual machine would actually work. Did you notice how short the prerequisite
    section of this chapter is? I left it that way for a reason: to get more experience
    working with PowerShell, you’ll install all the dependencies you need to create
    a virtual machine with Azure. You’ll install a resource group, a virtual network,
    a storage account, a public IP address, a network interface, and an operating
    system image. In other words, you’ll build this VM from the ground up. Let’s get
    started!'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我没意识到在虚拟机真正能够工作之前，有这么多的依赖关系需要设置。你有没有注意到本章的前提部分有多短？我故意这么做的，原因是：为了获得更多使用 PowerShell
    的经验，你需要安装所有创建 Azure 虚拟机所需的依赖项。你将安装资源组、虚拟网络、存储账户、公共 IP 地址、网络接口和操作系统镜像。换句话说，你将从头开始构建这台虚拟机。我们开始吧！
- en: Creating a Resource Group
  id: totrans-45
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 创建资源组
- en: In Azure, everything is a *resource*, and everything must live inside a *resource
    group*. Your first task is to create a resource group. To do that, you’ll use
    the `New-AzResourceGroup` command. This command requires a resource group name
    and the geographic region that it will be created in. For this example, you’ll
    create a resource group named `PowerShellForSysAdmins-RG`, and you’ll place it
    in the East US region (as shown in [Listing 12-5](ch12.xhtml#ch12list5)). You
    can find all available regions by running the `Get-AzLocation` command.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Azure 中，所有东西都是*资源*，而且所有东西都必须放在*资源组*内。你首先要做的就是创建一个资源组。为此，你将使用`New-AzResourceGroup`命令。此命令需要资源组名称以及它将被创建的地理区域。在这个例子中，你将创建一个名为`PowerShellForSysAdmins-RG`的资源组，并将其放置在美国东部区域（如[Listing
    12-5](ch12.xhtml#ch12list5)所示）。你可以通过运行`Get-AzLocation`命令来查找所有可用的区域。
- en: '[PRE7]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '*Listing 12-5: Creating an Azure resource group*'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '*Listing 12-5：创建 Azure 资源组*'
- en: Once the resource group is created, it’s time to build out the network stack
    your VM will use.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦资源组创建完成，就可以开始构建虚拟机将使用的网络堆栈。
- en: Creating the Network Stack
  id: totrans-50
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 创建网络堆栈
- en: 'For your VM to connect to the outside world and other Azure resources, it needs
    a *network stack*: the subnet, virtual network, public IP address (optional),
    and virtual network adapter (vNIC) that the VM uses.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让你的虚拟机连接到外部世界和其他 Azure 资源，它需要一个*网络堆栈*：子网、虚拟网络、公共 IP 地址（可选）和虚拟网络适配器（vNIC）。
- en: The Subnet
  id: totrans-52
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 子网
- en: Your first step is to create a subnet. A *subnet* is a logical network of IP
    addresses that can communicate with one another without the use of a router. The
    subnet will be what goes “into” the virtual network. Subnets segment a virtual
    network into smaller networks.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 你的第一步是创建一个子网。*子网*是一个逻辑网络，IP 地址可以相互通信，而不需要路由器。子网将“进入”虚拟网络。子网将虚拟网络划分为更小的网络。
- en: To create a subnet config, use the `New-AzVirtualNetworkSubnetConfig` command
    ([Listing 12-6](ch12.xhtml#ch12list6)). This command requires a name and the IP
    address prefix or network identity.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建子网配置，请使用`New-AzVirtualNetworkSubnetConfig`命令（见[Listing 12-6](ch12.xhtml#ch12list6)）。此命令需要一个名称和
    IP 地址前缀或网络标识。
- en: '[PRE8]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '*Listing 12-6: Creating a virtual network subnet config*'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '*Listing 12-6：创建虚拟网络子网配置*'
- en: You assign the subnet a name of `PowerShellForSysAdmins-Subnet` and use the
    prefix of 10.0.1.0/24.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 您为子网指定了 `PowerShellForSysAdmins-Subnet` 的名称，并使用前缀 10.0.1.0/24。
- en: The Virtual Network
  id: totrans-58
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 虚拟网络
- en: Now that you’ve created a subnet config, you can use it to create the virtual
    network. The *virtual network* is an Azure resource that allows you to segment
    various resources such as virtual machines from all other resources. A virtual
    network can be thought of in the same context as a logical network that you may
    implement on premises in a network router.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您已经创建了一个子网配置，可以使用它来创建虚拟网络。*虚拟网络*是一个 Azure 资源，它允许您将虚拟机等资源与所有其他资源进行隔离。虚拟网络可以理解为您在本地网络路由器中可能实现的逻辑网络。
- en: To create a virtual network, use the `New-AzVirtualNetwork` command, as shown
    in [Listing 12-7](ch12.xhtml#ch12list7).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建虚拟网络，请使用 `New-AzVirtualNetwork` 命令，如[列表 12-7](ch12.xhtml#ch12list7)所示。
- en: '[PRE9]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '*Listing 12-7: Creating a virtual network*'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 12-7：创建虚拟网络*'
- en: Notice that to create a virtual network, you have to specify the name of the
    network ❶, the resource group ❷, the region (location) ❸, and the overarching
    private network that your subnet will be a part of ❹.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，要创建虚拟网络，您需要指定网络名称 ❶、资源组 ❷、区域（位置） ❸ 和子网所属的整体私有网络 ❹。
- en: The Public IP Address
  id: totrans-64
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 公共 IP 地址
- en: Now that you’ve set up a virtual network, you need a public IP address so you
    can connect your VM to the internet and have clients connect to your VM. Note
    that this step isn’t technically necessary if you plan to make your virtual machine
    available only to other Azure resources. But since you have bigger plans for your
    VM, you’ll go ahead and do it.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您已经设置了一个虚拟网络，您需要一个公共 IP 地址，以便将虚拟机连接到互联网，并允许客户端连接到您的虚拟机。请注意，如果您计划将虚拟机仅提供给其他
    Azure 资源，那么这一过程在技术上并不是必须的。但由于您对虚拟机有更大的规划，因此您将继续执行此步骤。
- en: 'Again, you can create a public IP address by using a single command: `New-AzPublicIpAddress`.
    You’ve seen most of the parameters for this function before, but notice that there’s
    a new one named `AllocationMethod`. This parameter tells Azure whether to create
    a dynamic or static IP address resource. As shown in [Listing 12-8](ch12.xhtml#ch12list8),
    specify that you want a dynamic IP address. You assign your virtual machines dynamic
    IP addresses because it’s one less task to worry about. Because you don’t require
    an IP address to always be the same, using dynamic IP addresses frees you from
    another task.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，您可以通过使用一条命令来创建公共 IP 地址：`New-AzPublicIpAddress`。您之前已经见过这个功能的大部分参数，但请注意有一个新的参数，名为
    `AllocationMethod`。这个参数告诉 Azure 是否创建动态或静态 IP 地址资源。如[列表 12-8](ch12.xhtml#ch12list8)所示，指定您需要一个动态
    IP 地址。您为虚拟机分配动态 IP 地址，因为这可以减少一个需要担心的任务。由于您不要求 IP 地址始终保持相同，使用动态 IP 地址可以让您免去另一项麻烦。
- en: '[PRE10]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '*Listing 12-8: Creating a public IP address*'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 12-8：创建公共 IP 地址*'
- en: Although this public IP address exists, it’s useless because it’s not associated
    with anything yet. You need to *bind* it to a vNIC.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这个公共 IP 地址已经存在，但它没有任何作用，因为它尚未与任何内容关联。您需要将其*绑定*到 vNIC。
- en: The Virtual Network Adapter
  id: totrans-70
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 虚拟网络适配器
- en: To build the vNIC, you need to execute another single-line command, `New-AzNetworkInterface`,
    and you can use a lot of the same parameters you’ve been using. You also need
    the ID of the subnet and the ID of the public IP address you created earlier.
    Both the subnet and the public IP address were stored as objects with an ID property;
    you simply need to access that property, as shown in [Listing 12-9](ch12.xhtml#ch12list9).
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建 vNIC，您需要执行另一个单行命令 `New-AzNetworkInterface`，并且可以使用您之前使用的大部分相同参数。您还需要先前创建的子网和公共
    IP 地址的 ID。子网和公共 IP 地址都存储为具有 ID 属性的对象；您只需访问该属性，如[列表 12-9](ch12.xhtml#ch12list9)所示。
- en: '[PRE11]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '*Listing 12-9: Creating an Azure vNIC*'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 12-9：创建 Azure vNIC*'
- en: Your network stack is complete! The next step is creating the storage account.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 您的网络堆栈已经完成！下一步是创建存储帐户。
- en: Creating a Storage Account
  id: totrans-75
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 创建存储帐户
- en: You need to store the virtual machine somewhere. That somewhere is called a
    *storage account*. Creating a basic storage account is as easy as using the `New``-AzStorageAccount`
    command. As with the past few commands you’ve seen, you need a name, resource
    group, and location; but here you have the new `Type` parameter, which specifies
    the level of redundancy your storage account will contain. Use the least expensive
    type of storage account (*locally redundant*), specified by the `Standard_LRS`
    argument, as you can see in [Listing 12-10](ch12.xhtml#ch12list10).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要为虚拟机指定存储位置。这个位置叫做 *存储帐户*。创建一个基本存储帐户和使用 `New-AzStorageAccount` 命令一样简单。与前面几条命令一样，你需要一个名称、资源组和位置；但这里有一个新的
    `Type` 参数，它指定你的存储帐户的冗余级别。使用最便宜的存储帐户类型（*本地冗余*），通过 `Standard_LRS` 参数指定，如[清单 12-10](ch12.xhtml#ch12list10)所示。
- en: '[PRE12]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '*Listing 12-10: Creating an Azure storage account*'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 12-10：创建 Azure 存储帐户*'
- en: Now that you have somewhere for the VM to live, it’s time to set up the operating
    system image.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你有了虚拟机的存储位置，是时候设置操作系统映像了。
- en: Creating the Operating System Image
  id: totrans-80
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 创建操作系统映像
- en: The *operating system image* is the base to the virtual disk your virtual machine
    will be using. Instead of installing Windows on your virtual machine, you’ll use
    a preexisting operating system image to get you to the point to where you can
    just turn it on.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '*操作系统映像* 是虚拟机将使用的虚拟磁盘的基础。你不会在虚拟机上安装 Windows，而是使用一个现有的操作系统映像，将你带到只需启动它的阶段。'
- en: 'You create an operating system image in two steps: defining some OS configuration
    settings, and then defining the offer or OS image to use. Azure uses the term
    *offer* to reference the VM image.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 创建操作系统映像分为两步：定义一些操作系统配置设置，然后定义要使用的 offer 或操作系统映像。Azure 使用 *offer* 这个术语来引用虚拟机映像。
- en: To set up all the configuration settings, you build a VM configuration object.
    This object defines the name and size of the VM you’re creating. You do this by
    using the `New-AzVMConfig` command. In [Listing 12-11](ch12.xhtml#ch12list11),
    you create a `Standard_A3` VM. (You can find a list of all sizes available by
    running `Get-AzVMSize` and specifying the region.).
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 为了设置所有配置选项，你需要构建一个虚拟机配置对象。此对象定义了你正在创建的虚拟机的名称和大小。你可以使用 `New-AzVMConfig` 命令来完成。在[清单
    12-11](ch12.xhtml#ch12list11)中，你创建了一个 `Standard_A3` 虚拟机。（你可以运行 `Get-AzVMSize`
    并指定区域，来查找所有可用的虚拟机大小。）
- en: '[PRE13]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '*Listing 12-11: Creating a VM configuration*'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 12-11：创建虚拟机配置*'
- en: Once the configuration is created, you can pass the object as the VM parameter
    for the `Set-AzVMOperatingSystem` command. This command allows you to both define
    operating-system-specific attributes, such as the hostname of the VM, and enable
    Windows Update and other attributes. We’ll keep it simple here, but if you’d like
    to see everything possible, check out `Set-AzVMOperatingSystem` information by
    using `Get-Help`.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 配置创建完成后，你可以将该对象作为 VM 参数传递给 `Set-AzVMOperatingSystem` 命令。此命令允许你定义操作系统特定的属性，例如虚拟机的主机名，并启用
    Windows 更新及其他属性。我们在这里保持简单，但如果你想查看所有可能的选项，可以使用 `Get-Help` 查看 `Set-AzVMOperatingSystem`
    的详细信息。
- en: '[Listing 12-12](ch12.xhtml#ch12list12) creates a Windows operating system object
    that will have the hostname of `Automate-VM` (note: the hostname must be fewer
    than 16 characters). You use the username and password returned by the `Get-Credential`
    command to create a new administrative user with the provided password, and you
    use the `EnableAutoUpdate` parameter to automatically apply any new Windows updates.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '[清单 12-12](ch12.xhtml#ch12list12) 创建了一个 Windows 操作系统对象，该对象的主机名为 `Automate-VM`（注意：主机名必须少于
    16 个字符）。你将使用 `Get-Credential` 命令返回的用户名和密码来创建一个新的管理员用户，并使用提供的密码；同时，使用 `EnableAutoUpdate`
    参数自动应用任何新的 Windows 更新。'
- en: '[PRE14]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '*Listing 12-12: Creating an operating system image*'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 12-12：创建操作系统映像*'
- en: Now you need to create a VM offer. An offer is how Azure allows you to choose
    what kind of operating system will be installed on the VM’s OS disk. This example
    uses a Windows Server 2012 R2 Datacenter image. This image is one provided by
    Microsoft, so no need to create your own.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你需要创建一个 VM offer。offer 是 Azure 允许你选择安装在虚拟机操作系统磁盘上的操作系统类型的方式。此示例使用的是 Windows
    Server 2012 R2 数据中心映像。这是微软提供的映像，因此无需创建自己的映像。
- en: Once you’ve created the offer object, you can create a source image by using
    the `Set-AzVMSourceImage` command, as shown in [Listing 12-13](ch12.xhtml#ch12list13).
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你创建了 offer 对象，你可以通过使用 `Set-AzVMSourceImage` 命令来创建源映像，如[清单 12-13](ch12.xhtml#ch12list13)所示。
- en: '[PRE15]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '*Listing 12-13: Finding and creating a VM source image*'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 12-13：查找和创建虚拟机源映像*'
- en: Here, you’re querying all offers in the East US region ❶ with a publisher name
    of `MicrosoftWindowsServer` ❷. You may use `Get-AzVMImagePublisher` to find a
    list of publishers. You then limit the offers to a name of `WindowsServer` ❸.
    With the source image allocated, you can now assign the image to the VM object.
    This completes the setup of the VM’s virtual disk.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你正在查询东部美国区域❶中所有发布商名称为`MicrosoftWindowsServer` ❷的可用项。你可以使用`Get-AzVMImagePublisher`来查找发布商列表。然后，你将可用项限制为名为`WindowsServer`
    ❸的项。分配了源镜像后，你现在可以将该镜像分配给虚拟机对象。这样就完成了虚拟机虚拟磁盘的设置。
- en: To assign the image to the VM object, you need a URI for the OS disk you just
    created, and you need to pass that URI along with the VM object to the `Set-AzVMOSDisk`
    command ([Listing 12-14](ch12.xhtml#ch12list14)).
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 要将镜像分配给虚拟机对象，你需要一个你刚刚创建的操作系统磁盘的URI，并且需要将该URI与虚拟机对象一起传递给`Set-AzVMOSDisk`命令（[清单
    12-14](ch12.xhtml#ch12list14)）。
- en: '[PRE16]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '*Listing 12-14: Assigning the operating system disk to the VM*'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 12-14：将操作系统磁盘分配给虚拟机*'
- en: At this point, you have an OS disk, and it’s assigned to a VM object. Time to
    finish this up!
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 到此为止，你已经有了操作系统磁盘，并且它已经分配给了虚拟机对象。现在是时候完成这项工作了！
- en: Wrapping Up
  id: totrans-99
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 总结
- en: You’re *almost* done. All that’s left is to attach the vNIC you created earlier
    and, well, create the actual VM.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 你*几乎*完成了。剩下的就是附加你之前创建的vNIC，并且，嗯，创建实际的虚拟机。
- en: To attach the vNIC to the VM, you use the `Add-AzVmNetworkInterface` command
    and pass the VM object you created along with the ID of the vNIC you created earlier—all
    of which you can see in [Listing 12-15](ch12.xhtml#ch12list15).
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 要将vNIC附加到虚拟机，你需要使用`Add-AzVmNetworkInterface`命令，并传递你创建的虚拟机对象以及之前创建的vNIC的ID—你可以在[清单
    12-15](ch12.xhtml#ch12list15)中查看所有这些。
- en: '[PRE17]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '*Listing 12-15: Attaching the vNIC to the VM*'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 12-15：将vNIC附加到虚拟机*'
- en: And now, at last, you can create the VM, as shown in [Listing 12-16](ch12.xhtml#ch12list16).
    By calling the `New-AzVm` command with the VM object, the resource group, and
    region, you finally have your VM! Note that this will start the VM, and at this
    point, you’ll begin incurring charges.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，终于可以创建虚拟机，如[清单 12-16](ch12.xhtml#ch12list16)所示。通过调用`New-AzVm`命令并提供虚拟机对象、资源组和区域，你就拥有了自己的虚拟机！请注意，这会启动虚拟机，并且此时你将开始产生费用。
- en: '[PRE18]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '*Listing 12-16: Creating the Azure virtual machine*'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 12-16：创建Azure虚拟机*'
- en: You should have a brand-new VM in Azure called `Automate-VM`. To confirm, you
    can run `Get-AzVm` to ensure that the VM exists. Check out the output in [Listing
    12-17](ch12.xhtml#ch12list17).
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该已经在Azure中拥有一个全新的虚拟机，名为`Automate-VM`。为了确认，你可以运行`Get-AzVm`来确保虚拟机存在。查看[清单 12-17](ch12.xhtml#ch12list17)中的输出。
- en: '[PRE19]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '*Listing 12-17: Discovering your Azure VM*'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 12-17：发现你的Azure虚拟机*'
- en: If you see similar output, you’ve successfully created an Azure virtual machine!
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你看到类似的输出，那么你已经成功创建了一个Azure虚拟机！
- en: Automating the VM Creation
  id: totrans-111
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 自动化虚拟机创建
- en: Whew! That was a lot of work getting a single virtual machine running and building
    all of the dependencies; I would hate to have to go through it again when I want
    to build my next VM. Why don’t we create a single function that’ll handle all
    this for us? With a function, we can incorporate all the code we just went through
    into a single, executable chunk of code that we can reuse over and over again.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 呼！创建一个虚拟机并建立所有依赖关系真是件大事；当我想要创建下一个虚拟机时，我真不希望再经历一遍。为什么我们不创建一个函数来为我们处理这一切呢？通过使用函数，我们可以将刚才的所有代码整合到一个单独的、可执行的代码块中，并且可以重复使用。
- en: If you’re feeling adventurous, I created a custom PowerShell function called
    `New-CustomAzVm`, available in this chapter’s resources. It provides an excellent
    example of how to incorporate all the tasks accomplished in this section into
    a single, cohesive function with a minimal amount of input.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有冒险精神，我创建了一个名为`New-CustomAzVm`的自定义PowerShell函数，可以在本章的资源中找到。它提供了一个很好的示例，展示了如何将本节中完成的所有任务整合成一个简洁的函数，并且只需要最少的输入。
- en: Deploying an Azure Web App
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 部署Azure Web应用
- en: If you’re working with Azure, you’ll want to know how to deploy an Azure web
    app. *Azure web apps* allow you to quickly provision websites and various other
    web services running on servers such as IIS, Apache, and more without worrying
    about building the web server itself. Once you learn how to deploy an Azure web
    app with PowerShell, you’ll be able to work the process into larger workflows
    including development build pipelines, test environment provisioning, lab provisioning,
    and more.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在使用 Azure，你可能想了解如何部署 Azure web 应用。*Azure web 应用* 允许你快速配置网站和其他各种 web 服务，这些服务运行在
    IIS、Apache 等服务器上，而无需担心构建 web 服务器本身。一旦你学会如何使用 PowerShell 部署 Azure web 应用，你就可以将这个过程融入到更大的工作流中，包括开发构建管道、测试环境配置、实验室配置等。
- en: 'Deploying an Azure web app is a two-step process: you create an app service
    plan and then create the web app itself. Azure web apps are a part of Azure App
    Services, and any resource under this umbrella must have an associated app service
    plan. *App service plans* tell the web app which kind of underlying compute resources
    to build the program on.'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 部署 Azure web 应用是一个两步过程：首先创建应用服务计划，然后创建 web 应用本身。Azure web 应用是 Azure 应用服务的一部分，任何属于此类别的资源都必须关联一个应用服务计划。*应用服务计划*
    告诉 web 应用要构建程序的底层计算资源类型。
- en: Creating an App Service Plan and Web App
  id: totrans-117
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 创建应用服务计划和 web 应用
- en: Creating an Azure service plan is simple enough. As before, you need only a
    single command. This command requires you to provide the name of the app service
    plan, the region or location where it will exist, the resource group, and an optional
    tier that defines the kind of performance provided by the server running underneath
    the web app.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 Azure 服务计划相当简单。和之前一样，你只需要一个命令。此命令要求你提供应用服务计划的名称、所在的区域或位置、资源组，以及一个可选的层级，定义托管
    web 应用的服务器的性能类型。
- en: 'Just as you did in the previous section, you create a resource group to keep
    all of your resources together; let’s use this command: New-AzResourceGroup -Name
    ''PowerShellForSysAdmins-App'' -Location ''East US''. Once the resource group
    is created, you create the app service plan and place it inside that resource
    group.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 就像在前一节中做的一样，你需要创建一个资源组，将所有资源放在一起；使用以下命令：New-AzResourceGroup -Name 'PowerShellForSysAdmins-App'
    -Location 'East US'。一旦资源组创建完成，你就可以创建应用服务计划，并将其放入该资源组中。
- en: Your web app, called `Automate`, will be in the East US region and in the `Free`
    tier of apps. You can see all the code to accomplish those tasks in [Listing 12-18](ch12.xhtml#ch12list18).
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 你的 web 应用名为 `Automate`，将位于 East US 区域，并且属于 `Free` 层级的应用。你可以在 [清单 12-18](ch12.xhtml#ch12list18)
    中看到完成这些任务的所有代码。
- en: '[PRE20]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '*Listing 12-18: Creating an Azure app service plan*'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 12-18：创建 Azure 应用服务计划*'
- en: Once this command is executed, you’ll have the app service plan created and
    can move on to creating the web app itself.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦执行了此命令，你将创建一个应用服务计划，并可以继续创建 web 应用本身。
- en: You may not be surprised to hear that creating an Azure web app with PowerShell
    is also a single-command process. Just run `New-AzWebApp`, and supply it with
    the now-common parameters of resource group name, name, and location, along with
    the app service plan this web app will sit on top of.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能不会惊讶地发现，使用 PowerShell 创建 Azure web 应用也是一个单命令过程。只需运行 `New-AzWebApp`，并提供现在常见的参数：资源组名称、应用名称和位置，以及该
    web 应用所在的应用服务计划。
- en: '[Listing 12-19](ch12.xhtml#ch12list19) uses the `New-AzWebApp` command to create
    a web app with the name `MyApp` inside the `PowerShellForSysAdmins-App` resource
    group using the app service plan `Automate` (the one that you created earlier).
    Note that this starts the app, which may incur billing.'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '[清单 12-19](ch12.xhtml#ch12list19) 使用 `New-AzWebApp` 命令创建一个名为 `MyApp` 的 web
    应用，位于 `PowerShellForSysAdmins-App` 资源组内，使用之前创建的应用服务计划 `Automate`。请注意，这会启动应用程序，可能会产生费用。'
- en: '[PRE21]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '*Listing 12-19: Creating an Azure web app*'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 12-19：创建 Azure web 应用*'
- en: When you run this command, you should see a lot of properties in your output;
    these are the web app’s various settings.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 当你运行此命令时，你应该在输出中看到许多属性；这些是 web 应用的各种设置。
- en: Deploying an Azure SQL Database
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 部署 Azure SQL 数据库
- en: 'Another common Azure task is deploying an Azure SQL database. To deploy an
    Azure SQL database, you need to do three things: create the Azure SQL server that
    the database will run on, create the database itself, and then create a SQL Server
    firewall rule to connect to the database.'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个常见的 Azure 任务是部署 Azure SQL 数据库。要部署 Azure SQL 数据库，你需要做三件事：创建 Azure SQL 服务器（数据库将运行在其上），创建数据库本身，然后创建一个
    SQL Server 防火墙规则来连接到数据库。
- en: As in previous sections, you create a resource group to house all your new resources.
    Run New-AzResourceGroup -Name 'PowerShellForSysAdmins-SQL' -Location 'East US'
    to do so. Then you’ll create the SQL server that the database will run on.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，你需要创建一个资源组来容纳所有新的资源。可以运行`New-AzResourceGroup -Name 'PowerShellForSysAdmins-SQL'
    -Location 'East US'`来创建资源组。然后，你将创建一个 SQL 服务器来运行数据库。
- en: Creating an Azure SQL Server
  id: totrans-132
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 创建 Azure SQL 服务器
- en: 'Creating an Azure SQL server takes yet another single-line command: `New-AzSqlServer`.
    And yet again, you need to provide the name of the resource, the name of the server
    itself, and the region—but here, you also need the username and password of the
    SQL administrator user on the server. This requires a little more work. Because
    you need to create a credential to pass to `New-AzSqlServer`, let’s go ahead and
    do that first. I covered how to create a `PSCredential` object in the “Creating
    a Service Principal” on [page 158](ch12.xhtml#page_158), so we won’t go over that
    here.'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 Azure SQL 服务器需要另一个单行命令：`New-AzSqlServer`。同样，你需要提供资源名称、服务器名称以及区域，但在这里，你还需要提供
    SQL 管理员用户的用户名和密码。这需要更多的工作。由于你需要创建一个凭证传递给`New-AzSqlServer`，我们先创建该凭证。我已经在“创建服务主体”一节中讲解了如何创建一个`PSCredential`对象，具体内容见[第
    158 页](ch12.xhtml#page_158)，所以这里不再赘述。
- en: '[PRE22]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Once you have a credential, the rest is as easy as putting all the parameters
    into a hashtable, and passing it into the `New-AzSqlServer` function, as shown
    in [Listing 12-20](ch12.xhtml#ch12list20).
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你有了凭证，其余的工作就像将所有参数放入哈希表，并传递给`New-AzSqlServer`函数一样简单，具体内容见[清单 12-20](ch12.xhtml#ch12list20)。
- en: '[PRE23]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '*Listing 12-20: Creating the Azure SQL server*'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 12-20：创建 Azure SQL 服务器*'
- en: Now that the SQL server has been created, you have the bedrock for your database.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 现在 SQL 服务器已经创建，你已经为数据库奠定了基础。
- en: Creating the Azure SQL Database
  id: totrans-139
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 创建 Azure SQL 数据库
- en: To create the SQL database, use the `New-AzSqlDatabase` command, as shown in
    [Listing 12-21](ch12.xhtml#ch12list21). Along with the common parameter of `ResourceGroupName`,
    pass in the name of the server that you just created and the name of the database
    you want to create (in this example, `AutomateSQLDb`).
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建 SQL 数据库，请使用`New-AzSqlDatabase`命令，具体内容见[清单 12-21](ch12.xhtml#ch12list21)。除了常见的`ResourceGroupName`参数外，还需传入你刚才创建的服务器名称以及你要创建的数据库名称（在此示例中为`AutomateSQLDb`）。
- en: '[PRE24]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '*Listing 12-21: Creating an Azure SQL database*'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 12-21：创建 Azure SQL 数据库*'
- en: At this point, you have a running SQL database in Azure. But when you try to
    connect to it, it won’t work. By default, when a new Azure SQL database is created,
    it’s locked down from any outside connections. You need to create a firewall rule
    so you can allow connections to your database.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 到此为止，你已经在 Azure 中运行了一个 SQL 数据库。但当你尝试连接时，它无法正常工作。默认情况下，创建新的 Azure SQL 数据库时，它会锁定所有外部连接。你需要创建一个防火墙规则，允许连接到你的数据库。
- en: Creating the SQL Server Firewall Rule
  id: totrans-144
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 创建 SQL 服务器防火墙规则
- en: 'The command to create a firewall rule is `New-AzSqlServerFirewallRule`. The
    command takes in the resource group name, the name of the server you created earlier,
    the name for the firewall rule, and start and end IP addresses. The start and
    end IP addresses allow you to specify a single IP address or a range of IPs to
    allow into your database. Since you’ll be working on only one local computer to
    manage Azure, let’s limit the connections to your SQL server to be from only your
    current computer. To do that, you first need to figure out your public IP address.
    You can easily do this via a PowerShell one-liner: Invoke-RestMethod http://ipinfo.io/json
    | Select -ExpandProperty ip. You can then use the public IP address for both the
    `StartIPAddress` and `EndIPAddress` parameters. However, note that if your public
    IP address changes, you’ll need to do all this again.'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 创建防火墙规则的命令是`New-AzSqlServerFirewallRule`。此命令需要传入资源组名称、你之前创建的服务器名称、防火墙规则名称以及起始和结束的
    IP 地址。起始和结束的 IP 地址可以让你指定一个单一的 IP 地址或 IP 地址范围，允许其连接到你的数据库。由于你只会在一台本地计算机上管理 Azure，我们将把
    SQL 服务器的连接限制为仅来自当前计算机。为此，你需要先找出你的公共 IP 地址。你可以通过一个 PowerShell 单行命令轻松获取：`Invoke-RestMethod
    http://ipinfo.io/json | Select -ExpandProperty ip`。然后，你可以将公共 IP 地址用作`StartIPAddress`和`EndIPAddress`参数。然而，请注意，如果你的公共
    IP 地址发生变化，你需要重新执行这些操作。
- en: Also, be aware that the server name in [Listing 12-22](ch12.xhtml#ch12list22)
    must be made up of all lowercase letters, hyphens, and/or numbers. Otherwise,
    you’ll get an error when you attempt to create the firewall rule.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，请注意，清单 [12-22](ch12.xhtml#ch12list22) 中的服务器名称必须由全小写字母、连字符和/或数字组成。否则，当你尝试创建防火墙规则时，会出现错误。
- en: '[PRE25]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '*Listing 12-22: Creating an Azure SQL server firewall rule*'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 12-22：创建 Azure SQL 服务器防火墙规则*'
- en: That’s it! Your database should be up and running.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！你的数据库应该已经启动并运行了。
- en: Testing Your SQL Database
  id: totrans-150
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 测试你的 SQL 数据库
- en: To test your database, let’s make a small function that uses the `System.Data.SqlClient.SqlConnection`
    object’s `Open()` method to attempt a simple connection; see [Listing 12-23](ch12.xhtml#ch12list23).
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 要测试你的数据库，让我们创建一个小功能，使用`System.Data.SqlClient.SqlConnection`对象的`Open()`方法尝试一个简单的连接；请参见[清单
    12-23](ch12.xhtml#ch12list23)。
- en: '[PRE26]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '*Listing 12-23: Testing a SQL connection to the Azure SQL database*'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 12-23：测试连接到 Azure SQL 数据库的 SQL 连接*'
- en: You use the SQL server’s fully qualified domain name created earlier as the
    `ServerName` parameter for this function ❶ along with the SQL administrator username
    and password inside a `PSCredential` object ❷.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 你使用之前创建的 SQL 服务器完全限定的域名作为此函数的`ServerName`参数❶，并将 SQL 管理员的用户名和密码放入一个`PSCredential`对象中❷。
- en: Then you break apart the `PSCredential` object into a plaintext username and
    password ❸, create the connection string to make the database connection ❹, invoke
    the `Open()` method on the `SqlConnection` object to attempt to connect to the
    database ❺, and then finally close the database connection ❻.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你将`PSCredential`对象分解成明文用户名和密码❸，创建连接字符串以建立数据库连接❹，在`SqlConnection`对象上调用`Open()`方法尝试连接到数据库❺，最后关闭数据库连接❻。
- en: You can execute this function by running Test-SqlConnection -ServerName 'powershellsysadmins-sqlsrv.database.windows.net'
    -DatabaseName 'AutomateSQLDb' -Credential (Get-Credential). If you can connect
    to the database, the function will return `True`; otherwise, it will return `False`
    (and further investigation will be needed).
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过运行 Test-SqlConnection -ServerName 'powershellsysadmins-sqlsrv.database.windows.net'
    -DatabaseName 'AutomateSQLDb' -Credential (Get-Credential) 来执行此功能。如果你能连接到数据库，函数将返回`True`；否则，它将返回`False`（并且需要进一步调查）。
- en: You can clean everything up by removing the resource group with the command
    Remove-AzResourceGroup -ResourceGroupName 'PowerShellForSysAdmins-SQL'.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过执行命令 Remove-AzResourceGroup -ResourceGroupName 'PowerShellForSysAdmins-SQL'
    来清理所有内容。
- en: Summary
  id: totrans-158
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you dove headfirst into automating Microsoft Azure with PowerShell.
    You set up noninteractive authentication, and deployed a virtual machine, web
    app, and SQL database. And you did it all from PowerShell, sparing you any visits
    to the Azure portal.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，你深入学习了如何使用 PowerShell 自动化 Microsoft Azure。你设置了非交互式身份验证，部署了虚拟机、Web 应用和
    SQL 数据库。而且，你全程都通过 PowerShell 完成，免去了访问 Azure 门户的麻烦。
- en: You couldn’t have done this without the `Az` PowerShell module and the hard
    work of the people who created it. Like other PowerShell cloud modules, all these
    commands rely on various APIs that are being called under the hood. Thanks to
    the module, you didn’t have to worry about learning how to call REST methods or
    use endpoint URLs.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有`Az` PowerShell 模块和那些开发它的人的辛勤工作，你是做不到这一点的。像其他 PowerShell 云模块一样，所有这些命令都依赖于在后台调用的各种
    API。多亏了这个模块，你不需要担心如何调用 REST 方法或使用端点 URL。
- en: In the next chapter, you’ll take a look at using PowerShell to automate Amazon
    Web Services.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，你将学习如何使用 PowerShell 自动化 Amazon Web Services。
