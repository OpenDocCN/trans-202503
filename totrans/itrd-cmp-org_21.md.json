["```\n   // Write Hello, World! using a system call.\n           .arch armv8-a\n   // Useful names\n           .equ    NUL, 0\n           .equ    STDOUT, 1\n        ➊ .equ    WRITE, 0x40\n           .equ    EXIT, 0x5d\n   // Stack frame\n           .equ    save19, 16\n           .equ    FRAME, 32\n   // Constant data\n           .section  .rodata message:\n           .string \"Hello, World!\\n\"\n   // Code\n           .text\n           .align  2\n           .global my_hello\n           .type   my_hello, %function\n➋ my_hello:\n           adr     x1, message       // Address of message\n   loop:\n           ldrb    w3, [x1]          // Load character\n           cmp     w3, NUL           // End of string?\n           b.eq    done              // Yes\n           mov     x2, 1             // No, one char\n           mov     x0, STDOUT        // Write on screen\n           mov     x8, WRITE\n        ➌ svc     0                 // Tell OS to do it\n           add     x1, x1, 1         // Increment pointer\n           b       loop              //   and continue\n   done:\n           mov     w0, wzr           // Return value\n        ➍ mov     x8, EXIT          // Terminate this process\n           svc     0\n```", "```\n$ ld -e my_hello -o hello_world hello_world.o\n```"]