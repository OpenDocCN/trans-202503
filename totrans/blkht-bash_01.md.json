["```\n$ **bash --version**\n```", "```\n$ **env**\n\nSHELL=/bin/bash\nLANGUAGE=en_CA:en\nDESKTOP_SESSION=ubuntu\nPWD=/home/user\n`--snip--`\n```", "```\n$ **echo ${SHELL}**\n\n/bin/bash \n```", "```\n$ **echo ${RANDOM}**\n8744\n\n$ echo ${UID}\n1000\n\n$ **echo ${OSTYPE}**\nlinux-gnu \n```", "```\n$ **man ls**\n\nNAME\n      ls - list directory contents\n\nSYNOPSIS\n      ls [OPTION]... [FILE]...\n\nDESCRIPTION\n      List information about the FILEs (the current directory by default).\n      Sort entries alphabetically if none of -cftuvSUX nor\n      --sort is specified.\n\n Mandatory arguments to long options are mandatory for short options too.\n      -a, --all\n      do not ignore entries starting with .\n`--snip--` \n```", "```\n$ **ls -l**\n```", "```\n$ **ls -la**\n$ **ls -l -a** \n```", "```\n$ **ls --help**\n```", "```\n$ **ls -a**\n$ **ls --all** \n```", "```\n$ **mkdir directory1**\n```", "```\n$ **mkdir directory2 directory3**\n```", "```\n$ **ps -e -f**\n$ **ps -ef** \n```", "```\n$ **df --human-readable**\n```", "```\n#!/bin/bash\n```", "```\n#!/usr/bin/env bash\n```", "```\n#!/bin/bash -x\n```", "```\n#!/bin/bash -r\n```", "```\n$ **bash -r myscript.sh**\n```", "```\n#!/bin/bash\n\n# This is my first script. \n```", "```\n#!/bin/bash\n\n# This is my first script!\n# Bash scripting is fun... \n```", "```\n**#!/bin/bash**\n\n**echo \"Hello World!\"** \n```", "```\n$ **cd ~**\n$ **chmod u+x helloworld.sh**\n$ **./helloworld.sh**\n\nHello World! \n```", "```\n$ **bash helloworld.sh**\n```", "```\n$ **bash -n script.sh**\n```", "```\n$ **bash -x script.sh**\n```", "```\n#!/bin/bash\nset -x\n\n`--snip--`\n\nset +x \n```", "```\n#!/bin/bash\n\n# All this script does is create a directory, create a file\n# within the directory, and then list the contents of the directory.\n\nmkdir mydirectory\ntouch mydirectory/myfile\nls -l mydirectory \n```", "```\n`--snip--`\n-rw-r--r-- 1 user user 0 Feb 16 13:37 myfile \n```", "```\n$ **book=\"black hat bash\"**\n```", "```\n$ **echo \"This book's name is ${book}\"**\nThis book's name is black hat bash \n```", "```\n$ **echo \"This book's name is $book\"**\n```", "```\n$ **root_directory=$(ls -ld /)**\n$ **echo \"${root_directory}\"**\n\ndrwxr-xr-x 1 user user 0 Feb 13 20:12 / \n```", "```\nbook = \"this is an invalid variable assignment\"\n```", "```\n$ **book=\"Black Hat Bash\"**\n$ **unset book**\n$ **echo \"${book}\"** \n```", "```\n#!/bin/bash\n\nPUBLISHER=\"No Starch Press\"\n\nprint_name(){\n   local name\n   name=\"Black Hat Bash\"\n   echo \"${name} by ${PUBLISHER}\"\n}\n\nprint_name\n\necho \"Variable ${name} will not be printed because it is a local variable.\" \n```", "```\n$ **./local_scope_variable.sh**\n\nBlack Hat Bash by No Starch Press\n\nVariable  will not be printed here because it is a local variable \n```", "```\n$ **let result=\"4 * 5\"**\n$ **echo ${result}**\n\n20 \n```", "```\n$ **result=$((5 * 5))**\n$ **echo ${result}**\n\n25 \n```", "```\n$ **result=$(expr 5 + 505)**\n$ **echo ${result}**\n\n510 \n```", "```\n#!/bin/bash\n\n# Sets an array\nIP_ADDRESSES=(192.168.1.1 192.168.1.2 192.168.1.3)\n\n# Prints all elements in the array\necho \"${IP_ADDRESSES[*]}\"\n\n# Prints only the first element in the array\necho \"${IP_ADDRESSES[0]}\" \n```", "```\n$ **chmod u+x array.sh**\n$ **./array.sh**\n\n192.168.1.1 192.168.1.2 192.168.1.3\n192.168.1.1 \n```", "```\nIP_ADDRESSES=(192.168.1.1 192.168.1.2 192.168.1.3)\n\nunset IP_ADDRESSES[1] \n```", "```\nIP_ADDRESSES[0]=\"192.168.1.10\"\n```", "```\n$ **mkdir directory1 directory2 directory1**\nmkdir: cannot create directory 'directory1': File exists\n\n$ **ls -l**\ntotal 1\ndrwxr-xr-x 1 user user   0 Feb 17 09:45 directory1\ndrwxr-xr-x 1 user user   0 Feb 17 09:45 directory2 \n```", "```\n#!/bin/bash\n\n# This script will send the sleep command to the background.\necho \"Sleeping for 10 seconds...\"\n❶ sleep 10 &\n\n# Creates a file\necho \"Creating the file test123\"\ntouch test123\n\n# Deletes a file\necho \"Deleting the file test123\"\nrm test123 \n```", "```\ntouch test && touch test123\n```", "```\n(ls; ps)\n```", "```\nls; ps; whoami\n```", "```\nlzl || echo \"the lzl command failed\"\n```", "```\n$ **echo \"Hello World!\" > output.txt**\n```", "```\n$ **cat output.txt**\n\nHello World! \n```", "```\n$ **echo \"Goodbye!\" >> output.txt**\n$ **cat output.txt**\n\nHello World!\nGoodbye! \n```", "```\n$ **ls -l / &> stdout_and_stderr.txt**\n```", "```\n$ **ls -l / 1> stdout.txt 2> stderr.txt**\n```", "```\n$ **lzl 2> error.txt**\n$ **cat error.txt**\n\nbash: lzl: command not found \n```", "```\n$ **cat < output.txt**\n\nHello World!\nGoodbye! \n```", "```\n$ **cat << EOF**\n **Black Hat Bash**\n **by No Starch Press**\n**EOF**\n\nBlack Hat Bash\nby No Starch Press \n```", "```\n$ **ls -l / | grep \"bin\"**\n\nlrwxrwxrwx   1 root root          7 Mar 10 08:43 bin -> usr/bin\nlrwxrwxrwx   1 root root          8 Mar 10 08:43 sbin -> usr/sbin \n```", "```\n#!/bin/bash\n\n# This script will ping any address provided as an argument.\n\nSCRIPT_NAME=\"${0}\"\nTARGET=\"${1}\"\n\necho \"Running the script ${SCRIPT_NAME}...\"\necho \"Pinging the target: ${TARGET}...\"\nping \"${TARGET}\" \n```", "```\n$ **chmod u+x ping_with_arguments.sh**\n$ **./ping_with_arguments.sh nostarch.com**\n\nRunning the script ping_with_arguments.sh...\nPinging the target nostarch.com...\nPING nostarch.com (104.20.120.46) 56(84) bytes of data.\n\n64 bytes from 104.20.120.46 (104.20.120.46): icmp_seq=1 ttl=57 time=6.89 ms\n64 bytes from 104.20.120.46 (104.20.120.46): icmp_seq=2 ttl=57 time=4.16 ms\n`--snip--` \n```", "```\n#!/bin/bash\n\necho \"The arguments are: $@\"\necho \"The total number of arguments is: $#\" \n```", "```\n$ **chmod u+x show_args.sh**\n$ **./show_args.sh \"hello\" \"world\"**\n\nThe arguments are: hello world\nThe total number of arguments is: 2 \n```", "```\n$ **./script.sh \"1\" \"2\" \"3\"**\n1 2 3 \n```", "```\n$ **./script.sh \"1\" \"2\" \"3\"**\n1\n2\n3 \n```", "```\n#!/bin/bash\n# Change \"$@\" to \"$*\" to observe behavior.\nfor args in \"$@\"; do\n    echo \"${args}\"\ndone \n```", "```\n#!/bin/bash\n\n# Takes input from the user and assigns it to variables\necho \"What is your first name?\"\nread -r firstname\n\necho \"What is your last name?\"\nread -r lastname\n\necho \"Your first name is ${firstname} and your last name is ${lastname}\" \n```", "```\n$ **chmod u+x input_prompting.sh**\n$ **./input_prompting.sh**\n\nWhat is your first name?\nJohn\n\nWhat is your last name?\nDoe\n\nYour first name is John and your last name is Doe \n```", "```\n#!/bin/bash\n\n# Experimenting with exit codes\n\nls -l > /dev/null\necho \"The exit code of the ls command was: $?\"\n\nlzl 2> /dev/null\necho \"The exit code of the non-existing lzl command was: $?\" \n```", "```\n$ **./exit_codes.sh**\n\nThe exit code of the ls command was: 0\nThe exit code of the non-existing lzl command was: 127 \n```", "```\n#!/bin/bash\n\n# Sets the exit code of the script to be 223\n\necho \"Exiting with exit code: 223\"\nexit 223 \n```", "```\n$ **chmod u+x set_exit_code.sh**\n$ **./set_exit_code.sh**\nExiting with exit code: 223\n\n**echo $?**\n223 \n```", "```\n$ **ps -ef**\n$ **echo $?**\n\n0 \n```"]