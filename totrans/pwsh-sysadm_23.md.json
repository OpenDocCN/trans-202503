["```\nPS> New-PowerLabServer -ServerType Generic \n-DomainCredential (Import-Clixml -Path C:\\PowerLab\\DomainCredential.xml)\n-VMCredential (Import-Clixml -Path C:\\PowerLab\\VMCredential.xml) -Name WEBSRV\n```", "```\nfunction Install-PowerLabWebServer {\n    param\n    (\n\n        [Parameter(Mandatory)]\n        [string]$ComputerName,\n\n        [Parameter(Mandatory)]\n        [pscredential]$DomainCredential\n    )\n\n    $session = New-PSSession -VMName $ComputerName -Credential $DomainCredential\n\n    $session | Remove-PSSession\n}\n```", "```\nfunction Install-PowerLabWebServer {\n    param\n    (\n\n        [Parameter(Mandatory)]\n        [string]$ComputerName,\n\n        [Parameter(Mandatory)]\n        [pscredential]$DomainCredential\n    )\n\n    $session = New-PSSession -VMName $ComputerName -Credential $DomainCredential\n\n    $null = Invoke-Command -Session $session -ScriptBlock { Add-WindowsFeature -Name 'Web-Server' }\n\n    $session | Remove-PSSession\n}\n```", "```\nPS> Install-PowerLabWebServer –ComputerName $Name –DomainCredential $DomainCredential\n```", "```\nPS> $session = New-PSSession -VMName WEBSRV \n-Credential (Import-Clixml -Path C:\\PowerLab\\DomainCredential.xml)\nPS> Enter-PSSession -Session $session\n[WEBSRV]: PS> Import-Module WebAdministration\n```", "```\n[WEBSRV]: PS> Get-PSDrive -Name IIS | Format-Table -AutoSize\n\nName Used (GB) Free (GB) Provider          Root     CurrentLocation\n---- --------- --------- --------          ----     ---------------\nIIS                      WebAdministration \\\\WEBSRV\n```", "```\n[WEBSRV]: PS> Get-Website -Name 'Default Web Site'\n\nName             ID   State      Physical Path                  Bindings\n----             --   -----      -------------                  --------\nDefault Web Site 1    Started    %SystemDrive%\\inetpub\\wwwroot  http *:80:\n```", "```\n[WEBSRV]: PS> Get-Website -Name 'Default Web Site' | Remove-Website\n[WEBSRV]: PS> Get-Website\n[WEBSRV]: PS>\n```", "```\n[WEBSRV]: PS> New-Website -Name PowerShellForSysAdmins\n-PhysicalPath C:\\inetpub\\wwwroot\\\n\nName             ID   State      Physical Path                  Bindings\n----             --   -----      -------------                  --------\nPowerShellForSys 1052 Stopped    C:\\inetpub\\wwwroot\\            http *:80:\nAdmins           6591\n```", "```\n[WEBSRV]: PS> Set-WebBinding -Name 'PowerShellForSysAdmins'\n-BindingInformation \"*:80:\" -PropertyName Port -Value 81\n[WEBSRV]: PS> Get-Website -Name PowerShellForSysAdmins\n\nName             ID   State      Physical Path                  Bindings\n----             --   -----      -------------                  --------\nPowerShellForSys 1052 Started    C:\\inetpub\\wwwroot\\            http *:81:\nAdmins           6591\n                 05\n```", "```\n[WEBSRV]: PS> Get-IISAppPool\n\nName                 Status       CLR Ver  Pipeline Mode  Start Mode\n----                 ------       -------  -------------  ----------\nDefaultAppPool       Started      v4.0     Integrated     OnDemand\n\n[WEBSRV]: PS> Get-Command -Name *apppool*\n\nCommandType     Name                              Version    Source\n-----------     ----                              -------    ------\nCmdlet          Get-IISAppPool                    1.0.0.0    IISAdministration\nCmdlet          Get-WebAppPoolState               1.0.0.0    WebAdministration\nCmdlet          New-WebAppPool                    1.0.0.0    WebAdministration\nCmdlet          Remove-WebAppPool                 1.0.0.0    WebAdministration\nCmdlet          Restart-WebAppPool                1.0.0.0    WebAdministration\nCmdlet          Start-WebAppPool                  1.0.0.0    WebAdministration\nCmdlet          Stop-WebAppPool                   1.0.0.0    WebAdministration\n```", "```\n[WEBSRV]: PS> New-WebAppPool -Name 'PowerShellForSysAdmins'\n\nName                     State        Applications\n----                     -----        ------------\nPowerShellForSysAdmins   Started\n```", "```\n❶ [WEBSRV]: PS> Set-ItemProperty -Path 'IIS:\\Sites\\PowerShellForSysAdmins'\n   -Name 'ApplicationPool' -Value 'PowerShellForSysAdmins'\n❷ [WEBSRV]: PS> Get-Website -Name PowerShellForSysAdmins | Stop-WebSite\n❸ [WEBSRV]: PS> Get-Website -Name PowerShellForSysAdmins | Start-WebSite\n   [WEBSRV]: PS> Get-Website -Name PowerShellForSysAdmins | \n      Select-Object -Property applicationPool\n   applicationPool\n   ---------------\n   PowerShellForSysAdmins\n```", "```\nfunction New-IISCertificate {\n    param(\n\n            [Parameter(Mandatory)]\n            [string]$WebServerName,\n\n            [Parameter(Mandatory)]\n            [string]$PrivateKeyPassword,\n\n            [Parameter()]\n            [string]$CertificateSubject = 'PowerShellForSysAdmins',\n\n            [Parameter()]\n            [string]$PublicKeyLocalPath = 'C:\\PublicKey.cer',\n\n            [Parameter()]\n            [string]$PrivateKeyLocalPath = 'C:\\PrivateKey.pfx',\n\n            [Parameter()]\n            [string]$CertificateStore = 'Cert:\\LocalMachine\\My'\n    )\n    ## The code covered in the following text will go here\n\n}\n```", "```\n$null = New-SelfSignedCertificate -Subject $CertificateSubject\n```", "```\n$tempLocalCert = Get-ChildItem -Path $CertificateStore | \n    Where-Object {$_.Subject -match $CertificateSubject } \n$null = $tempLocalCert | Export-Certificate -FilePath $PublicKeyLocalPath\n```", "```\n$certPrint = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2\n$certPrint.Import($PublicKeyLocalPath)\n$certThumbprint = $certprint.Thumbprint\n```", "```\n$privKeyPw = ConvertTo-SecureString -String $PrivateKeyPassword -AsPlainText -Force\n$null = $tempLocalCert | Export-PfxCertificate -FilePath $PrivateKeyLocalPath -Password $privKeyPw\n```", "```\n$session = New-PSSession –VMName $WebServerName \n–Credential (Import-CliXml –Path C:\\PowerLab\\DomainCredential.xml)\n\nInvoke-Command –Session $session –ScriptBlock {Import-Module –Name\nWebAdministration}\n\nif (Invoke-Command –Session $session –ScriptBlock { $using:certThumbprint –in\n(Get-ChildItem –Path Cert:\\LocalMachine\\My).Thumbprint}) {\n      Write-Warning –Message 'The Certificate has already been imported.'\n} else {\n      # Code for importing the certificate\n}\n```", "```\nCopy-Item -Path $PrivateKeyLocalPath -Destination 'C:\\' -ToSession $session\n\nInvoke-Command -Session $session -ScriptBlock { Import-PfxCertificate \n-FilePath $using:PrivateKeyLocalPath -CertStoreLocation\n$using:CertificateStore -Password $using:privKeyPw }\n\nInvoke-Command -Session $session -ScriptBlock { Set-ItemProperty \"IIS:\\Sites\n\\PowerShellForSysAdmins\" -Name bindings\n-Value @{protocol='https';bindingInformation='*:443:*'} }\n\nInvoke-Command -Session $session -ScriptBlock {\n    $cert = Get-ChildItem -Path $CertificateStore | \n        Where-Object { $_.Subject -eq \"CN=$CertificateSubject\" }\n    $cert | New-Item 'IIS:\\SSLBindings\\0.0.0.0!443' \n}\n```", "```\n$session | Remove-PSSession\n```"]