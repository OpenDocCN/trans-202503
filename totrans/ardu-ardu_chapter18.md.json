["```\n// Project #51 - Transmitter\n\n❶ #include <SoftwareSerial.h>\nSoftwareSerial RS485(4, 3);\n\n❷ #define TXRX 2 // Using D2 for RS485 DE/RE\n\nvoid setup()\n{\n    RS485.begin(9600);\n    pinMode(TXRX, OUTPUT);\n    digitalWrite(TXRX, HIGH); // RS485 transmit\n}\n\nvoid loop()\n{\n    RS485.print(\"A0 measures: \");\n    RS485.println(analogRead(0));\n} \n```", "```\n// Project #51 - Receiver\n\n#include <SoftwareSerial.h>\nSoftwareSerial RS485(4, 3);\n\n#define TXRX 2 // Using D2 for RS485 DE/RE\n\nvoid setup()\n{\n    Serial.begin(9600);\n    pinMode(TXRX, OUTPUT);\n  ❶ digitalWrite(TXRX, LOW); // RS485 receive\n}\n\nvoid loop()\n{\n    if (RS485.available())\n    {\n      ❷ Serial.write(RS485.read());\n    }\n} \n```", "```\n// Project #52 - Transmitter\n\n❶ #include <Adafruit_BMP085.h>\nAdafruit_BMP085 bmp;\n\n❷ #include <SoftwareSerial.h>\nSoftwareSerial RS485(4, 3);\n\n❸ #define TXRX 2 // Using D2 for RS485 DE/RE\n\nvoid setup()\n{\n    RS485.begin(9600);\n    pinMode(TXRX, OUTPUT);\n    digitalWrite(TXRX, HIGH); // RS485 transmit\n    bmp.begin();\n}\n\nvoid loop()\n{\n    RS485.print(bmp.readTemperature());\n    delay(500);\n} \n```", "```\n// Project #52 - Receiver\n\n❶ #include <Wire.h>\n#include <LiquidCrystal_PCF8574.h>\nLiquidCrystal_PCF8574 lcd(0x27);\n\n#include <SoftwareSerial.h>\nSoftwareSerial RS485(4, 3);\n\n#define TXRX 2 // Using D2 for RS485 DE/RE\n\nfloat temperature = 0;\n\nvoid setup()\n{\n    Wire.begin();\n    Wire.beginTransmission(0x27);\n  ❷ lcd.begin(16, 2);\n  ❸ lcd.setBacklight(255);\n  ❹ lcd.clear();\n    RS485.begin(9600);\n    pinMode(TXRX, OUTPUT);\n    digitalWrite(TXRX, LOW); // RS485 receive\n}\n\nvoid loop()\n{\n    byte incoming = RS485.available();\n  ❺ if (incoming != 0)\n    {\n        temperature = RS485.parseFloat();\n      ❻ lcd.home();\n        lcd.clear();\n        lcd.setCursor(0, 0);\n        lcd.print(\"Temperature:\");\n        lcd.setCursor(0, 1);\n        lcd.print(temperature);\n        lcd.print(\" Celsius\");\n    }\n} \n```", "```\n// Project #53 - Primary\n\n#include <SoftwareSerial.h>\nSoftwareSerial RS485(4, 3);\n\n#define TXRX 2 // Using D2 for RS485 DE/RE\n\nvoid setup()\n{\n    RS485.begin(9600);\n    pinMode(TXRX, OUTPUT);\n    digitalWrite(TXRX, HIGH); // RS485 transmit\n}\n\nvoid loop()\n{\n    RS485.print(\"0\");\n    delay(1000);\n    RS485.print(\"1\");\n    delay(1000);\n    RS485.print(\"2\");\n    delay(1000);\n    RS485.print(\"3\");\n    delay(1000);\n    RS485.print(\"8\");\n    delay(5000);\n} \n```", "```\n// Project #53 - Secondary\n\n#include <SoftwareSerial.h>\nSoftwareSerial RS485(4, 3);\n\n#define TXRX 2 // Using D2 for RS485 DE/RE\n\nvoid blinkLED(int i)\n{\n    for (int j = 0; j < i; j++)\n    {\n        digitalWrite(13, HIGH);\n        delay(100);\n        digitalWrite(13, LOW);\n        delay(100);\n    }\n}\n\nvoid setup()\n{\n    RS485.begin(9600);\n    pinMode(TXRX, OUTPUT);\n    digitalWrite(TXRX, LOW); // RS485 receive\n    pinMode(13, OUTPUT);\n}\n\nvoid loop()\n{\n  ❶ if (RS485.available() > 0)\n    {\n        char receivedChar = RS485.read();\n      ❷ switch (receivedChar)\n        {\n            case '0': blinkLED(5); break;\n            case '1': blinkLED(10); break;\n            case '2': blinkLED(15); break;\n            case '3': blinkLED(20); break;\n          ❸ default: blinkLED(2); break;\n        }\n    }\n} \n```", "```\n// Project #54 - Primary\n\n#include <SoftwareSerial.h>\nSoftwareSerial RS485(4, 3);\n\n#define TXRX 2 // Using D2 for RS485 DE/RE\n\nvoid setup()\n{\n    RS485.begin(9600);\n    pinMode(TXRX, OUTPUT);\n    digitalWrite(TXRX, HIGH); // RS485 transmit\n}\n\nvoid loop()\n{\n  ❶ RS485.println(105); // Command for secondary 1\n    delay(5000);\n  ❷ RS485.println(205); // Command for secondary 2\n    delay(5000);\n} \n```", "```\n// Project #54 - Secondary device 1\n\n#include <SoftwareSerial.h>\nSoftwareSerial RS485(4, 3);\n\n#define TXRX 2 // Using D2 for RS485 DE/RE\n\nvoid blinkLED(int i)\n{\n    for (int j = 0; j < i; j++)\n    {\n        digitalWrite(13, HIGH);\n        delay(250);\n        digitalWrite(13, LOW);\n        delay(250);\n    }\n}\n\nvoid setup()\n{\n    RS485.begin(9600);\n    pinMode(TXRX, OUTPUT);\n    digitalWrite(TXRX, LOW); // RS485 receive\n    pinMode(13, OUTPUT);\n}\n\nvoid loop()\n{\n    while (RS485.available() == 0) {}\n  ❶ int commandType = RS485.parseInt();\n  ❷ if (commandType >= 100 && commandType < 200)\n    {\n        switch (commandType)\n        {\n          ❸ case 105: blinkLED(5); break;\n            case 110: blinkLED(10); break;\n            case 115: blinkLED(15); break;\n            case 120: blinkLED(20); break;\n          ❹ default: blinkLED(2); break;\n        }\n    }\n} \n```", "```\nvoid loop()\n{\n    while (RS485.available() == 0) {}\n    int commandType = RS485.parseInt();\n  ❶ if (commandType >= 200 && commandType < 300)\n    {\n        switch (commandType)\n        {\n          ❷ case 205: blinkLED(5); break;\n            case 210: blinkLED(10); break;\n            case 215: blinkLED(15); break;\n            case 220: blinkLED(20); break;\n          ❸ default: blinkLED(2); break;\n        }\n    }\n} \n```"]