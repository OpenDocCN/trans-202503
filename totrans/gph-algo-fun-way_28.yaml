- en: <hgroup>
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Dogma_OT_Bold_B_11">INDEX</samp>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: </hgroup>
  prefs: []
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">A</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: absorbing nodes, [217](chapter13.xhtml#pg_217)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: absorption probability, [217](chapter13.xhtml#pg_217)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: absorption time, [217](chapter13.xhtml#pg_217)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: acyclic graphs, [136](chapter9.xhtml#pg_136)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: adjacency list representation, [7–15](chapter1.xhtml#pg_7)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: adjacency matrix representation, [15–17](chapter1.xhtml#pg_15)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: admissible heuristics, [113](chapter8.xhtml#pg_113). *See also* [heuristics](#ind9)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Algorithmic Thinking* (Zingaro), [369](appendix_C.xhtml#pg_369)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Algorithms* (Sedgewick and Wayne), [200](chapter12.xhtml#pg_200)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: all-pairs shortest-path problem, [102–103](chapter7.xhtml#pg_102). *See also*
    [shortest-path problem](#ind15)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: anti-parallel edges, [231](chapter14.xhtml#pg_231), [253–254](chapter14.xhtml#pg_253)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: arcs. *See* [edges](#ind6)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: articulation point finding algorithm, [186–191](chapter11.xhtml#pg_186)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">articulation_point_dfs()</samp>
    function, [188](chapter11.xhtml#pg_188)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">articulation_point_root()</samp>
    function, [188](chapter11.xhtml#pg_188)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: articulation points, [177](chapter11.xhtml#pg_177)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Artificial Intelligence* (Russell and Norvig), [323](chapter17.xhtml#pg_323)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A* search, [119–132](chapter8.xhtml#pg_119)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: admissible heuristics, [124](chapter8.xhtml#pg_124)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">astar_dynamic()</samp> function,
    [128](chapter8.xhtml#pg_128)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">astar_search()</samp> function,
    [120](chapter8.xhtml#pg_120)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: exploring graphs, [126–132](chapter8.xhtml#pg_126)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: puzzles, [124–126](chapter8.xhtml#pg_124)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: augmenting paths, [238–243](chapter14.xhtml#pg_238). *See also* [maximum-flow
    problem](#ind10)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: average clustering coefficient, [25](chapter2.xhtml#pg_25)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">B</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: backward residual, [235](chapter14.xhtml#pg_235), [239](chapter14.xhtml#pg_239),
    [241](chapter14.xhtml#pg_241)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bellman-Ford algorithm, [97–99](chapter7.xhtml#pg_97)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">BellmanFord()</samp> function,
    [99](chapter7.xhtml#pg_99)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cost, [99](chapter7.xhtml#pg_99)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: best-first search, [111](chapter8.xhtml#pg_111), [114](chapter8.xhtml#pg_114).
    *See also* [heuristic-guided search](#ind8)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bipartite graphs, [255](chapter15.xhtml#pg_255), [257–273](chapter15.xhtml#pg_257)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">bipartite_labeling()</samp> function,
    [259](chapter15.xhtml#pg_259)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: labeling, [258–263](chapter15.xhtml#pg_258)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bipartite matching problem, [263–273](chapter15.xhtml#pg_263)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">bipartite_matching_exh()</samp>
    function, [266](chapter15.xhtml#pg_266)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">bipartite_matching_max_flow()</samp>
    function, [270](chapter15.xhtml#pg_270)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: exhaustive algorithms, [264–269](chapter15.xhtml#pg_264)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">matching_recursive()</samp> function,
    [266](chapter15.xhtml#pg_266)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: using maximum-flow algorithms, [269–273](chapter15.xhtml#pg_269)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: breadth-first search, [63–74](chapter5.xhtml#pg_63)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">breadth_first_search()</samp>
    function, [65](chapter5.xhtml#pg_65)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: maximum-flow problem, [246–251](chapter14.xhtml#pg_246)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: shortest paths, [68–70](chapter5.xhtml#pg_68)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bridge-finding algorithm, [180–186](chapter11.xhtml#pg_180)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">bridge_finding_dfs()</samp> function,
    [184](chapter11.xhtml#pg_184)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cost, [184](chapter11.xhtml#pg_184)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">find_bridges()</samp> function,
    [184](chapter11.xhtml#pg_184)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bridges, [176](chapter11.xhtml#pg_176)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">C</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: capacity, [230–232](chapter14.xhtml#pg_230). *See also* [maximum-flow problem](#ind10)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">CapacityEdge</samp> class, [233–235](chapter14.xhtml#pg_233)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">adjusted_used()</samp> method,
    [234](chapter14.xhtml#pg_234)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">capacity_left()</samp> method,
    [234](chapter14.xhtml#pg_234)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: constructor, [234](chapter14.xhtml#pg_234)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">flow_used()</samp> method, [234](chapter14.xhtml#pg_234)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chaitin, George, [293](chapter16.xhtml#pg_293)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cliques, [301–308](chapter17.xhtml#pg_301)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: backtracking search, [305–308](chapter17.xhtml#pg_305)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">clique_expansion_options()</samp>
    function, [303](chapter17.xhtml#pg_303)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">clique_greedy()</samp> function,
    [304](chapter17.xhtml#pg_304)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: greedy search, [303–305](chapter17.xhtml#pg_303)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">is_clique()</samp> function, [302](chapter17.xhtml#pg_302)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: maximum clique, [302](chapter17.xhtml#pg_302)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">maximum_clique_backtracking()</samp>
    function, [306](chapter17.xhtml#pg_306)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">maximum_clique_recursive()</samp>
    function, [305](chapter17.xhtml#pg_305)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: closed-neighborhood subgraphs, [27](chapter2.xhtml#pg_27)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: clustering coefficient, [24–26](chapter2.xhtml#pg_24)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">ave_clustering_coefficient()</samp>
    function, [25](chapter2.xhtml#pg_25)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">clustering_coefficient()</samp>
    function, [24](chapter2.xhtml#pg_24)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: comma-separated values (CSV), [347](appendix_A.xhtml#pg_347)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: connected components, [42](chapter3.xhtml#pg_42), [176](chapter11.xhtml#pg_176),
    [193](chapter12.xhtml#pg_193). *See also* [strongly connected components](#ind16)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">dfs_recursive_cc()</samp> function,
    [55](chapter4.xhtml#pg_55)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: and Eulerian cycles, [336](chapter18.xhtml#pg_336)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: constructing graphs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">build_graph_from_points()</samp>
    function, [354](appendix_A.xhtml#pg_354)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: from edge list, [346–347](appendix_A.xhtml#pg_346)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: loading co-occurrence graphs, [351–353](appendix_A.xhtml#pg_351)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: loading edges from file, [347–349](appendix_A.xhtml#pg_347)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">make_graph_from_dependencies()</samp>
    function, [355](appendix_A.xhtml#pg_355)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">make_graph_from_edges()</samp>
    function, [346](appendix_A.xhtml#pg_346)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">make_graph_from_multi_csv()</samp>
    function, [353](appendix_A.xhtml#pg_353)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">make_graph_from_weighted_csv()</samp>
    function, [348](appendix_A.xhtml#pg_348)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">make_graph_from_weighted_csv2()</samp>
    function, [351](appendix_A.xhtml#pg_351)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: from preconditions, [355–356](appendix_A.xhtml#pg_355)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: from spatial data, [353–355](appendix_A.xhtml#pg_353)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: co-occurrence graphs, [351–353](appendix_A.xhtml#pg_351)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cut vertex, [177](chapter11.xhtml#pg_177)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cycles, [136](chapter9.xhtml#pg_136)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: detecting, [147–148](chapter9.xhtml#pg_147)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: negative, [96](chapter7.xhtml#pg_96)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">D</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: DAG (directed acyclic graph), [136](chapter9.xhtml#pg_136)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Data Structures and Algorithms* (Aho, Hopcroft, and Ullman), [199](chapter12.xhtml#pg_199),
    [200](chapter12.xhtml#pg_200)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Data Structures the Fun Way* (Kubica), [xxi](introduction.xhtml#pg_xxi), [358](appendix_B.xhtml#pg_358)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: degree, [22–24](chapter2.xhtml#pg_22), [335](chapter18.xhtml#pg_335)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: computing, [336](chapter18.xhtml#pg_336)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: in-degree, [23](chapter2.xhtml#pg_23)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: out-degree, [23](chapter2.xhtml#pg_23)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: and self-loops, [23](chapter2.xhtml#pg_23), [336](chapter18.xhtml#pg_336)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: depth-first search, [45–61](chapter4.xhtml#pg_45)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">depth_first_search_basic_all()</samp>
    function, [49](chapter4.xhtml#pg_49)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">depth_first_search_path()</samp>
    function, [50](chapter4.xhtml#pg_50)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">depth_first_search_stack()</samp>
    function, [52](chapter4.xhtml#pg_52)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">dfs_recursive_basic()</samp> function,
    [48](chapter4.xhtml#pg_48)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">dfs_recursive_cc()</samp> function,
    [55](chapter4.xhtml#pg_55)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">dfs_recursive_path()</samp> function,
    [49](chapter4.xhtml#pg_49)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: recursive algorithm, [48–52](chapter4.xhtml#pg_48)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: stack-based algorithm, [52–55](chapter4.xhtml#pg_52)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: uses
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: checking reachability, [48](chapter4.xhtml#pg_48)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: finding articulation points, [186–191](chapter11.xhtml#pg_186)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: finding bridges, [180–186](chapter11.xhtml#pg_180)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: finding connected components, [55–57](chapter4.xhtml#pg_55)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: finding Hamiltonian paths, [328–330](chapter18.xhtml#pg_328)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kosaraju-Sharir’s algorithm, [199–204](chapter12.xhtml#pg_199)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: maximum-flow problem, [241–243](chapter14.xhtml#pg_241)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: solving the traveling salesperson problem, [331–334](chapter18.xhtml#pg_331)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: topological sort, [143–147](chapter9.xhtml#pg_143)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: depth-first search forest, [58](chapter4.xhtml#pg_58)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: depth-first search tree, [57–59](chapter4.xhtml#pg_57). *See also* [<samp class="SANS_TheSansMonoCd_W5Regular_11">DFSTreeStats</samp>
    class](#ind5)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: back edge, [180](chapter11.xhtml#pg_180)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: post-order index, [199](chapter12.xhtml#pg_199)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: preorder index, [180](chapter11.xhtml#pg_180)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: untraversed edges, [180–181](chapter11.xhtml#pg_180)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: uses
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: finding articulation points, [186](chapter11.xhtml#pg_186)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: finding bridges, [180](chapter11.xhtml#pg_180)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">DFSTreeStats</samp> class, [182](chapter11.xhtml#pg_182)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: constructor, [183](chapter11.xhtml#pg_183)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: uses
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: finding articulation points, [188](chapter11.xhtml#pg_188)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: finding bridges, [183](chapter11.xhtml#pg_183)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: diameter, [108–110](chapter7.xhtml#pg_108)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">GraphDiameter()</samp> function,
    [109](chapter7.xhtml#pg_109)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dijkstra, Edsger W., [91](chapter7.xhtml#pg_91)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dijkstra’s algorithm, [91–96](chapter7.xhtml#pg_91)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cost, [93](chapter7.xhtml#pg_93)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">Dijkstras()</samp> function, [92](chapter7.xhtml#pg_92)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: disconnected graphs, [95–96](chapter7.xhtml#pg_95)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nonnegative edges, [91](chapter7.xhtml#pg_91)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dinic, E. A., [246](chapter14.xhtml#pg_246)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dinitz, Yefim, [246](chapter14.xhtml#pg_246)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dinitz algorithm, [246–251](chapter14.xhtml#pg_246)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: directed acyclic graph (DAG), [136](chapter9.xhtml#pg_136)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: directed edges, [5–7](chapter1.xhtml#pg_5). *See also* [edges](#ind6)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: directed graphs, [6](chapter1.xhtml#pg_6)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: disjoint sets, [161](chapter10.xhtml#pg_161), [370](appendix_C.xhtml#pg_370)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: distance between nodes, [90](chapter7.xhtml#pg_90)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">E</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '|*E*|, [4](chapter1.xhtml#pg_4)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">Edge</samp> class, [9–10](chapter1.xhtml#pg_9)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: constructor, [9](chapter1.xhtml#pg_9)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: representing undirected edges, [10](chapter1.xhtml#pg_10)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: representing unweighted edges, [9](chapter1.xhtml#pg_9)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: edges, [4](chapter1.xhtml#pg_4)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: destination, [6](chapter1.xhtml#pg_6)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: directed, [5–7](chapter1.xhtml#pg_5)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: graphical representation, [4–6](chapter1.xhtml#pg_4)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: to indicate order, [136](chapter9.xhtml#pg_136)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: negative weight, [96–97](chapter7.xhtml#pg_96)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: origin, [6](chapter1.xhtml#pg_6)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: relaxation, [97](chapter7.xhtml#pg_97)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: undirected, [6](chapter1.xhtml#pg_6)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: weighted, [5](chapter1.xhtml#pg_5)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Edmonds, Jack, [246](chapter14.xhtml#pg_246)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Edmonds-Karp algorithm, [246–251](chapter14.xhtml#pg_246). *See also* [maximum-flow
    problem](#ind10)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: augmenting path, [238](chapter14.xhtml#pg_238)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: in bipartite graph matching, [270](chapter15.xhtml#pg_270)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">edmonds_karp()</samp> function,
    [248](chapter14.xhtml#pg_248)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">find_augmenting_path_bfs()</samp>
    function, [246](chapter14.xhtml#pg_246)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Euclidean distance, [112–113](chapter8.xhtml#pg_112), [354](appendix_A.xhtml#pg_354)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">euclidean_dist()</samp> function,
    [112](chapter8.xhtml#pg_112)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Euler, Leonhard, [334](chapter18.xhtml#pg_334), [335](chapter18.xhtml#pg_335)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eulerian cycles, [334–341](chapter18.xhtml#pg_334)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: finding with Hierholzer’s algorithm, [337](chapter18.xhtml#pg_337)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">has_eulerian_cycle()</samp> function,
    [336](chapter18.xhtml#pg_336)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">is_eulerian_cycle()</samp> function,
    [336](chapter18.xhtml#pg_336)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eulerian paths, [334](chapter18.xhtml#pg_334)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eulerian trails, [335](chapter18.xhtml#pg_335)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: expected absorption time, [218](chapter13.xhtml#pg_218)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: expected hitting time, [218](chapter13.xhtml#pg_218)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">F</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: finishing time, [199](chapter12.xhtml#pg_199)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: flow, [230–231](chapter14.xhtml#pg_230). *See also* [maximum-flow problem](#ind10)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Floyd-Warshall algorithm, [103–108](chapter7.xhtml#pg_103)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cost, [105](chapter7.xhtml#pg_105)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dynamic programming, [104](chapter7.xhtml#pg_104)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">FloydWarshall()</samp> function,
    [105](chapter7.xhtml#pg_105)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: intermediate paths, [103](chapter7.xhtml#pg_103)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ford, L.R., Jr., [237](chapter14.xhtml#pg_237)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ford-Fulkerson algorithm, [237–246](chapter14.xhtml#pg_237). *See also* [maximum-flow
    problem](#ind10)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">augmenting_path_dfs_recursive()</samp>
    function, [241](chapter14.xhtml#pg_241)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">find_augmenting_path_dfs()</samp>
    function, [241](chapter14.xhtml#pg_241)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">ford-fulkerson()</samp> function,
    [244](chapter14.xhtml#pg_244)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: forward residual, [235](chapter14.xhtml#pg_235), [239](chapter14.xhtml#pg_239),
    [241](chapter14.xhtml#pg_241)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fulkerson, D. R., [237](chapter14.xhtml#pg_237)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">G</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: games of chance, [214–215](chapter13.xhtml#pg_214), [219–221](chapter13.xhtml#pg_219)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">Graph</samp> class, [12–15](chapter1.xhtml#pg_12).
    *See also* [constructing graphs](#ind3)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: constructor, [12](chapter1.xhtml#pg_12), [350](appendix_A.xhtml#pg_350)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: copying, [15](chapter1.xhtml#pg_15)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">get_edge()</samp> method, [12](chapter1.xhtml#pg_12)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">get_index_by_name()</samp> method,
    [350](appendix_A.xhtml#pg_350)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">get_in_neighbors()</samp> method,
    [21](chapter2.xhtml#pg_21)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">insert_edge()</samp> method, [13](chapter1.xhtml#pg_13)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: inserting nodes by name, [350–351](appendix_A.xhtml#pg_350)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">insert_node()</samp> method, [14](chapter1.xhtml#pg_14)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">is_edge()</samp> method, [13](chapter1.xhtml#pg_13)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">make_copy()</samp> method, [15](chapter1.xhtml#pg_15)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">make_edge_list()</samp> function,
    [13](chapter1.xhtml#pg_13), [100](chapter7.xhtml#pg_100)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">make_undirected_neighborhood _subgraph()</samp>
    method, [27](chapter2.xhtml#pg_27)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: numeric node index, [9](chapter1.xhtml#pg_9), [12](chapter1.xhtml#pg_12)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">remove_edge()</samp> method, [13](chapter1.xhtml#pg_13)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: representing undirected graphs, [12](chapter1.xhtml#pg_12), [14](chapter1.xhtml#pg_14)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">save_graph_to_csv()</samp> function,
    [350](appendix_A.xhtml#pg_350)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: saving to file, [349–350](appendix_A.xhtml#pg_349)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: graph coloring, [277–297](chapter16.xhtml#pg_277)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: backtracking search, [284–290](chapter16.xhtml#pg_284)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">graph_color_dfs()</samp> function,
    [285](chapter16.xhtml#pg_285)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">graph_color_dfs_pruning()</samp>
    function, [287](chapter16.xhtml#pg_287)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pruning, [286–290](chapter16.xhtml#pg_286)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: exhaustive search, [283–284](chapter16.xhtml#pg_283)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cost, [283](chapter16.xhtml#pg_283)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">graph_color_brute_force()</samp>
    function, [283](chapter16.xhtml#pg_283)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">first_unused_color()</samp> function,
    [290](chapter16.xhtml#pg_290)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: greedy search, [290–293](chapter16.xhtml#pg_290)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">graph_color_greedy()</samp> function,
    [291](chapter16.xhtml#pg_291)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">is_graph_coloring_valid()</samp>
    function, [278](chapter16.xhtml#pg_278)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: minimum graph-coloring problem, [278](chapter16.xhtml#pg_278)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: node removal, [293–297](chapter16.xhtml#pg_293)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">graph_color_removal()</samp> function,
    [293](chapter16.xhtml#pg_293)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: number of states, [282](chapter16.xhtml#pg_282)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: problem definition, [278](chapter16.xhtml#pg_278)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">GraphMatrix</samp> class, [16–17](chapter1.xhtml#pg_16),
    [212](chapter13.xhtml#pg_212)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: constructor, [16](chapter1.xhtml#pg_16)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">get_edge()</samp> method, [16](chapter1.xhtml#pg_16)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: in random walks, [212](chapter13.xhtml#pg_212)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: representing undirected graphs, [16](chapter1.xhtml#pg_16)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">set_edge()</samp> method, [17](chapter1.xhtml#pg_17)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">simulate_random_step()</samp>
    method, [212](chapter13.xhtml#pg_212)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: graphs. *See also* [constructing graphs](#ind3); [edges](#ind6); [nodes](#ind11)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: adjacency list representation, [7–15](chapter1.xhtml#pg_7)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: adjacency matrix representation, [15–17](chapter1.xhtml#pg_15)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bipartite, [255](chapter15.xhtml#pg_255), [257–273](chapter15.xhtml#pg_257)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: diameter, [108–110](chapter7.xhtml#pg_108)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: directed, [6](chapter1.xhtml#pg_6)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: transpose, [200–201](chapter12.xhtml#pg_200)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: undirected, [6](chapter1.xhtml#pg_6)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: unweighted, [5](chapter1.xhtml#pg_5)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: weighted, [5](chapter1.xhtml#pg_5)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: graph search, [45](chapter4.xhtml#pg_45)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: greedy best-first search, [114–118](chapter8.xhtml#pg_114)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">greedy_search()</samp> function,
    [115](chapter8.xhtml#pg_115)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: grid-based graphs, [70–72](chapter5.xhtml#pg_70)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: height, [70](chapter5.xhtml#pg_70)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: indexing, [71](chapter5.xhtml#pg_71)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">make_grid_graph()</samp> function,
    [71](chapter5.xhtml#pg_71)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">make_grid_with_obstacles()</samp>
    function, [72](chapter5.xhtml#pg_72)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: and mazes, [72](chapter5.xhtml#pg_72)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: obstacles, [71–72](chapter5.xhtml#pg_71)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: width, [70](chapter5.xhtml#pg_70)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">H</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Hamilton, William, [326](chapter18.xhtml#pg_326)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hamiltonian cycles, [326](chapter18.xhtml#pg_326)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hamiltonian paths, [326–330](chapter18.xhtml#pg_326)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: finding with depth-first search, [328–330](chapter18.xhtml#pg_328)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">hamiltonian_dfs()</samp> function,
    [329](chapter18.xhtml#pg_329)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">hamiltonian_dfs_rec()</samp> function,
    [328](chapter18.xhtml#pg_328)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">is_hamiltonian_path()</samp> function,
    [327](chapter18.xhtml#pg_327)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: heaps, [358–361](appendix_B.xhtml#pg_358)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: as an array, [59](chapter4.xhtml#pg_59)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dequeue, [366](appendix_B.xhtml#pg_366)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: enqueue, [365](appendix_B.xhtml#pg_365)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">HeapItem</samp> class, [358](appendix_B.xhtml#pg_358)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: max heap, [358](appendix_B.xhtml#pg_358)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: min heap, [358](appendix_B.xhtml#pg_358)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: swapping elements, [359–361](appendix_B.xhtml#pg_359)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: heuristic-guided search, [111–132](chapter8.xhtml#pg_111). *See also* [A* search](#ind1);
    [greedy best-first search](#ind7)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: heuristics, [112–114](chapter8.xhtml#pg_112)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: admissible, [113](chapter8.xhtml#pg_113)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Euclidean distance, [112](chapter8.xhtml#pg_112)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: hidden Markov model, [210](chapter13.xhtml#pg_210)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: hierarchical clustering, [169](chapter10.xhtml#pg_169)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hierholzer, Carl, [337](chapter18.xhtml#pg_337)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hierholzer’s algorithm, [337](chapter18.xhtml#pg_337), [341](chapter18.xhtml#pg_341)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">hierholzers()</samp> function,
    [338](chapter18.xhtml#pg_338)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: subloop, [337](chapter18.xhtml#pg_337)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: hitting probability, [217](chapter13.xhtml#pg_217)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: hitting time, [217](chapter13.xhtml#pg_217)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">I</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: in-degree, [23](chapter2.xhtml#pg_23)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: independent set, [308–315](chapter17.xhtml#pg_308), [321–322](chapter17.xhtml#pg_321)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">build_independent_set_random()</samp>
    function, [322](chapter17.xhtml#pg_322)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: heuristics, [310](chapter17.xhtml#pg_310)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">independent_set_expansion _options()</samp>
    function, [309](chapter17.xhtml#pg_309)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">independent_set_greedy()</samp>
    function, [311](chapter17.xhtml#pg_311)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">independent_set_lowest _expansion()</samp>
    function, [310](chapter17.xhtml#pg_310)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">independent_set_random()</samp>
    function, [321](chapter17.xhtml#pg_321)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">is_independent_set()</samp> function,
    [308](chapter17.xhtml#pg_308)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: maximum, [309](chapter17.xhtml#pg_309)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">maximum_independent_set _backtracking()</samp>
    function, [313](chapter17.xhtml#pg_313)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">maximum_independent_set_rec()</samp>
    function, [312](chapter17.xhtml#pg_312)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: using backtracking search, [311–312](chapter17.xhtml#pg_311)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: using greedy search, [309–311](chapter17.xhtml#pg_309)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: in-neighbors, [21](chapter2.xhtml#pg_21)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Introduction to Algorithms* (Cormen, Leiserson, Rivest, and Stein), [323](chapter17.xhtml#pg_323)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: iterative deepening, [59–61](chapter4.xhtml#pg_59)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">J</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Jarník, Vojteˇch, [156](chapter10.xhtml#pg_156)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">K</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Kahn, Arthur B., [139](chapter9.xhtml#pg_139)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kahn’s algorithm, [139](chapter9.xhtml#pg_139), [143](chapter9.xhtml#pg_143)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">check_cycle_kahns()</samp> function,
    [148](chapter9.xhtml#pg_148)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cost, [141](chapter9.xhtml#pg_141)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">Kahns()</samp> function, [140](chapter9.xhtml#pg_140)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Karp, Richard M., [246](chapter14.xhtml#pg_246)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kosaraju, S. Rao, [199](chapter12.xhtml#pg_199)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kosaraju-Sharir’s algorithm, [199–204](chapter12.xhtml#pg_199)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">add_reachable()</samp> function,
    [201](chapter12.xhtml#pg_201)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cost, [200](chapter12.xhtml#pg_200)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">kosaraju_sharir()</samp> function,
    [201](chapter12.xhtml#pg_201)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">make_transpose_graph()</samp>
    function, [200](chapter12.xhtml#pg_200)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: transpose graph, [200](chapter12.xhtml#pg_200)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kruskal, Joseph B., [161](chapter10.xhtml#pg_161)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kruskal’s algorithm, [161–164](chapter10.xhtml#pg_161)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cost, [161](chapter10.xhtml#pg_161)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">kruskals()</samp> function, [162](chapter10.xhtml#pg_162)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">L</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: links. *See* [edges](#ind6)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: local clustering coefficient, [24](chapter2.xhtml#pg_24)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lowest-cost path. *See* [shortest path](#ind14)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: lowest-cost path problem. *See* [shortest-path problem](#ind15)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">M</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Manhattan distance, [354](appendix_A.xhtml#pg_354)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Markov chain, [210](chapter13.xhtml#pg_210). *See also* [random walks](#ind13)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Markov model, [210](chapter13.xhtml#pg_210)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: matching, [255–257](chapter15.xhtml#pg_255), [263–273](chapter15.xhtml#pg_263).
    *See also* [bipartite matching problem](#ind2)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: maximal, [256](chapter15.xhtml#pg_256)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: maximum-cardinality, [256](chapter15.xhtml#pg_256)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: maximum-weight, [256](chapter15.xhtml#pg_256)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: perfect, [257](chapter15.xhtml#pg_257)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">Matching</samp> class, [264–265](chapter15.xhtml#pg_264)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">add_edge()</samp> method, [265](chapter15.xhtml#pg_265)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: constructor, [264](chapter15.xhtml#pg_264)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">remove_edge()</samp> method, [265](chapter15.xhtml#pg_265)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: matrix transpose, [200](chapter12.xhtml#pg_200)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: maximum-flow problem, [229–254](chapter14.xhtml#pg_229)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: anti-parallel edges, [231](chapter14.xhtml#pg_231), [253–254](chapter14.xhtml#pg_253)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: augmenting paths, [238–243](chapter14.xhtml#pg_238)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">augment_multisink_graph()</samp>
    function, [253](chapter14.xhtml#pg_253)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">augment_multisource_graph()</samp>
    function, [252](chapter14.xhtml#pg_252)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: for bipartite matching, [269–273](chapter15.xhtml#pg_269)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: capacity, [230–232](chapter14.xhtml#pg_230)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: flow, [230–231](chapter14.xhtml#pg_230)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: residual, [239–241](chapter14.xhtml#pg_239)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: backward, [235](chapter14.xhtml#pg_235), [239](chapter14.xhtml#pg_239), [241](chapter14.xhtml#pg_241)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: forward, [235](chapter14.xhtml#pg_235), [239](chapter14.xhtml#pg_239), [241](chapter14.xhtml#pg_241)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sink node, [230](chapter14.xhtml#pg_230)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: with multiple sinks, [252–253](chapter14.xhtml#pg_252)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: source node, [230](chapter14.xhtml#pg_230)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: with multiple sources, [251–252](chapter14.xhtml#pg_251)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: maximum likelihood estimation, [221](chapter13.xhtml#pg_221)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mazes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: generation, [165–169](chapter10.xhtml#pg_165)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: representation, [165](chapter10.xhtml#pg_165)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: as a graph, [46](chapter4.xhtml#pg_46)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: minimum spanning tree, [153–173](chapter10.xhtml#pg_153)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kruskal’s algorithm, [161–164](chapter10.xhtml#pg_161)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: maze generation, [165–169](chapter10.xhtml#pg_165)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: number of edges, [154](chapter10.xhtml#pg_154)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prim’s algorithm, [156–161](chapter10.xhtml#pg_156)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: single linkage clustering, [169–173](chapter10.xhtml#pg_169)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: modifiable priority queue, [357–368](appendix_B.xhtml#pg_357). *See also* [<samp
    class="SANS_TheSansMonoCd_W5Regular_11">PriorityQueue</samp> class](#ind12)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">N</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: negative cycles, [96](chapter7.xhtml#pg_96)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: negative edge weight. *See also* [edges](#ind6)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: neighborhood subgraphs, [26–30](chapter2.xhtml#pg_26)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">make_undirected_neighborhood _subgraph()</samp>
    method, [27](chapter2.xhtml#pg_27)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: neighbors, [19–22](chapter2.xhtml#pg_19)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: in directed graphs, [21–22](chapter2.xhtml#pg_21)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">get_in_neighbors()</samp> method,
    [21](chapter2.xhtml#pg_21)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">get_neighbors()</samp> method,
    [20](chapter2.xhtml#pg_20)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">get_out_neighbors()</samp> method,
    [21](chapter2.xhtml#pg_21)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: in-neighbor, [21](chapter2.xhtml#pg_21)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: out-neighbor, [21](chapter2.xhtml#pg_21)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: in undirected graphs, [20–21](chapter2.xhtml#pg_20)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">Node</samp> class, [10–11](chapter1.xhtml#pg_10)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">add_edge()</samp> method, [11](chapter1.xhtml#pg_11)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: constructor, [10](chapter1.xhtml#pg_10)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">get_edge_list()</samp> method,
    [11](chapter1.xhtml#pg_11)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">get_edge()</samp> method, [10](chapter1.xhtml#pg_10)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">get_neighbors()</samp> method,
    [20](chapter2.xhtml#pg_20)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">get_out_neighbors()</samp> method,
    [21](chapter2.xhtml#pg_21)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">get_sorted_edge_list()</samp>
    method, [11](chapter1.xhtml#pg_11)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">num_edges()</samp> method, [10](chapter1.xhtml#pg_10)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">remove_edge()</samp> method, [11](chapter1.xhtml#pg_11)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nodes, [4](chapter1.xhtml#pg_4). *See also* [degree](#ind4)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: graphical representation, [4](chapter1.xhtml#pg_4)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: index, [9](chapter1.xhtml#pg_9), [12](chapter1.xhtml#pg_12)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: neighbors, [19–22](chapter2.xhtml#pg_19)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NP-hard problem, [282](chapter16.xhtml#pg_282), [299](chapter17.xhtml#pg_299),
    [323](chapter17.xhtml#pg_323)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">O</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: open-neighborhood subgraphs, [27](chapter2.xhtml#pg_27)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: order index, [180](chapter11.xhtml#pg_180)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: out-degree, [23](chapter2.xhtml#pg_23)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: out-neighbors, [21](chapter2.xhtml#pg_21)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">P</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: path planning, [70–73](chapter5.xhtml#pg_70)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: paths, [31–42](chapter3.xhtml#pg_31), [325–341](chapter18.xhtml#pg_325)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">check_edge_path_valid()</samp>
    function, [35](chapter3.xhtml#pg_35)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">check_last_path_valid()</samp>
    function, [39](chapter3.xhtml#pg_39)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">check_node_path_valid()</samp>
    function, [33](chapter3.xhtml#pg_33)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">compute_path_cost_from_edges()</samp>
    function, [40](chapter3.xhtml#pg_40)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cost, [39–41](chapter3.xhtml#pg_39), [90](chapter7.xhtml#pg_90)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: loop, [91](chapter7.xhtml#pg_91)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: negative edge weight, [91](chapter7.xhtml#pg_91)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">PathCost()</samp> expression,
    [90](chapter7.xhtml#pg_90)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: destination, [32](chapter3.xhtml#pg_32)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: as a list of edges, [34–36](chapter3.xhtml#pg_34)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: as a list of nodes, [33](chapter3.xhtml#pg_33)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: as a list of previous nodes, [36–39](chapter3.xhtml#pg_36)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">make_node_path_from_last()</samp>
    function, [37](chapter3.xhtml#pg_37)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: origin, [32](chapter3.xhtml#pg_32)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: and reachability, [41–42](chapter3.xhtml#pg_41)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: with repeated nodes, [32](chapter3.xhtml#pg_32)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">PGState</samp> class, [81](chapter6.xhtml#pg_81)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">Point</samp> class, [170](chapter10.xhtml#pg_170),
    [354](appendix_A.xhtml#pg_354)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: post-order index, [199](chapter12.xhtml#pg_199)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: preorder index, [180](chapter11.xhtml#pg_180)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prim, R. C., [156](chapter10.xhtml#pg_156)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prim’s algorithm, [156](chapter10.xhtml#pg_156), [161](chapter10.xhtml#pg_161)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cost, [157](chapter10.xhtml#pg_157)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">prims()</samp> function, [158](chapter10.xhtml#pg_158)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">PriorityQueue</samp> class, [361–368](appendix_B.xhtml#pg_361)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: constructor, [362](appendix_B.xhtml#pg_362)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">dequeue()</samp> method, [361](appendix_B.xhtml#pg_361),
    [366](appendix_B.xhtml#pg_366)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">_elements_inverted()</samp> method,
    [363](appendix_B.xhtml#pg_363)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">enqueue()</samp> method, [361](appendix_B.xhtml#pg_361),
    [365](appendix_B.xhtml#pg_365)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">get_priority()</samp> method,
    [361–362](appendix_B.xhtml#pg_361)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">in_queue()</samp> method, [361–362](appendix_B.xhtml#pg_361)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">is_empty()</samp> method, [361–362](appendix_B.xhtml#pg_361)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">peek_top()</samp> method, [362](appendix_B.xhtml#pg_362),
    [368](appendix_B.xhtml#pg_368)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">peek_top_priority()</samp> method,
    [362](appendix_B.xhtml#pg_362), [368](appendix_B.xhtml#pg_368)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">peek_top_value()</samp> method,
    [362](appendix_B.xhtml#pg_362), [368](appendix_B.xhtml#pg_368)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">_propagate_down()</samp> method,
    [365](appendix_B.xhtml#pg_365)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">_propagate_up()</samp> method,
    [364](appendix_B.xhtml#pg_364)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">size()</samp> method, [362](appendix_B.xhtml#pg_362)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">_swap_elements()</samp> method,
    [364](appendix_B.xhtml#pg_364)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">update_priority()</samp> method,
    [362](appendix_B.xhtml#pg_362), [367](appendix_B.xhtml#pg_367)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: uses
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: in A* search, [120](chapter8.xhtml#pg_120)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: in Dijkstra’s algorithm, [93](chapter7.xhtml#pg_93)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: in greedy best-first search, [115](chapter8.xhtml#pg_115)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: in Prim’s algorithm, [158](chapter10.xhtml#pg_158)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: puzzles, [75–88](chapter6.xhtml#pg_75)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: river-crossing, [78–79](chapter6.xhtml#pg_78), [81–88](chapter6.xhtml#pg_81)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: slider, [79–80](chapter6.xhtml#pg_79)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: solving with search, [85–88](chapter6.xhtml#pg_85)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: states, [76](chapter6.xhtml#pg_76), [81](chapter6.xhtml#pg_81)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: state space graph, [78](chapter6.xhtml#pg_78)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: constructing, [77](chapter6.xhtml#pg_77), [80–85](chapter6.xhtml#pg_80)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tower of Hanoi, [76–77](chapter6.xhtml#pg_76)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">Q</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: queue, [65](chapter5.xhtml#pg_65)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">R</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: randomized algorithm, [321–323](chapter17.xhtml#pg_321)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: random walks, [207–226](chapter13.xhtml#pg_207)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: absorbing nodes, [217](chapter13.xhtml#pg_217)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: absorption probability, [217](chapter13.xhtml#pg_217)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: absorption time, [217](chapter13.xhtml#pg_217)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">choose_next_node()</samp> function,
    [215](chapter13.xhtml#pg_215)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">choose_start()</samp> function,
    [224](chapter13.xhtml#pg_224)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">estimate_graph_from_random _walks()</samp>
    function, [222](chapter13.xhtml#pg_222)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">estimate_start_from_random _walks()</samp>
    function, [225](chapter13.xhtml#pg_225)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: expected absorption time, [218](chapter13.xhtml#pg_218)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: expected hitting time, [218](chapter13.xhtml#pg_218)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: and games of chance, [214–215](chapter13.xhtml#pg_214), [219–221](chapter13.xhtml#pg_219)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: hitting probability, [217](chapter13.xhtml#pg_217)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: hitting time, [217](chapter13.xhtml#pg_217)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">is_valid_probability_graph()</samp>
    function, [211](chapter13.xhtml#pg_211)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: learning, [221–226](chapter13.xhtml#pg_221)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: random starting node, [224](chapter13.xhtml#pg_224)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">random_walk()</samp> function,
    [216](chapter13.xhtml#pg_216)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: self-loops, [208](chapter13.xhtml#pg_208)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: simulating, [215–216](chapter13.xhtml#pg_215), [224–225](chapter13.xhtml#pg_224)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: stationary distribution, [218–219](chapter13.xhtml#pg_218)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: time invariance, [210](chapter13.xhtml#pg_210)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: transition matrix, [211](chapter13.xhtml#pg_211)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: transition probability, [208](chapter13.xhtml#pg_208), [210–211](chapter13.xhtml#pg_210)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: reachability, [41–48](chapter3.xhtml#pg_41)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: checking, [48](chapter4.xhtml#pg_48), [195](chapter12.xhtml#pg_195)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: in directed graphs, [193](chapter12.xhtml#pg_193)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">get_reachable()</samp> function,
    [195](chapter12.xhtml#pg_195)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mutually reachable, [195](chapter12.xhtml#pg_195)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: relaxation, [97](chapter7.xhtml#pg_97)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: residual, [239–241](chapter14.xhtml#pg_239)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">ResidualGraph</samp> class, [235–237](chapter14.xhtml#pg_235),
    [240](chapter14.xhtml#pg_240), [243](chapter14.xhtml#pg_243)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">compute_total_flow()</samp> method,
    [237](chapter14.xhtml#pg_237)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: constructor, [236](chapter14.xhtml#pg_236)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">get_edge()</samp> method, [236](chapter14.xhtml#pg_236)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">get_residual()</samp> method,
    [241](chapter14.xhtml#pg_241)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">insert_edge()</samp> method, [236](chapter14.xhtml#pg_236)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">min_residual_on_path()</samp>
    method, [243](chapter14.xhtml#pg_243)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">update_along_path()</samp> method,
    [243](chapter14.xhtml#pg_243)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: river-crossing puzzle, [78–79](chapter6.xhtml#pg_78), [81–88](chapter6.xhtml#pg_81)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A* search, [124–126](chapter8.xhtml#pg_124)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">create_prisoners_and_guards()</samp>
    function, [84](chapter6.xhtml#pg_84)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">pg_generate_heuristic()</samp>
    function, [125](chapter8.xhtml#pg_125)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">pg_neighbors()</samp> function,
    [83](chapter6.xhtml#pg_83)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">pg_result_of_move()</samp> function,
    [82](chapter6.xhtml#pg_82)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">PGState</samp> class, [81](chapter6.xhtml#pg_81)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">pg_state_to_index_map()</samp>
    function, [85](chapter6.xhtml#pg_85)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">solve_pg_bfs()</samp> function,
    [86](chapter6.xhtml#pg_86)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: states, [78](chapter6.xhtml#pg_78)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">S</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: self-loops, [22](chapter2.xhtml#pg_22)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: in adjacency list representation, [22](chapter2.xhtml#pg_22)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: in adjacency matrix representation, [22](chapter2.xhtml#pg_22)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: and degree, [23](chapter2.xhtml#pg_23)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: in random walks, [208](chapter13.xhtml#pg_208)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: and undirected graphs, [22](chapter2.xhtml#pg_22)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sharir, M., [199](chapter12.xhtml#pg_199)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: shortest path, [90–91](chapter7.xhtml#pg_90)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: in unweighted graphs, [68](chapter5.xhtml#pg_68)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: in weighted graphs, [69](chapter5.xhtml#pg_69)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: shortest-path problem, [89–110](chapter7.xhtml#pg_89)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: all-pairs, [102–103](chapter7.xhtml#pg_102)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bellman-Ford algorithm, [97–99](chapter7.xhtml#pg_97)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dijkstra’s algorithm, [91–96](chapter7.xhtml#pg_91)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Floyd-Warshall algorithm, [103–108](chapter7.xhtml#pg_103)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: negative edge weight, [96–97](chapter7.xhtml#pg_96)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: single-linkage clustering, [169–173](chapter10.xhtml#pg_169)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">Link</samp> class, [171](chapter10.xhtml#pg_171)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">Point</samp> class, [170–171](chapter10.xhtml#pg_170)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">single_linkage_clustering()</samp>
    function, [171](chapter10.xhtml#pg_171)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sink node, [230](chapter14.xhtml#pg_230)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: slider puzzle, [79–80](chapter6.xhtml#pg_79)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: source node, [230](chapter14.xhtml#pg_230)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: spanning tree, [154](chapter10.xhtml#pg_154)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: spatial data, [353–355](appendix_A.xhtml#pg_353)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">build_graph_from_points()</samp>
    function, [354](appendix_A.xhtml#pg_354)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Euclidean distance, [112](chapter8.xhtml#pg_112), [354](appendix_A.xhtml#pg_354)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Manhattan distance, [354](appendix_A.xhtml#pg_354)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">Point</samp> class, [354](appendix_A.xhtml#pg_354)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: state space graphs, [78](chapter6.xhtml#pg_78)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: constructing, [77](chapter6.xhtml#pg_77), [80–85](chapter6.xhtml#pg_80)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: stationary distribution, [218–219](chapter13.xhtml#pg_218)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: strongly connected components, [193–205](chapter12.xhtml#pg_193)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">check_strongly_connected()</samp>
    function, [196](chapter12.xhtml#pg_196)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">get_reachable()</samp> function,
    [195](chapter12.xhtml#pg_195)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kosaraju-Sharir’s algorithm, [199–204](chapter12.xhtml#pg_199)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: strongly connected graphs, [194](chapter12.xhtml#pg_194)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">T</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Tarjan, Robert, [180](chapter11.xhtml#pg_180), [204](chapter12.xhtml#pg_204)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: task graphs, [138](chapter9.xhtml#pg_138)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: time invariance, [210](chapter13.xhtml#pg_210)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: topological sort, [135–151](chapter9.xhtml#pg_135)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: depth-first search, [143–147](chapter9.xhtml#pg_143)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: order of starting nodes, [146](chapter9.xhtml#pg_146)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">topological_dfs()</samp> function,
    [143](chapter9.xhtml#pg_143)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: detecting cycles, [147–148](chapter9.xhtml#pg_147)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">check_cycle_kahns()</samp> function,
    [148](chapter9.xhtml#pg_148)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">is_topo_ordered()</samp> function,
    [137](chapter9.xhtml#pg_137)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kahn’s algorithm, [139](chapter9.xhtml#pg_139)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">sort_forward_pointers()</samp>
    function, [149](chapter9.xhtml#pg_149)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: use for ordering lists, [148–150](chapter9.xhtml#pg_148)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tower of Hanoi puzzle, [76–77](chapter6.xhtml#pg_76)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: transition matrix, [211](chapter13.xhtml#pg_211)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: transition probability, [208](chapter13.xhtml#pg_208), [210–211](chapter13.xhtml#pg_210)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: learning, [221–226](chapter13.xhtml#pg_221)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: transpose graph, [200–201](chapter12.xhtml#pg_200)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">make_transpose_graph()</samp>
    function, [200](chapter12.xhtml#pg_200)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: of undirected graphs, [201](chapter12.xhtml#pg_201)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: traveling salesperson problem, [331–334](chapter18.xhtml#pg_331)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: heuristics, [333](chapter18.xhtml#pg_333)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">tsp_dfs()</samp> function, [333](chapter18.xhtml#pg_333)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">tsp_dfs_rec()</samp> function,
    [332](chapter18.xhtml#pg_332)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">U</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: undirected edges, [6](chapter1.xhtml#pg_6), [10](chapter1.xhtml#pg_10). *See
    also* [edges](#ind6)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: undirected graphs, [6](chapter1.xhtml#pg_6), [12](chapter1.xhtml#pg_12), [14](chapter1.xhtml#pg_14)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Union-Find, [161](chapter10.xhtml#pg_161), [369–373](appendix_C.xhtml#pg_369)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">UnionFind</samp> class
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">are_disjoint()</samp> method,
    [372](appendix_C.xhtml#pg_372)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: constructor, [372](appendix_C.xhtml#pg_372)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">find_set()</samp> method, [372](appendix_C.xhtml#pg_372)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">UnionFindNode</samp> class, [371](appendix_C.xhtml#pg_371)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">union_sets()</samp> method, [372](appendix_C.xhtml#pg_372)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: uses
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: in Kruskal’s algorithm, [161](chapter10.xhtml#pg_161), [163](chapter10.xhtml#pg_163)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: in maze generation, [167](chapter10.xhtml#pg_167)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: in single-linkage clustering, [171](chapter10.xhtml#pg_171)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: unweighted graphs, [5](chapter1.xhtml#pg_5), [9](chapter1.xhtml#pg_9)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">V</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '|*V*|, [4](chapter1.xhtml#pg_4)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vertex cover, [315–321](chapter17.xhtml#pg_315)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: heuristics, [316](chapter17.xhtml#pg_316)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">is_vertex_cover()</samp> function,
    [315](chapter17.xhtml#pg_315)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: minimum, [316](chapter17.xhtml#pg_316)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">minimum_vertex_cover _backtracking()</samp>
    function, [319](chapter17.xhtml#pg_319)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">minimum_vertex_cover_rec()</samp>
    function, [318](chapter17.xhtml#pg_318)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: using backtracking search, [318–321](chapter17.xhtml#pg_318)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: using greedy search, [316–318](chapter17.xhtml#pg_316)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">vertex_cover_greedy_choice()</samp>
    function, [316](chapter17.xhtml#pg_316)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">vertex_cover_greedy()</samp> function,
    [317](chapter17.xhtml#pg_317)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vertexes. *See* [nodes](#ind11)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">W</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: walks, [32](chapter3.xhtml#pg_32)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: weighted edges, [5](chapter1.xhtml#pg_5). *See also* [edges](#ind6)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: weighted graphs, [5](chapter1.xhtml#pg_5)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_TheSansMonoCd_W5Regular_11">World</samp> class, [127–130](chapter8.xhtml#pg_127)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <samp class="SANS_Futura_Std_Bold_Condensed_B_11">Z</samp>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Zingaro, Daniel, [369](appendix_C.xhtml#pg_369)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
