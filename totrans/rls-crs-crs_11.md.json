["```\n**gem 'bootstrap-sass'**\n```", "```\n--*snip*-\n*= require_tree.\n***= require bootstrap**\n*= require_self\n*/\n```", "```\n**//= require bootstrap**\n```", "```\n*--snip--*\n**<body>**\n  **<div class=\"container\">** ➊\n    **<%= yield %>** ➋\n  **</div>**\n</body>\n</html>\n```", "```\n  class PostsController < ApplicationController\n➊   **def index**\n         **@posts = Post.all**\n    **end**\n\n➋   **def show**\n         **@post = Post.find(params[:id])**\n    **end**\n  end\n```", "```\n➊ <div class=\"page-header\">\n    <h1>Home</h1>\n  </div>\n\n➋ <%= render @posts %>\n```", "```\n➊ <div class=\"panel panel-default\">\n➋   <div class=\"panel-heading\">\n      <h3 class=\"panel-title\">\n➌       <%= text_post.title %>\n      </h3>\n    </div>\n\n➍ <div class=\"panel-body\">\n    <p><em>By <%= text_post.user.name %></em></p>\n\n    <%= text_post.body %>\n  </div>\n</div>\n```", "```\n  <div class=\"panel panel-default\">\n    <div class=\"panel-heading\">\n      <h3 class=\"panel-title\">\n        <%= image_post.title %>\n      </h3>\n     </div>\n\n     <div class=\"panel-body\">\n       <p><em>By <%= image_post.user.name %></em></p>\n\n➊       <%= image_tag image_post.url, class: \"img-responsive\" %>\n\n       <%= image_post.body %>\n   </div>\n </div>\n```", "```\n$ **bin/rails server**\n```", "```\n  <div class=\"page-header\">\n    <h1>Post</h1>\n  </div>\n\n➊ <%= render @post %>\n\n  <%= link_to \"Home\", posts_path,\n➋       class: \"btn btn-default\" %>\n```", "```\ngem 'bcrypt', '~> 3.1.7'\n```", "```\n$ **bin/bundle install**\n```", "```\n$ **bin/rails g migration AddPasswordDigistToUsers password_digest**\n```", "```\nclass User < ActiveRecord::Base\n  --*snip*--\n\n  **has_secure_password**\n\n  **validates :email, presence: true, uniqueness: true**\n  --*snip*--\nend\n```", "```\nRails.application.routes.draw do\n  resources :comments\n  resources :image_posts\n  resources :text_posts\n  resources :posts\n  resources :users\n\n  **get 'signup', to: 'users#new', as: 'signup'**\n\n  **root 'posts#index'**\nend\n```", "```\n  class UsersController < ApplicationController\n➊   **def new**\n      **@user = User.new**\n    **end**\n\n➋   **def create**\n      **@user = User.new(user_params)**\n      **if @user.save**\n      **redirect_to root_url,**\n        **notice: \"Welcome to the site!\"**\n    **else**\n      **render \"new\"**\n    **end**\n  **end**\n\n  **private**\n\n  **def user_params**\n    **params.require(:user).permit(:name, :email, :password,**\n                                 **:password_confirmation)**\n  **end**\n**end**\n```", "```\n   <div class=\"page-header\">\n    <h1>Sign Up</h1>\n  </div>\n\n  <%= form_for(@user) do |f| %>\n➊   <% if @user.errors.any? %>\n      <div class=\"alert alert-danger\">\n        <strong>\n          <%= pluralize(@user.errors.count, \"error\") %>\n          prevented you from signing up:\n        </strong>\n        <ul>\n          <% @user.errors.full_messages.each do |msg| %>\n            <li><%= msg %></li>\n          <% end %>\n        </ul>\n      </div>\n    <% end %>\n\n➋   <div class=\"form-group\">\n      <%= f.label :email %>\n➌     <%= f.email_field :email, class: \"form-control\" %>\n    </div>\n    <div class=\"form-group\">\n      <%= f.label :password %>\n      <%= f.password_field :password, class: \"form-control\" %>\n    </div>\n    <div class=\"form-group\">\n      <%= f.label :password_confirmation %>\n      <%= f.password_field :password_confirmation,\n        class: \"form-control\" %>\n    </div>\n\n    <%= f.submit class: \"btn btn-primary\" %>\n  <% end %>\n```", "```\n --*snip*--\n <body>\n   <div class=\"container\">\n➊    **<% if notice %>**\n       **<div class=\"alert alert-success\"><%= notice %></div>**\n     **<% end %>**\n➋    **<% if alert %>**\n       **<div class=\"alert alert-danger\"><%= alert %></div>**\n     **<% end %>**\n\n     <%= yield %>\n   </div>\n </body>\n </html>\n```", "```\n➊ irb(main):001:0> **alice = User.find(1)**\n    User Load ...\n   => #<User id: 1, name: \"Alice\", ...>\n➋ irb(main):002:0> **alice.email = \"alice@example.com\"**\n   => \"alice@example.com\"\n  irb(main):003:0> **alice.password = \"password\"**\n   => \"password\"\n  irb(main):004:0> **alice.password_confirmation = \"password\"**\n   => \"password\"\n➌ irb(main):005:0> **alice.save**\n    --*snip*--\n   => true\n```", "```\nsession[:user_id] = @user.id\n```", "```\n$ **bin/rails g controller Sessions**\n```", "```\nRails.application.routes.draw do\n  resources :comments\n  resources :image_posts\n  resources :text_posts\n  resources :posts\n  resources :users\n  **resources :sessions**\n\n  get 'signup', to: 'users#new', as: 'signup'\n\n  **get 'login', to: 'sessions#new', as: 'login'**\n  **get 'logout', to: 'sessions#destroy', as: 'logout'**\n\n  root 'posts#index'\nend\n```", "```\n  <div class=\"page-header\">\n    <h1>Log In</h1>\n  </div>\n➊ <%= form_tag sessions_path do %>\n    <div class=\"form-group\">\n      <%= label_tag :email %>\n      <%= email_field_tag :email, params[:email],\n        class: \"form-control\" %>\n    </div>\n    <div class=\"form-group\">\n      <%= label_tag :password %>\n      <%= password_field_tag :password, nil,\n        class: \"form-control\" %>\n    </div>\n    <%= submit_tag \"Log In\", class: \"btn btn-primary\" %>\n<% end %>\n```", "```\n  class SessionsController < ApplicationController\n➊   **def new**\n    **end**\n\n➋   **def create**\n      **user = User.find_by(email: params[:email])**\n      **if user && user.authenticate(params[:password])**\n        **session[:user_id] = user.id**\n        **redirect_to root_url, notice: \"Log in successful!\"**\n      **else**\n        **flash.now.alert = \"Invalid email or password\"**\n        **render \"new\"**\n      **end**\n    **end**\n\n➌   **def destroy**\n      **session[:user_id] = nil**\n      **redirect_to root_url, notice: \"Log out successful!\"**\n    **end**\n  end\n```", "```\nclass ApplicationController < ActionController::Base\n  # Prevent CSRF attacks by raising an exception.\n  # For APIs, you may want to use :null_session instead.\n  protect_from_forgery with: :exception\n\n  **private**\n\n  **def current_user**\n    **if session[:user_id]**\n       **@current_user ||= User.find(session[:user_id])**\n    **end**\n  **end**\n  **helper_method :current_user**\nend\n```", "```\n    *--snip--*\n    **<div class=\"pull-right\">**\n      **<% if current_user %>**\n        **<%= link_to 'Log Out', logout_path %>**\n      **<% else %>**\n        **<%= link_to 'Log In', login_path %> or**\n        **<%= link_to 'Sign Up', signup_path %>**\n      **<% end %>**\n    **</div>**\n\n    <%= yield %>\n  </div>\n</body>\n</html>\n```", "```\nclass ApplicationController < ActionController::Base\n  # Prevent CSRF attacks by raising an exception.\n  # For APIs, you may want to use :null_session instead.\n  protect_from_forgery with: :exception\n\n  private\n\n  def current_user\n    if session[:user_id]\n      @current_user ||= User.find(session[:user_id])\n    end\n  end\n  helper_method :current_user\n\n  **def authenticate_user!**\n    **redirect_to login_path unless current_user**\n  **end**\nend\n```", "```\nclass PostsController < ApplicationController\n  **before_action :authenticate_user!**\n\n  --*snip*--\nend\n```", "```\n--*snip*--\n\n  **def timeline_user_ids**\n➊   **leader_ids + [id]**\n  **end**\nend\n```", "```\ndef index\n  **user_ids = current_user.timeline_user_ids**\n  **@posts = Post.where(user_id: user_ids)**\n             **.order(\"created_at DESC\")**\nend\n```", "```\n  *--snip--*\n\n  **<h3>Comments<h3>**\n  **<%= render @post.comments %>**\n\n  **<h4>New Comment</h4>**\n  **<%= form_for @post.comments.build do &#124;f&#124; %>**\n    **<div class=\"form-group\">**\n      **<%= f.label :body %><br>**\n      **<%= f.text_area :body, class: \"form-control\" %>**\n    **</div>**\n➊   **<%= f.hidden_field :post_id %>**\n    **<%= f.submit class: \"btn btn-primary\" %>**\n  **<% end %>**\n```", "```\n**def create**\n  **@comment = current_user.comments.build(comment_params)**\n\n  **if @comment.save**\n    **redirect_to post_path(@comment.post_id),**\n                **notice: 'Comment was successfully created.'**\n  **else**\n    **redirect_to post_path(@comment.post_id),**\n                **alert: 'Error creating comment.'**\n  **end**\n**end**\n```", "```\n**def comment_params**\n  **params.require(:comment).permit(:body, :post_id)**\n**end**\n```"]