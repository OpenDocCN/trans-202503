["```\nPS C:\\> Get-Disk\n\nNumber Friendly Name  Operational Status  Total Size  Partition Style\n\n------ -------------  ------------------  ----------  ---------------\n\n0      Microsoft      Online                   127GB  GPT\n\n       Virtual Disk\n```", "```\nEFI_STATUS EfiEntry (\n\n➊ EFI_HANDLE ImageHandle,       // UEFI image handle for loaded application\n\n➋ EFI_SYSTEM_TABLE *SystemTable // Pointer to UEFI system table\n\n);\n```", "```\n   PS C:\\WINDOWS\\system32> bcdedit\n\n   Windows Boot Manager\n\n   --------------------\n\n   identifier              {bootmgr}\n\n   device                  partition=\\Device\\HarddiskVolume2\n\n➊ path                    \\EFI\\Microsoft\\Boot\\bootmgfw.efi\n\n   description             Windows Boot Manager\n\n   locale                  en-US\n\n   inherit                 {globalsettings}\n\n   default                 {current}\n\n   resumeobject            {c68c4e64-6159-11e8-8512-a4c49440f67c}\n\n   displayorder            {current}\n\n   toolsdisplayorder       {memdiag}\n\n   timeout                 30\n\n   Windows Boot Loader\n\n   -------------------\n\n   identifier              {current}\n\n   device                  partition=C:\n\n➋ path                    \\WINDOWS\\system32\\winload.efi\n\n   description             Windows 10\n\n   locale                  en-US\n\n   inherit                 {bootloadersettings}\n\n   recoverysequence        {f5b4c688-6159-11e8-81bd-8aecff577cb6}\n\n   displaymessageoverride  Recovery\n\n   recoveryenabled         Yes\n\n   isolatedcontext         Yes\n\n   allowedinmemorysettings 0x15000075\n\n   osdevice                partition=C:\n\n   systemroot              \\WINDOWS\n\n   resumeobject            {c68c4e64-6159-11e8-8512-a4c49440f67c}\n\n   nx                      OptIn\n\n   bootmenupolicy          Standard\n```", "```\n__int64 __fastcall OslpMain(__int64 a1)\n\n{\n\n  __int64 v1; // rbx@1\n\n  unsigned int v2; // eax@3\n\n  __int64 v3; //rdx@3\n\n  __int64 v4; //rcx@3\n\n  __int64 v5; //r8@3\n\n  __int64 v6; //rbx@5\n\n  unsigned int v7; // eax@7\n\n  __int64 v8; //rdx@7\n\n  __int64 v9; //rcx@7\n\n  __int64 v10; //rdx@9\n\n  __int64 v11; //rcx@9\n\n  unsigned int v12; // eax@10\n\n  char v14; // [rsp+20h] [rbp-18h]@1\n\n  int v15; // [rsp+2Ch] [rbp-Ch]@1\n\n  char v16; // [rsp+48h] [rbp+10h]@3\n\n  v1 = a1;\n\n  BlArchCpuId(0x80000001, 0i64, &v14);\n\n  if ( !(v15 & 0x100000) )\n\n    BlArchGetCpuVendor();\n\n  v2 = OslPrepareTarget (v1, &v16);\n\n  LODWORD(v5) = v2;\n\n  if ( (v2 & 0x80000000) == 0 && v16 )\n\n  {\n\n    v6 = OslLoaderBlock;\n\n    if ( !BdDebugAfterExitBootServices )\n\n      BlBdStop(v4, v3, v2);\n\n  ➊ v7 = OslFwpKernelSetupPhase1(v6);\n\n    LODWORD(v5) = v7;\n\n    if ( (v7 & 0x80000000) == 0 )\n\n    {\n\n      ArchRestoreProcessorFeatures(v9, v8, v7);\n\n      OslArchHypervisorSetup(1i64, v6);\n\n    ➋ LODWORD(v5) = BlVsmCheckSystemPolicy(1i64);\n\n      if ( (signed int)v5 >= 0 )\n\n      {\n\n        if ( (signed int)OslVsmSetup(1i64, 0xFFFFFFFFi64, v6) >= 0\n\n         ➌ || (v12 = BlVsmCheckSystemPolicy(2i64), v5 = v12, (v12 & 0x80000000) == 0 ) )\n\n        {\n\n          BlBdStop(v11, v10, v5);\n\n        ➍ OslArchTransferToKernel(v6, OslEntryPoint);\n\n          while ( 1 )\n\n            ;\n\n        }\n\n      }\n\n    }\n\n  }\n\n}\n```", "```\n.text:0000000180123C90 OslArchTransferToKernel proc near\n\n.text:0000000180123C90                 xor     esi, esi\n\n.text:0000000180123C92                 mov     r12, rcx\n\n.text:0000000180123C95                 mov     r13, rdx\n\n.text:0000000180123C98                 wbinvd\n\n.text:0000000180123C9A                 sub     rax, rax\n\n.text:0000000180123C9D                 mov     ss, ax\n\n.text:0000000180123CA0                 mov     rsp, cs:OslArchKernelStack\n\n.text:0000000180123CA7                 lea     rax, OslArchKernelGdt\n\n.text:0000000180123CAE                 lea     rcx, OslArchKernelIdt\n\n.text:0000000180123CB5                 lgdt    fword ptr [rax]\n\n.text:0000000180123CB8                 lidt    fword ptr [rcx]\n\n.text:0000000180123CBB                 mov     rax, cr4\n\n.text:0000000180123CBE                 or      rax, 680h\n\n.text:0000000180123CC4                 mov     cr4, rax\n\n.text:0000000180123CC7                 mov     rax, cr0\n\n.text:0000000180123CCA                 or      rax, 50020h\n\n.text:0000000180123CD0                 mov     cr0, rax\n\n.text:0000000180123CD3                 xor     ecx, ecx\n\n.text:0000000180123CD5                 mov     cr8, rcx\n\n.text:0000000180123CD9                 mov     ecx, 0C0000080h\n\n.text:0000000180123CDE                 rdmsr\n\n.text:0000000180123CE0                 or      rax, cs:OslArchEferFlags\n\n.text:0000000180123CE7                 wrmsr\n\n.text:0000000180123CE9                 mov     eax, 40h\n\n.text:0000000180123CEE                 ltr     ax\n\n.text:0000000180123CF1                 mov     ecx, 2Bh\n\n.text:0000000180123CF6                 mov     gs, ecx\n\n.text:0000000180123CF8                 assume gs:nothing\n\n.text:0000000180123CF8                 mov     rcx, r12\n\n.text:0000000180123CFB                 push    rsi\n\n.text:0000000180123CFC                 push    10h\n\n.text:0000000180123CFE                 push    r13\n\n.text:0000000180123D00                 retfq\n\n.text:0000000180123D00 OslArchTransferToKernel endp\n```"]