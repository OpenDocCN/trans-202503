["```\n//creates a tone of *frequency* on *pin* for a *duration* in ms\ntone(*pin*, *frequency*, *duration*);\n\n//stops the playing of a tone on the given pin\nnoTone(*pin*);\n```", "```\n  //Serial Tone Test Example\n  //Upload this example and then open the Serial Monitor\n  int freq;\n  void setup()\n  {\n➊   pinMode(9, OUTPUT);\n    **Serial**.begin(9600);\n    **Serial**.println(\"Type in a frequency to play.\");\n  }\n\n  void loop()\n  {\n➋   if(**Serial**.available() > 0)  //wait for a serial\n                                //input string\n    {\n➌    freq = **Serial**.parseInt();  //parse out integer value\n      **Serial**.print(\"Playing note: \");  //user feedback\n      **Serial**.println(freq);\n➍    tone(9, freq, 500);  //play the note for 500 ms\n➎    delay(500);  //delay for the note duration\n    }\n    else\n    {\n      noTone(9);\n    }\n  }\n```", "```\n262,262,392,392,440,440,392,392,349,349,330,330,294,294,262,262,\n```", "```\n  //Noisemaker Example\n  //upload this example, open the Serial Monitor,\n  //and then squeeze the SoftPot\n➊ int sensorValue;\n  void setup()\n  {\n    pinMode(9, OUTPUT);\n    **Serial**.begin(9600);\n  }\n\n  void loop()\n  {\n➋   sensorValue = analogRead(A0);\n➌   if (sensorValue > 0)    //if there's a press on sensor,\n                            //play note\n    {\n➍    **Serial**.print(\"Raw sensor reading: \");\n     **Serial**.println(sensorValue);\n➎    tone(9, sensorValue, ➏50);\n     delay(➐50);\n    }\n➑    else\n    {\n      noTone(9);\n    }\n  }\n```", "```\n  //Tiny Electric Piano Example Code\n➊ int frequencies[] = {262, 294, 330, 349, 392, 440, 494, 524};\n  int sensorValue;\n➋ byte note;\n\n  void setup()\n  {\n    pinMode(9, OUTPUT);\n    **Serial**.begin(9600);\n  }\n void loop()\n  {\n    sensorValue = analogRead(A0);\n    if (sensorValue > 0)   //if it's a note, play it!\n    {\n      //map the key pressed to a note\n    ➌ note = map(sensorValue, 0, 1023, 0, 8);\n    ➍ note = constrain(note, 0, 7);\n      **Serial**.print(sensorValue);\n      **Serial**.print(\"\\t\");\n      **Serial**.println(➎frequencies[note]);\n      tone(9, ➏frequencies[note], 50);\n      delay(50);\n    }\n    else\n    {\n      noTone(9);\n    }\n  }\n```", "```\n*dataType arrayName*[] = {*val0*, *val1, val2, val3, val4*... };\n```", "```\nmap(*inValue*, *inMin*, *inMax*, *outMin*, *outMax*);\n```", "```\nconstrain(*value*, *minValue*, *maxValue*);\n```"]