["```\nR> pwid <- iris$Petal.Width\nR> plen <- iris$Petal.Length\nR> swid <- iris$Sepal.Width\nR> slen <- iris$Sepal.Length\n```", "```\nR> plot3d(x=pwid,y=plen,z=swid)\n```", "```\nR> plot3d(x=pwid,y=plen,z=swid,size=1.5,type=\"s\",\n          col=c(1,2,3)[as.numeric(iris$Species)])\n```", "```\nR> legend3d(\"topright\",col=1:3,legend=levels(iris$Species),pch=16,cex=2)\n```", "```\nR> bg3d(color=\"white\")\n```", "```\nR> slen.pal <- colorRampPalette(c(\"purple\",\"yellow2\",\"blue\"))\nR> cols <- slen.pal(50)\nR> slen.cols <- cut(slen,breaks=seq(min(slen),max(slen),length=51),\n                    include.lowest=TRUE)\n```", "```\nR> plot3d(x=pwid,y=plen,z=swid,type=\"s\",size=1.5,col=cols[slen.cols],\n          aspect=c(1,1.75,1),xlab=\"Petal width\",ylab=\"Petal length\",\n          zlab=\"Sepal width\")\n```", "```\nR> xfromto <- rep(pwid,each=2)\nR> yfromto <- rep(plen,each=2)\nR> zfromto <- rep(min(swid),times=2*nrow(iris))\nR> zfromto[seq(2,length(zfromto),2)] <- swid\n```", "```\nR> segments3d(x=xfromto,y=yfromto,z=zfromto,col=rep(cols[slen.cols],each=2))\n```", "```\nR> grid3d(side=\"z-\")\n```", "```\nR> bgplot3d({plot.new();colorlegend(slen.pal(50),zlim=range(slen),\n                                    zval=seq(4.5,7.5,0.5),digit=1,\n                                    posx=c(0.91,0.93),posy=c(0.1,0.9),\n                                    main=\"Sepal length\")})\n```", "```\nR> car.fit <- lm(mpg~hp*wt,data=mtcars)\nR> len <- 20\nR> hp.seq <- seq(min(mtcars$hp),max(mtcars$hp),length=len)\nR> wt.seq <- seq(min(mtcars$wt),max(mtcars$wt),length=len)\nR> hp.wt <- expand.grid(hp=hp.seq,wt=wt.seq)\n```", "```\nR> car.pred <- predict(car.fit,newdata=hp.wt,interval=\"prediction\",level=0.99)\n```", "```\nR> car.pred.mat <- matrix(car.pred[,1],nrow=len,ncol=len)\nR> persp3d(x=hp.seq,y=wt.seq,z=car.pred.mat,col=\"green\")\n```", "```\nR> persp3d(x=hp.seq,y=wt.seq,z=car.pred.mat,col=\"red\",alpha=0.7,\n           xlab=\"Horsepower\",ylab=\"Weight\",zlab=\"mean MPG\")\nR> points3d(mtcars$hp,mtcars$wt,mtcars$mpg,col=\"green3\",size=10)\n```", "```\nR> car.pred.lo <- matrix(car.pred[,2],nrow=len,ncol=len)\nR> car.pred.up <- matrix(car.pred[,3],nrow=len,ncol=len)\n```", "```\nR> persp3d(x=hp.seq,y=wt.seq,z=car.pred.up,col=\"cyan\",add=TRUE,alpha=0.5)\nR> persp3d(x=hp.seq,y=wt.seq,z=car.pred.lo,col=\"cyan\",add=TRUE,alpha=0.5)\n```", "```\nR> persp3d(x=hp.seq,y=wt.seq,z=car.pred.mat,col=\"red\",alpha=0.7,\n           xlab=\"Horsepower\",ylab=\"Weight\",zlab=\"mean MPG\")\nR> text3d(x=mtcars$hp,y=mtcars$wt,z=mtcars$mpg,texts=rownames(mtcars),cex=0.75)\nR> persp3d(x=hp.seq,y=wt.seq,z=car.pred.up,col=\"cyan\",add=TRUE,alpha=0.5)\nR> persp3d(x=hp.seq,y=wt.seq,z=car.pred.lo,col=\"cyan\",add=TRUE,alpha=0.5)\n```", "```\nR> xfromto <- rep(mtcars$hp,each=2)\nR> yfromto <- rep(mtcars$wt,each=2)\nR> zfromto <- rep(car.fit$fitted.values,each=2)\nR> zfromto[seq(2,2*nrow(mtcars),2)] <- mtcars$mpg\n```", "```\nR> segments3d(x=xfromto,y=yfromto,z=zfromto)\n```", "```\nR> blues <- colorRampPalette(c(\"cyan\",\"navyblue\"))\nR> blues200 <- blues(200)\nR> zm <- car.pred.mat\nR> zm.breaks <- seq(min(zm),max(zm),length=201)\nR> zm.colors <- cut(zm,breaks=zm.breaks,include.lowest=TRUE)\n```", "```\nR> persp3d(x=hp.seq,y=wt.seq,z=car.pred.mat,col=blues200[zm.colors],\n           alpha=0.6,xlab=\"Horsepower\",ylab=\"Weight\",zlab=\"mean MPG\")\n```", "```\nR> chor.WIN <- chorley$window\nR> chor.dens.WIN <- kde2d(chorley$x,chorley$y,n=256,\n                          lims=c(chor.WIN$xrange,chor.WIN$yrange))\nR> chor.xy <- expand.grid(chor.dens.WIN$x,chor.dens.WIN$y)\nR> chor.out.mat <- matrix(!inside.owin(x=chor.xy[,1],y=chor.xy[,2],\n                                       w=chor.WIN),\n                          256,256)\nR> chor.dens.WIN$z[chor.out.mat] <- NA\n```", "```\nR> zm <- chor.dens.WIN$z\nR> rbow <- rainbow(200,start=0,end=5/6)\nR> zm.breaks <- seq(min(zm,na.rm=TRUE),max(zm,na.rm=TRUE),length=201)\nR> zm.colors <- cut(zm,breaks=zm.breaks,include.lowest=TRUE)\n```", "```\nR> xd <- chor.WIN$xrange[2]-chor.WIN$xrange[1]\nR> xd\n[1] 23\nR> yd <- chor.WIN$yrange[2]-chor.WIN$yrange[1]\nR> yd\n[1] 21.38\nR> xd/yd\n[1] 1.075772\n```", "```\nR> persp3d(chor.dens.WIN$x,chor.dens.WIN$y,chor.dens.WIN$z,\n           col=rbow[zm.colors],aspect=c(xd/yd,1,0.75),\n           xlab=\"Eastings (km)\",ylab=\"Northings (km)\",\n           zlab=\"Kernel estimate\")\n```", "```\nbgplot3d({plot.new();\n          colorlegend(col=rbow,zlim=range(chor.dens.WIN$z,na.rm=TRUE),\n                     zval=seq(0,0.02,0.0025),main=\"KDE\",digit=4,\n                     posx=c(0.87,0.9),posy=c(0.2,0.8))})\n```", "```\nR> reds <- seq(0,255,25)\nR> reds\n [1]   0  25  50  75 100 125 150 175 200 225 250\nR> greens <- seq(0,255,25)\nR> blues <- seq(0,255,25)\nR> full.rgb <- expand.grid(reds,greens,blues)\nR> nrow(full.rgb)\n[1] 1331\n```", "```\nR> plot3d(x=full.rgb[,1],y=full.rgb[,2],z=full.rgb[,3],\n          col=rgb(full.rgb,maxColorValue=255),type=\"s\",\n          size=1.5,xlab=\"Red\",ylab=\"Green\",zlab=\"Blue\")\n```", "```\nR> library(\"mvtnorm\")\nR> rand2d.norm <- rmvnorm(n=500,mean=c(0,0))\nR> plot(rand2d.norm,xlab=\"x\",ylab=\"y\")\n```", "```\nR> vals <- seq(-3,3,length=50)\nR> xy <- expand.grid(vals,vals)\nR> z <- matrix(dmvnorm(xy),50,50)\n```", "```\nR> contour(vals,vals,z,xlab=\"x\",ylab=\"y\")\n```", "```\nR> rand3d.norm <- rmvnorm(n=500,mean=c(0,0,0))\nR> plot3d(rand3d.norm,xlab=\"x\",ylab=\"y\",zlab=\"z\")\n```", "```\nR> xyz <- expand.grid(vals,vals,vals)\nR> nrow(xyz)\n[1] 125000\n```", "```\nw <- array(dmvnorm(xyz),c(50,50,50))\n```", "```\nR> max3d.norm <- dmvnorm(c(0,0,0),mean=c(0,0,0))\nR> max3d.norm\n[1] 0.06349364\n```", "```\nR> contour3d(x=vals,y=vals,z=vals,f=w,level=0.05*max3d.norm)\n```", "```\nR> plot3d(rand3d.norm,xlab=\"x\",ylab=\"y\",zlab=\"z\")\nR> contour3d(x=vals,y=vals,z=vals,f=w,level=0.05*max3d.norm,add=TRUE,alpha=0.5)\n```", "```\nR> plot3d(rand3d.norm,xlab=\"x\",ylab=\"y\",zlab=\"z\")\nR> contour3d(x=vals,y=vals,z=vals,f=w,\n             level=c(0.05,0.2,0.6,0.95)*max3d.norm,\n             color=c(\"pink\",\"green\",\"blue\",\"red\"),\n             alpha=c(0.1,0.2,0.4,0.9),add=TRUE)\n```", "```\nR> quak <- quakes[,c(\"long\",\"lat\",\"depth\")]\nR> quak$depth <- -quak$depth\n```", "```\nR> plot3d(x=quak$long,y=quak$lat,z=quak$depth,\n          xlab=\"Longitude\",ylab=\"Latitude\",zlab=\"Depth\")\n```", "```\nR> quak.dens3d <- kde(x=quak,gridsize=c(64,64,64),compute.cont=TRUE)\n```", "```\nR> dim(quak.dens3d$estimate)\n[1] 64 64 64\n```", "```\nR> x.latt <- quak.dens3d$eval.points[[1]]\nR> y.latt <- quak.dens3d$eval.points[[2]]\nR> z.latt <- quak.dens3d$eval.points[[3]]\n```", "```\nR> quak.dens3d$cont[75]\n         25%\n2.002741e-05\n```", "```\nR> plot3d(x=quak$long,y=quak$lat,z=quak$depth,\n          xlab=\"Longitude\",ylab=\"Latitude\",zlab=\"Depth\")\nR> contour3d(x=x.latt,y=y.latt,z=z.latt,f=quak.dens3d$estimate,\n             color=\"blue\",level=quak.dens3d$cont[75],add=TRUE)\n```", "```\nR> quak.dens3d$cont[50]\n         50%\n3.649565e-05\n```", "```\nR> contour3d(x=x.latt,y=y.latt,z=z.latt,f=quak.dens3d$estimate,\n             color=\"green\",level=quak.dens3d$cont[50],add=TRUE,alpha=0.5)\n```", "```\nR> qlevels <- quak.dens3d$cont[c(80,60,40,20)]\nR> qlevels\n         20%          40%          60%          80%\n1.771214e-05 2.964305e-05 4.249407e-05 9.543976e-05\n```", "```\nR> qcols <- c(\"yellow\",\"orange\",\"red\",\"red4\")\nR> qalpha <- c(0.2,0.3,0.4,0.5)\n```", "```\nR> contour3d(x=x.latt,y=y.latt,z=z.latt,f=quak.dens3d$estimate,\n             color=qcols,level=qlevels,add=TRUE,alpha=qalpha)\n```", "```\nR> radius <- 3\nR> a <- 1\nR> b <- -4.4\nR> angle <- 0:360*(pi/180)\nR> x <- a+radius*cos(angle)\nR> y <- b+radius*sin(angle)\nR> plot(x,y,ann=FALSE)\nR> abline(v=a)\nR> abline(h=b)\n```", "```\nR> r <- 3\nR> h <- 10\nR> zseq <- 0:h\nR> theta <- 0:360*(pi/180)\n```", "```\nR> ztheta <- expand.grid(zseq,theta)\nR> nrow(ztheta)\n[1] 3971\n```", "```\nR> x <- apply(ztheta,1,function(vec) r*cos(vec[2]))\nR> y <- apply(ztheta,1,function(vec) r*sin(vec[2]))\nR> z <- apply(ztheta,1,function(vec) vec[1])\n```", "```\nR> xm <- matrix(x,length(zseq),length(theta))\nR> ym <- matrix(y,length(zseq),length(theta))\nR> zm <- matrix(z,length(zseq),length(theta))\n```", "```\nR> xm <- outer(zseq,theta,function(z,t) r*cos(t))\nR> ym <- outer(zseq,theta,function(z,t) r*sin(t))\nR> zm <- outer(zseq,theta,function(z,t) z)\n```", "```\nR> persp3d(x=xm,y=ym,z=zm,col=\"red\")\nR> points3d(x=xm,y=ym,z=zm)\n```", "```\nR> xm <- outer(zseq,theta,function(z,t) (h-z)/h*r*cos(t))\nR> ym <- outer(zseq,theta,function(z,t) (h-z)/h*r*sin(t))\nR> zm <- outer(zseq,theta,function(z,t) z)\nR> persp3d(x=xm,y=ym,z=zm,col=\"green\")\n```", "```\nR> res <- 200\nR> vseq <- seq(-1,1,length=res)\nR> theta <- seq(0,2*pi,length=res)\n```", "```\nR> xm <- outer(vseq,theta,function(v,t) (1+v/2*cos(t/2))*cos(t))\nR> ym <- outer(vseq,theta,function(v,t) (1+v/2*cos(t/2))*sin(t))\nR> zm <- outer(vseq,theta,function(v,t) v/2*sin(t/2))\n```", "```\nR> plot3d(x=xm,y=ym,z=zm)\n```", "```\nR> persp3d(x=xm,y=ym,z=zm,col=\"orange\",axes=FALSE,xlab=\"\",ylab=\"\",zlab=\"\")\n```", "```\nR> patriot.colors <- colorRampPalette(c(\"red4\",\"red\",\"white\",\"blue\",\n                                        \"white\",\"red\",\"red4\"))\n```", "```\nR> patcols <- patriot.colors(2*res-1)\nR> stripcols <- rep(NA,res^2)\nR> for(i in 0:(res-1)){\n+  stripcols[1:res+res*i] <- patcols[1:res+i]\n+ }\n```", "```\nR> persp3d(x=xm,y=ym,z=zm,col=stripcols,aspect=c(2,2.5,1.5),axes=FALSE,\n           xlab=\"\",ylab=\"\",zlab=\"\")\n```", "```\nR> alpha <- 1\nR> beta <- 2\nR> xm <- outer(theta,theta,function(t1,t2) (beta+alpha*cos(t2))*cos(t1))\nR> ym <- outer(theta,theta,function(t1,t2) (beta+alpha*cos(t2))*sin(t1))\nR> zm <- outer(theta,theta,function(t1,t2) alpha*sin(t2))\n```", "```\nR> plot3d(x=xm,y=ym,z=zm)\n```", "```\nR> persp3d(x=xm,y=ym,z=zm,col=\"seagreen4\",axes=FALSE,xlab=\"\",ylab=\"\",zlab=\"\")\n```", "```\nR> donutcols <- rep(\"tan\",res^2)\n```", "```\nR> donutcols[as.vector(zm)>0] <- \"pink\"\n```", "```\nR> sample(x=1:10,size=4)\n[1] 8 9 2 6\n```", "```\nR> sprinkles <- c(\"blue\",\"green\",\"red\",\"violet\",\"yellow\")\nR> donutcols[sample(x=which(as.vector(zm)>0),size=300)] <- sprinkles\n```", "```\nR> persp3d(xm,ym,zm,col=donutcols,aspect=c(1,1,0.4),axes=FALSE,\n           xlab=\"\",ylab=\"\",zlab=\"\")\n```"]