["```\nDELETE FROM model WHERE id = 4\n```", "```\n<?php\nnamespace Mattsmithdev;\n\nclass Application\n{\n--snip--\n public function run(): void\n {\n $action = filter_input(INPUT_GET, 'action');\n$isPostSubmission = ($_SERVER['REQUEST_METHOD'] === 'POST');\n\n switch ($action)\n {\n --snip--\n          case 'deleteAll':\n                if ($isPostSubmission) {\n                    $this->productController->deleteAll();\n                } else {\n                    $this->defaultController->\n                        error('error - not a POST request');\n                }\n                break;\n\n default:\n $this->defaultController->homepage();\n }\n }\n}\n```", "```\n<?php\nnamespace Mattsmithdev;\n\nclass ProductController extends Controller\n{\n private ProductRepository $productRepository;\n\n --snip--\n\n    public function deleteAll(): void\n    {\n        $this->productRepository->deleteAll();\n\n        $this->list();\n    }\n}\n```", "```\n<?php\nnamespace Mattsmithdev;\n\nclass ProductRepository\n{\n private ?\\PDO $connection = NULL;\n --snip--\n\n    public function deleteAll(): int\n    {\n        if (NULL == $this->connection) return 0;\n\n        $sql = 'DELETE FROM product';\n        $stmt = $this->connection->prepare($sql);\n        $stmt->execute();\n      ❶ $numRowsAffected = $stmt->rowCount();\n\n        return $numRowsAffected;\n    }\n}\n```", "```\n{% extends 'base.xhtml.twig' %}\n{% block title %}product list page{% endblock %}\n{% block productLink %}active{% endblock %}\n\n{% block body %}\n <h1>Product list page</h1>\n <ul>\n {% for product in products %}\n --snip--\n {% endfor %}\n </ul>\n    <p>\n        <form method=\"POST\" action=\"/?action=deleteAll\">\n            <button class=\"btn btn-danger m-1\"\n            onclick=\"return confirm('Delete ALL products: Are you sure?');\">\n            Delete ALL products</button>\n        </form>\n    </p>\n{% endblock %}\n```", "```\n<?php\nnamespace Mattsmithdev;\n\nclass Application\n{\n--snip--\n public function run(): void\n {\n $action = filter_input(INPUT_GET, 'action');\n $isPostSubmission = ($_SERVER['REQUEST_METHOD'] === 'POST');\n\n switch ($action)\n {\n --snip--\n\n            case 'delete':\n              ❶ $id = filter_input(INPUT_POST, 'id',\n                                   FILTER_SANITIZE_NUMBER_INT);\n                if ($isPostSubmission && !empty($id)) {\n                    $this->productController->delete($id);\n                } else {\n                    $this->defaultController->error('error - to delete a\n                           product an integer id must be provided by a\n                           POST request');\n                }\n                break;\n\n default:\n $this->defaultController->homepage();\n }\n }\n}\n```", "```\n<?php\nnamespace Mattsmithdev;\n\nclass ProductController extends Controller\n{\n private ProductRepository $productRepository;\n\n --snip--\n\n    public function delete(int $id): void\n    {\n        $this->productRepository->delete($id);\n\n        $this->list();\n    }\n}\n```", "```\n<?php\nnamespace Mattsmithdev;\n\nclass ProductRepository\n{\n private ?\\PDO $connection = NULL;\n\n --snip--\n\n public function delete(int $id): bool\n    {\n        if (NULL == $this->connection) return false;\n\n        $sql = 'DELETE FROM product WHERE id = :id';\n        $stmt = $this->connection->prepare($sql);\n        $stmt->bindParam(':id', $id);\n        $success = $stmt->execute();\n\n        return $success;\n    }\n}\n```", "```\n{% extends 'base.xhtml.twig' %}\n{% block title %}product list page{% endblock %}\n{% block productLink %}active{% endblock %}\n\n{% block body %}\n <h1>Product list page</h1>\n\n <ul>\n {% for product in products %}\n <li class=\"mt-5\">\n\n id: {{product.id}}\n <br>\n description: {{product.description}}\n <br>\n price: $ {{product.price | number_format(2)}}\n <br>\n            <a href=\"/?action=show&id={{product.id}}\"\n❶ class=\"btn btn-secondary m-1\">Show</a>\n            <br>\n            <form method=\"POST\" action=\"/?action=delete\">\n              ❷ <input type=\"hidden\" name=\"id\" value=\"{{product.id}}\">\n                <button class=\"btn btn-danger m-1\"\n                        onclick=\"return confirm(\n                                'Delete product with ID = {{product.id}}:\n                                Are you sure?');\"\n                >\n Delete</button>\n            </form>\n        </li>\n      ❸ {% else %}\n            <li>\n                (there are no products to display)\n            </li>\n        {% endfor %}\n </ul>\n\n <p>\n <form method=\"POST\" action=\"/?action=deleteAll\">\n--snip--\n```", "```\nINSERT INTO cat (name, gender, age) VALUES ('fluffy', 'female', 4)\n```", "```\n<?php\nnamespace Mattsmithdev;\n\nclass Application\n{\n--snip--\n public function run(): void\n {\n $action = filter_input(INPUT_GET, 'action');\n $isPostSubmission = ($_SERVER['REQUEST_METHOD'] === 'POST');\n\n switch ($action)\n {\n        --snip--\n\n            case 'create': ❶\n                $this->productController->create();\n                break;\n\n            case 'processCreate': ❷\n                $description = filter_input(INPUT_POST, 'description');\n                $price = filter_input(INPUT_POST, 'price', FILTER_SANITIZE_NUMBER_FLOAT,\n                                      FILTER_FLAG_ALLOW_FRACTION);\n\n if ($isPostSubmission && !empty($description) && !empty($price)) {❸\n                    $this->productController->processCreate($description, $price);\n                } else {\n                    $this->defaultController->error(\n                    'error - new product needs a description and price (via a POST request)');\n                }\n                break;\n\n            default:\n                $this->defaultController->homepage();\n        }\n    }\n}\n```", "```\n<?php\nnamespace Mattsmithdev;\n\nclass ProductController extends Controller\n{\n private ProductRepository $productRepository;\n\n --snip--\n\n❶public function create(): void\n    {\n        $template = 'product/create.xhtml.twig';\n        $args = [];\n        print $this->twig->render($template, $args);\n    }\n\n ❷ public function processCreate(string $description, float $price): void\n    {\n        $this->productRepository->insert($description, $price);\n\n        $this->list();\n    }\n}\n```", "```\n<?php\nnamespace Mattsmithdev;\n\nclass ProductRepository\n{\n private ?\\PDO $connection = NULL;\n\n --snip--\n\n    public function insert(string $description, float $price): int\n    {\n        if (NULL == $this->connection) return -1;\n\n        $sql = 'INSERT INTO product (description, price)'\n            . ' VALUES (:description, :price)';\n        $stmt = $this->connection->prepare($sql);\n\n        $stmt->bindParam(':description', $description);\n        $stmt->bindParam(':price', $price);\n\n        $success = $stmt->execute();\n\n ❶ if ($success) {\n            return $this->connection->lastInsertId();\n        } else {\n            return -1;\n        }\n    }\n}\n```", "```\n{% extends 'base.xhtml.twig' %}\n{% block title %}product list page{% endblock %}\n{% block productLink %}active{% endblock %}\n\n{% block body %}\n --snip--\n Delete ALL products</button>\n </form>\n </p>\n\n    <p>\n        <a href=\"/?action=create\" class=\"btn btn-secondary m-1\">\n            Create NEW product\n        </a>\n    </p>\n{% endblock %}\n```", "```\n{% extends 'base.xhtml.twig' %}\n\n{% block title %}create product page{% endblock %}\n\n{% block body %}\n    <h1>Create NEW Product page</h1>\n\n  ❶ <form method=\"POST\" action=\"/?action=processCreate\">\n        <p>\n        Description:\n        <input name=\"description\">\n        </p>\n        <p>\n        Price:\n        <input name=\"price\" type=\"number\" min=\"0\" step=\"0.01\">\n        </p>\n        <input type=\"submit\">\n    </form>\n{% endblock %}\n```", "```\n<?php\nnamespace Mattsmithdev;\n\nclass ProductController extends Controller\n{\n private ProductRepository $productRepository;\n\n    public function list(?int $newProductId = NULL): void\n {\n $products = $this->productRepository->findAll();\n\n $template = 'product/list.xhtml.twig';\n $args = [\n 'products' => $products,\n          ❶ 'id' => $newProductId\n ]\n print $this->twig->render($template, $args);\n }\n\n --snip--\n\n public function processCreate(string $description, float $price): void\n {\n        $newProductId =\n            $this->productRepository->insert($description, $price);\n\n        $this->list($newProductId);\n }\n}\n```", "```\n{% extends 'base.xhtml.twig' %}\n{% block title %}product list page{% endblock %}\n{% block productLink %}active{% endblock %}\n\n{% block body %}\n <h1>Product list page</h1>\n\n <ul>\n {% for product in products %}\n\n❶{% if id == product.id %}\n                {% set highlight = 'active' %}\n            {% else %}\n                {% set highlight = '' %}\n            {% endif %}\n\n❷<li class=\"{{highlight}}\">\n\n id: {{product.id}}\n <br>\n--snip--\n\n{% endblock %}\n```", "```\n<!doctype html>\n<html lang=\"en\">\n<head>\n <title>MG- - {% block title %}{% endblock %}</title>\n <meta name=\"viewport\" content=\"width=device-width\">\n <link rel=\"stylesheet\"\n href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\">\n    <style>\n        li.active {background-color: pink;}\n    </style>\n\n</head>\n\n<body class=\"container\">\n--snip--\n```", "```\nUPDATE cat SET age = 5 WHERE id = 1\n```", "```\n<?php\nnamespace Mattsmithdev;\n\nclass Application\n{\n--snip--\n public function run(): void\n {\n $action = filter_input(INPUT_GET, 'action');\n $isPostSubmission = ($_SERVER['REQUEST_METHOD'] === 'POST');\n\n switch ($action)\n {\n        --snip--\n\n            case 'edit': ❶\n                $id = filter_input(INPUT_GET, 'id', FILTER_SANITIZE_NUMBER_INT);\n                if (empty($id)) {\n                    $this->defaultController->error(\n                          'error - To edit a product, an integer ID must be provided');\n                } else {\n                    $this->productController->edit($id);\n                }\n                break;\n\n            case 'processEdit': ❷\n                $id = filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT);\n $description = filter_input(INPUT_POST, 'description');\n                $price = filter_input(INPUT_POST, 'price', FILTER_SANITIZE_NUMBER_FLOAT,\n                                      FILTER_FLAG_ALLOW_FRACTION);\n\n                if ($isPostSubmission && !empty($id) && !empty($description)\n                                      && !empty($price)) {\n                    $this->productController->processEdit($id, $description, $price);\n                } else {\n                    $this->defaultController->error(\n                    'error - Missing data (or not POST method) when trying to update product');\n                }\n                break;\n\n default:\n $this->defaultController->homepage();\n }\n }\n}\n```", "```\n<?php\nnamespace Mattsmithdev;\n\nclass ProductController extends Controller\n{\n    private ProductRepository $productRepository;\n\n    --snip--\n\n    public function edit(int $id): void\n    {\n      ❶ $product = $this->productRepository->find($id);\n\n        $template = 'product/edit.xhtml.twig';\n        $args = [\n            'product' => $product\n        ];\n print $this->twig->render($template, $args);\n    }\n\n    public function processEdit(int $id, string $description,\n                                float $price): void\n    {\n      ❷ $this->productRepository->update($id, $description, $price);\n\n        $this->list($id);\n    }\n}\n```", "```\n<?php\nnamespace Mattsmithdev;\n\nclass ProductRepository\n{\n private ?\\PDO $connection = NULL;\n\n    --snip--\n\n    public function update(int $id, string $description, float $price): bool\n    {\n        if (NULL == $this->connection) return false;\n        $sql = 'UPDATE product SET description = :description, price = :price WHERE id=:id';\n\n        $stmt = $this->connection->prepare($sql);\n\n        $stmt->bindParam(':id', $id);\n        $stmt->bindParam(':description', $description);\n        $stmt->bindParam(':price', $price);\n\n        $success = $stmt->execute();\n\n        return $success;\n    }\n}\n```", "```\n--snip--\n{% block body %}\n <h1>Product list page</h1>\n    --snip--\n <li class=\"{{highlight}}\">\n\n id: {{product.id}}\n <br>\n description: {{product.description}}\n <br>\n price: $ {{product.price | number_format(2)}}\n <br>\n <a href=\"/?action=show&id={{product.id}}\"\n class=\"btn btn-secondary m-1\">Show</a>\n            <br>\n            <a href=\"/?action=edit&id={{product.id}}\"\n                class=\"btn btn-secondary m-1\">Edit</a>\n            --snip--\n{% endblock %}\n```", "```\n{% extends 'base.xhtml.twig' %}\n\n{% block title %}edit product page{% endblock %}\n\n{% block body %}\n    <h1>Edit Product page</h1>\n\n  ❶ <form method=\"POST\" action=\"/?action=processEdit\">\n        <p>\n            ID:\n          ❷ <input name=\"id\" value=\"{{product.id}}\" readonly>\n        </p>\n        <p>\n            Description:\n            <input name=\"description\" value=\"{{product.description}}\">\n        </p>\n        <p>\n        Price:\n        <input name=\"price\" value=\"{{product.price}}\" type=\"number\"\n               min=\"0\" step=\"0.01\">\n        </p>\n        <input type=\"submit\">\n    </form>\n{% endblock %}\n```", "```\n<?php\nnamespace Mattsmithdev;\n\nclass ProductController extends Controller\n{\n private ProductRepository $productRepository;\n\n --snip--\n\n    public function list(): void\n {\n $products = $this->productRepository->findAll();\n      ❶ $id = $this->getIdFromSession();\n\n $template = 'product/list.xhtml.twig';\n $args = [\n 'products' => $products,\n            'id' => $id\n ];\n print $this->twig->render($template, $args);\n }\n\n    private function getIdFromSession(): ?int\n    {\n        $id = NULL;\n      ❷ if (isset($_SESSION['id'])) {\n            $id = $_SESSION['id'];\n\n            // Remove it now that it's been retrieved\n            unset($_SESSION['id']);\n        }\n\n        return $id;\n    }\n}\n```", "```\n<?php\nnamespace Mattsmithdev;\n\nclass ProductController extends Controller\n{\n    private ProductRepository $productRepository;\n\n --snip--\n\n    public function delete(int $id): void\n    {\n        $this->productRepository->delete($id);\n\n      ❶ $location = '/?action=products';\n        header(\"Location: $location\");\n    }\n\n    public function deleteAll(): void\n    {\n        $this->productRepository->deleteAll();\n\n        $location = '/?action=products';\n        header(\"Location: $location\");\n    }\n --snip--\n\n    public function processCreate(string $description, float $price): void\n    {\n        $newObjectId =\n            $this->productRepository->insert($description, $price);\n\n      ❷ $_SESSION['id'] = $newObjectId;\n\n        $location = '/?action=products';\n        header(\"Location: $location\");\n    }\n\n    --snip--\n\n    public function processEdit(\n        int $id, string $description, float $price): void\n    {\n        $this->productRepository->update($id, $description, $price);\n\n        // Store ID of product to highlight in the SESSION\n      ❸ $_SESSION['id'] = $id;\n\n $location = '/?action=products';\n        header(\"Location: $location\");\n    }\n}\n```", "```\n<?php\nrequire_once __DIR__ . '/../vendor/autoload.php';\n\nsession_start();\n\nuse Mattsmithdev\\Application;\n$app = new Application();\n$app->run();\n}\n```"]