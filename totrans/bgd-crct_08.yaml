- en: '7'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: THE PARTY LIGHTS
  prefs: []
  type: TYPE_NORMAL
- en: THIS CIRCUIT CONNECTS MULTIPLE BLINKING LEDS TO MAKE STRING LIGHTS.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0048-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**THE CIRCUIT DIAGRAM**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![image](../images/f0049-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**THE PARTS LIST**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| **PART** | **VALUE** | **DESCRIPTION** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| R1 | 10 kΩ | Standard resistor |'
  prefs: []
  type: TYPE_TB
- en: '| R2 | 100 kΩ | Standard resistor |'
  prefs: []
  type: TYPE_TB
- en: '| R3 | 100 Ω | Standard resistor |'
  prefs: []
  type: TYPE_TB
- en: '| C1 | 4.7 μF | Polarized capacitor |'
  prefs: []
  type: TYPE_TB
- en: '| L1 to L6 | Red, yellow, or green | Standard LEDs; all must have about the
    same forward voltage (Vf) |'
  prefs: []
  type: TYPE_TB
- en: '| U1 | NE555 | 555 timer IC |'
  prefs: []
  type: TYPE_TB
- en: '**ABOUT THE CIRCUIT**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you want to make something cool for a party, this is the circuit for you.
    It’s a simple way to make several LEDs blink at the same time. By roping all the
    lights together on a single long wire, you can hang them in a window or use them
    to decorate a tree.
  prefs: []
  type: TYPE_NORMAL
- en: The circuit uses a *555 timer*, which is a classic integrated circuit that makes
    things turn on and off repeatedly; you can see the timer’s pinout in [Figure 7-1](ch07.xhtml#ch07fig1).
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0049-02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 7-1** 555 timer pinout'
  prefs: []
  type: TYPE_NORMAL
- en: Two resistors (R1 and R2) and a polarized capacitor (C1) set the blinking speed,
    while a third resistor (R3) determines the current that goes out to the LEDs.
  prefs: []
  type: TYPE_NORMAL
- en: '**COMMON MISTAKES**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If your circuit isn’t working correctly, you might have made one of these common
    mistakes:'
  prefs: []
  type: TYPE_NORMAL
- en: Connecting one or more of the LEDs the wrong way
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Connecting the 555 timer the wrong way
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Connecting the capacitor the wrong way around
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mixing up the pin numbers of the IC and connecting components to the wrong pin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'You can add or remove LEDs by changing the value of the resistor (R3). If each
    LED needs 10 mA and you want to use five LEDs, you need 5 × 10 mA, or 50 mA, through
    the resistor. You can use *Ohm’s law* to figure out the correct resistor value:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0050-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Ohm’s law states that the resistance is equal to the voltage across the resistor
    divided by the current flowing through it. In your five-LED example, that translates
    to the following equation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0050-02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: In this case, you are working with a 9 V battery and there’s about 2 V across
    the LEDs, so you get 7 V as the numerator. You divide that by the 50 mA calculated
    earlier to get 140 Ω of resistance. Note that your circuit will require less resistance
    as you add more LEDs and more resistance as you remove LEDs.
  prefs: []
  type: TYPE_NORMAL
- en: If you’re struggling with this circuit, you can ask questions and make comments
    through the book’s website at *[https://nostarch.com/circuits/](https://nostarch.com/circuits/)*.
  prefs: []
  type: TYPE_NORMAL
- en: '**NOTE**'
  prefs: []
  type: TYPE_NORMAL
- en: '*A 555 timer can give out only 100 to 200 mA in total. Check your chip’s datasheet
    for the exact value.*'
  prefs: []
  type: TYPE_NORMAL
- en: '**HOW THE CIRCUIT WORKS**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Figure 7-2](ch07.xhtml#ch07fig2) shows the inside of the 555 timer. The green
    box marked “flip-flop” is a simple memory device with two states: output high
    (flip) and output low (flop). It has two inputs, set (S) and reset (R), which
    either set the output (Q) to high or reset it to low. Q is always the opposite
    of ![image](../images/qbar.jpg).'
  prefs: []
  type: TYPE_NORMAL
- en: The two triangles you see are *comparators*. If the comparator input marked
    with + has a higher voltage than the one marked with –, the output is high; otherwise,
    the output is low.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/f0051-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**FIGURE 7-2** The inside of a 555 timer'
  prefs: []
  type: TYPE_NORMAL
- en: 'The three 5 kΩ resistors between V[CC] and Gnd are the reason for the name
    “555.” They divide the V[CC] voltage by three and set fixed voltages for each
    of the comparators: one-third of the V[CC] voltage goes to the positive (+) input
    of comparator 1, and two-thirds of the V[CC] voltage goes to the negative (–)
    input of comparator 2.'
  prefs: []
  type: TYPE_NORMAL
- en: If you look at the output (pin 3) in [Figure 7-2](ch07.xhtml#ch07fig2), you’ll
    see that it’s connected to the output of the flip-flop. This means that if the
    flip-flop is “set,” the output is high; otherwise, it is low. If you look at the
    input to the flip-flop, you’ll see that the two comparators handle setting and
    resetting the flip-flop. This means that the pins responsible for making the output
    turn on and off are pins 2 and 6.
  prefs: []
  type: TYPE_NORMAL
- en: Pin 2 is labeled *Trigger* and is responsible for setting the output high. When
    the voltage on pin 2 goes lower than one-third of V[CC], comparator 1 outputs
    high and sets the flip-flop, which in turn sets the output high. Pin 6 is labeled
    *Threshold*; when its voltage exceeds two-thirds of the V[CC], it is responsible
    for resetting the output to low.
  prefs: []
  type: TYPE_NORMAL
- en: Refer back to the circuit diagram at the beginning of this project. For this
    project’s circuit, pins 2 and 6 are connected to each other, so when the voltage
    on these pins goes high, the output goes low. When the voltage on these pins goes
    low, the output goes high. That means you need to switch the voltage on these
    pins between high and low in order to switch the output between low and high.
  prefs: []
  type: TYPE_NORMAL
- en: Pin 7 is very important for making this happen. It is labeled *Discharge*. Inside
    the chip, pin 7 is connected to a transistor, as shown in the figure. The transistor
    is controlled by ![image](../images/qbar.jpg), the opposite value of the output.
    This means that when the output is low, the transistor gets a high value and turns
    on, connecting pin 7 to ground. Otherwise, the transistor is off and leaves pin
    7 unconnected.
  prefs: []
  type: TYPE_NORMAL
- en: The moment we apply power to our circuit, capacitor C1 is completely discharged.
    That means pin 2 (Trigger) is low, which means pin 3 (the output) is high. This
    also means that pin 7 (Discharge) is not connected to anything internally.
  prefs: []
  type: TYPE_NORMAL
- en: Since C1 is connected to 9 V through R1 and R2, C1 will start to charge, and
    the voltage on its positive pin will begin to rise. This means the voltage on
    pin 6 (Threshold) is increasing, too. When the voltage becomes high enough on
    Threshold, the output changes from high to low, and pin 7 (Discharge) is connected
    internally to ground.
  prefs: []
  type: TYPE_NORMAL
- en: In this situation, when pin 7 is connected to ground, the capacitor will start
    to discharge (hence the pin name Discharge) through R2, down to ground at pin
    7\. So the voltage across the capacitor decreases and continues to do so until
    the voltage on pin 2 is so low that it “triggers.” When it triggers, the output
    switches from low to high, and pin 7 is disconnected from ground again.
  prefs: []
  type: TYPE_NORMAL
- en: Now we’re in the same situation as when we started, where the capacitor is charging
    so that the voltage over the capacitor increases. This process repeats indefinitely.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is a brief overview of each pin on the 555 timer:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Pin 1 Ground** This pin is connected to the negative side of the battery.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Pin 2 Trigger** When this pin goes low (less than one-third of V[CC]), the
    output goes high.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Pin 3 Output** The output voltage from the chip is around 1.5 V lower than
    V[CC] when high and around 0 V when low.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Pin 4 Reset** This pin resets the whole circuit. It’s an “inverted” pin,
    which means it resets when the pin goes low. This means the pin must be high normally
    so that the chip isn’t in a “reset” state.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Pin 5 Control Voltage** This pin is used to control the threshold voltage
    of the Threshold pin. This can be useful when you want to adjust the frequency
    of the circuit without changing the values of R1, R2, and C1\. For this circuit,
    you can leave it unconnected. Sometimes you’ll see this pin connected with a capacitor
    to ground; this is a way to keep any noise on it from influencing the frequency.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Pin 6 Threshold** This pin sets the output back to low when the voltage goes
    high (above two-thirds of V[CC]).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Pin 7 Discharge** This pin is unconnected when output is high, and it’s connected
    to ground when output is low.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Pin 8 V[CC] Supply** This is the positive power supply pin and can take a
    voltage between 5 and 15 V.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
