["```\nvoid blinkLED() \n{1     digitalWrite(13, HIGH); delay(1000);2     digitalWrite(13, LOW); delay(1000);3     digitalWrite(13, HIGH); delay(1000);4     digitalWrite(13, LOW); delay(1000);\n}\n```", "```\n// Project 9 - Creating a Function to Repeat an Action\n#define LED 13\n#define del 200\nvoid setup()\n{ pinMode(LED, OUTPUT);\n}\nvoid blinkLED() \n{ digitalWrite(LED, HIGH); delay(del); digitalWrite(LED, LOW); delay(del); digitalWrite(LED, HIGH); delay(del); digitalWrite(LED, LOW); delay(del);\n}\nvoid loop()\n{1   blinkLED(); delay(1000);\n}\n```", "```\nvoid blinkLED(int cycles, int del) \n{ for ( int z = 0 ; z < cycles ; z++ ) { digitalWrite(LED, HIGH); delay(del); digitalWrite(LED, LOW); delay(del); }\n}\n```", "```\n// Project 10 - Creating a Function to Set the Number of Blinks\n#define LED 13\nvoid setup()\n{ pinMode(LED, OUTPUT);\n}\nvoid blinkLED(int cycles, int del) \n{ for ( int z = 0 ; z < cycles ; z++ ) { digitalWrite(LED, HIGH); delay(del); digitalWrite(LED, LOW); delay(del); }\n}\nvoid loop()\n{1   blinkLED(12, 100);  delay(1000);\n}\n```", "```\nfloat convertTemp(float celsius)\n{ float fahrenheit = 0; fahrenheit = (1.8 * celsius) + 32; return fahrenheit;\n}\n```", "```\n float tempf = convertTemp(40);\n```", "```\n// Project 11 - Creating a Quick-Read Thermometer That Blinks the Temperature\n#define LED 13\nint blinks = 0;\nvoid setup()\n{ pinMode(LED, OUTPUT);\n}\nint checkTemp()\n{ float voltage  = 0; float celsius  = 0; float hotTemp  = 26; float coldTemp = 20; float sensor   = 0; int result; // read the temperature sensor and convert the result to degrees Celsius sensor = analogRead(0);       voltage = (sensor * 5000) / 1024; // convert raw sensor value to millivolts voltage = voltage - 500;          // remove voltage offset celsius = voltage / 10;           // convert millivolts to Celsius // act on temperature range if (celsius < coldTemp) { result = 2; }  else if (celsius >= coldTemp && celsius <= hotTemp) { result = 4; } else { result = 6;    // (celsius > hotTemp) } return result;\n}\nvoid blinkLED(int cycles, int del) \n{ for ( int z = 0 ; z < cycles ; z++ ) { digitalWrite(LED, HIGH); delay(del); digitalWrite(LED, LOW); delay(del); }\n}1 void loop()\n{ blinks = checkTemp(); blinkLED(blinks, 500); delay(2000);\n}\n```", "```\n Serial.begin(9600);\n```", "```\n Serial.print(\"Arduino for Everyone!\");\n```", "```\n Serial.println(\"Arduino for Everyone!\");\n```", "```\n Serial.println(results); \n```", "```\n Serial.print(results,4);\n```", "```\n// Project 12 - Displaying the Temperature in the Serial Monitor \nfloat celsius    = 0;\nfloat fahrenheit = 0;\nvoid setup()\n{ Serial.begin(9600);\n}1 void findTemps() \n{ float voltage = 0; float sensor  = 0; // read the temperature sensor and convert the result to degrees C and F sensor  = analogRead(0);       voltage = (sensor * 5000) / 1024;  // convert the raw sensor value to // millivolts voltage = voltage - 500;           // remove the voltage offset celsius = voltage / 10;            // convert millivolts to Celsius fahrenheit = (1.8 * celsius) + 32; // convert Celsius to Fahrenheit\n}2 void displayTemps() { Serial.print(\"Temperature is \"); Serial.print(celsius, 2); Serial.print(\" deg. C / \"); Serial.print(fahrenheit, 2); Serial.println(\" deg. F\");   // use .println here so the next reading starts on a new line\n}\nvoid loop()\n{ findTemps(); displayTemps(); delay(1000);\n}\n```", "```\n Serial.println(\"now in findTemps()\");\n```", "```\nint a = 0; // an integer\nwhile ( a < 10 )\n{ a = a + 1; delay(1000);\n}\n```", "```\nint a = 0; // an integer\ndo\n{ delay(1000); a = a + 1;\n} while ( a < 100 );\n```", "```\n// Project 13 - Multiplying a Number by Two\nint number;\nvoid setup()\n{ Serial.begin(9600);\n}\nvoid loop()\n{ number = 0;     // set the variable to zero, ready for a new read Serial.flush(); // clear any \"junk\" out of the serial buffer before waiting1   while (Serial.available() == 0) { // do nothing until something enters the serial buffer } 2   while (Serial.available() > 0) { number = Serial.read() - '0'; \n// read the number in the serial buffer and \n// remove the ASCII text offset for zero: '0' } // Show me the number! Serial.print(\"You entered: \"); Serial.println(number); Serial.print(number); Serial.print(\" multiplied by two is \"); number = number * 2; Serial.println(number);\n}\n```", "```\n// Project 14 - Using long Variables\nlong number = 0;\nlong a = 0;void setup()\n{ Serial.begin(9600);\n}\nvoid loop()\n{ number = 0;     // zero the incoming number ready for a new read Serial.flush(); // clear any \"junk\" out of the serial buffer before waiting while (Serial.available() == 0) { // do nothing until something comes into the serial buffer-  // when something does come in, Serial.available will return how many // characters are waiting in the buffer to process } // one character of serial data is available, begin calculating while (Serial.available() > 0) { // move any previous digit to the next column on the left;  // in other words, 1 becomes 10 while there is data in the buffer number = number * 10;  // read the next number in the buffer and subtract the character 0  // from it to convert it to the actual integer number a = Serial.read() - '0'; // add this value a into the accumulating number number = number + a; // allow a short delay for more serial data to come into Serial.available delay(5); } Serial.print(\"You entered: \"); Serial.println(number); Serial.print(number); Serial.print(\" multiplied by two is \"); number = number * 2; Serial.println(number);\n}\n```"]