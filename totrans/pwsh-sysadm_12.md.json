["```\nPS> Get-Content -Path ./Employees.csv –Raw\n\nFirst Name,Last Name,Department,Manager\nAdam,Bertram,IT,Miranda Bertram\nBarack,Obama,Executive Office,Michelle Obama\nMiranda,Bertram,Executive Office\nMichelle,Obama,Executive Office\n```", "```\nPS> Get-Content ./Employees.csv -Raw | Get-Member\n\n   TypeName: System.String\n   --snip--\n```", "```\nPS> Import-Csv -Path ./Employees.csv\n\nFirst Name Last Name  Department        Manager\n---------- ---------  ----------        -------\nAdam       Bertram    IT                Miranda Bertram\nBarack     Obama      Executive Office  Michelle Obama\nMiranda    Bertram    Executive Office\nMichelle   Obama      Executive Office\n\nPS> Import-Csv -Path ./Employees.csv | Get-Member\n\n   TypeName: System.Management.Automation.PSCustomObject\n\nPS> $firstCsvRow = Import-Csv -Path ./Employees.csv | Select-Object –First\n1 \nPS> $firstCsvRow | Select-Object -ExpandProperty 'First Name'\nAdam\n```", "```\nPS> Import-Csv -Path ./Employees.csv | Where-Object { $_.'Last Name' -eq 'Bertram' }\n\nFirst Name Last Name Department       Manager\n---------- --------- ----------       -------\nAdam       Bertram   IT               Miranda Bertram\nMiranda    Bertram   Executive Office\n```", "```\nPS> Import-Csv -Path ./Employees.csv | Where-Object {$_.Department -eq 'Executive Office' }\n\nFirst Name Last Name Department       Manager\n---------- --------- ---------        --------\nBarack     Obama     Executive Office Michelle Obama\nMiranda    Bertram   Executive Office\nMichelle   Obama     Executive Office\n```", "```\nPS> (Get-Content ./Employees.csv -Raw).replace(',',\"`t\") | Set-Content ./Employees.csv\nPS> Get-Content ./Employees.csv –Raw\nFirst Name  Last Name   Department  Manager\nAdam    Bertram IT  Miranda Bertram\nBarack  Obama   Executive Office    Michelle Obama\nMiranda Bertram Executive Office\nMichelle    Obama   Executive Office\n```", "```\nPS> Import-Csv -Path ./Employees.csv -Delimiter \"`t\"\n\nFirst Name Last Name Department       Manager\n---------- --------- ----------       -------\nAdam       Bertram   IT               Miranda Bertram\nBarack     Obama     Executive Office Michelle Obama\nMiranda    Bertram   Executive Office\nMichelle   Obama     Executive Office\n```", "```\nPS> Import-Csv -Path ./Employees.csv -Delimiter \"`t\" \n-Header 'Employee FName','Employee LName','Dept','Manager'\n\nEmployee FName Employee LName Dept             Manager\n-------------- -------------- ----             -------\nFirst Name     Last Name      Department       Manager\nAdam           Bertram        IT               Miranda Bertram\nBarack         Obama          Executive Office Michelle Obama\nMiranda        Bertram        Executive Office\nMichelle       Obama          Executive Office\n```", "```\nPS> Get-Process | Select-Object -Property Name,Company,Description\n\nName                 Company                      Description\n----                 -------                      -----------\nApplicationFrameHost Microsoft Corporation        Application Frame Host\ncoherence            Parallels International GmbH Parallels Coherence service\ncoherence            Parallels International GmbH Parallels Coherence service\ncoherence            Parallels International GmbH Parallels Coherence service\ncom.docker.proxy\ncom.docker.service   Docker Inc.                 \nDocker.Service\n--snip--\n```", "```\nPS> Get-Process | Select-Object -Property Name,Company,Description | \nExport-Csv -Path C:\\Processes.csv –NoTypeInformation\nPS> Get-Content -Path C:\\Processes.csv\n\"Name\",\"Company\",\"Description\"\n\"ApplicationFrameHost\",\"Microsoft Corporation\",\"Application Frame Host\"\n\"coherence\",\"Parallels International GmbH\",\"Parallels Coherence service\"\n\"coherence\",\"Parallels International GmbH\",\"Parallels Coherence service\"\n\"coherence\",\"Parallels International GmbH\",\"Parallels Coherence service\"\n\"com.docker.proxy\",,\n\"com.docker.service\",\"Docker Inc.\",\"Docker.Service\"\n```", "```\nPS> Get-Content -Path ./IPAddresses.csv\n\"192.168.0.1\",\"IT\"\n\"192.168.0.2\",\"Accounting\"\n\"192.168.0.3\",\"HR\"\n\"192.168.0.4\",\"IT\"\n\"192.168.0.5\",\"Accounting\"\n--snip--\n```", "```\n$rows = Import-Csv -Path C:\\IPAddresses.csv\n```", "```\nPS> Test-Connection -ComputerName $row[0].IPAddress -Count 1 –Quiet\nPS> (Resolve-DnsName -Name $row[0].IPAddress -ErrorAction Stop).Name\n```", "```\nforeach ($row in $rows) {\n    Test-Connection -ComputerName $row.IPAddress -Count 1 –Quiet\n    (Resolve-DnsName -Name $row.IPAddress -ErrorAction Stop).Name\n}\n```", "```\n$rows = Import-Csv -Path C:\\IPAddresses.csv\nforeach ($row in $rows) {\n    try { ❶\n        $output = @{ ❷\n            IPAddress  = $row.IPAddress\n            Department = $row.Department\n            IsOnline   = $false\n            HostName   = $null\n            Error      = $null\n        }\n        if (Test-Connection -ComputerName $row.IPAddress -Count 1 -Quiet) { ❸\n            $output.IsOnline = $true\n        }\n        if ($hostname = (Resolve-DnsName -Name $row.IPAddress -ErrorAction Stop).Name) { ❹\n            $output.HostName = $hostName\n        }\n    } catch {\n        $output.Error = $_.Exception.Message ❺\n    } finally {\n        [pscustomobject]$output ❻\n    }\n}\n```", "```\nHostName   :\nError      : 1.0.168.192.in-addr.arpa : DNS name does not exist\nIsOnline   : True\nIPAddress  : 192.168.0.1\nDepartment : HR\n\nHostName   :\nError      : 2.0.168.192.in-addr.arpa : DNS name does not exist\nIsOnline   : True\nIPAddress  : 192.168.0.2\nDepartment : Accounting\n--snip--\n```", "```\nPS> [pscustomobject]$output | \nExport-Csv -Path C:\\DeviceDiscovery.csv -Append \n-NoTypeInformation\n```", "```\nPS> Import-Csv -Path C:\\DeviceDiscovery.csv\n\nHostName   :\nError      : 1.0.168.192.in-addr.arpa : DNS name does not exist\nIsOnline   : True\nIPAddress  : 192.168.0.1\nDepartment : HR\n\nHostName   :\nError      :\nIsOnline   : True\nIPAddress  : 192.168.0.2\nDepartment : Accounting\n```", "```\nPS> Get-Process | Export-Excel .\\Processes.xlsx -WorksheetName 'Worksheet2'\nPS> Get-Process | Export-Excel .\\Processes.xlsx -WorksheetName 'Worksheet3'\n```", "```\nPS> Import-Excel -Path .\\Processes.xlsx\n\nName                       : ApplicationFrameHost\nSI                         : 1\nHandles                    : 315\nVM                         : 2199189057536\nWS                         : 26300416\nPM                         : 7204864\nNPM                        : 17672\nPath                       : C:\\WINDOWS\\system32\\ApplicationFrameHost.exe\nCompany                    : Microsoft Corporation\nCPU                        : 0.140625\n--snip--\n```", "```\nPS> Get-ExcelSheetInfo -Path .\\Processes.xlsx\n\nName       Index  Hidden  Path\n----       -----  ------  ----\nSheet1         1  Visible C:\\Users\\adam\\Processes.xlsx\nWorksheet2     2  Visible C:\\Users\\adam\\Processes.xlsx\nWorksheet3     3  Visible C:\\Users\\adam\\Processes.xlsx\n```", "```\n$excelSheets = Get-ExcelSheetInfo -Path .\\Processes.xlsx\nForeach ($sheet in $excelSheets) {\n $workSheetName = $sheet.Name\n $sheetRows = Import-Excel -Path .\\Processes.xlsx -WorkSheetName\n $workSheetName \n  ❶ $sheetRows | Select-Object -Property *,@{'Name'='Worksheet';'Expression'={ $workSheetName }\n}\n```", "```\nPS> Get-Process | \nSelect-Object -Property *,@{Name = 'Timestamp';Expression = { Get-Date -Format\n'MM-dd-yy hh:mm:ss' }} | \nExport-Excel .\\Processes.xlsx -WorksheetName 'ProcessesOverTime'\n```", "```\nPS> Get-Process | \nSelect-Object -Property *,@{Name = 'Timestamp';Expression = { Get-Date -Format\n'MM-dd-yy hh:mm:ss' }} | \nExport-Excel .\\Processes.xlsx -WorksheetName 'ProcessesOverTime' -Append\n```", "```\nPS> Get-Service | \nSelect-Object -Property Name,Status,@{Name = 'Timestamp';Expression = { Get-Date -Format 'MM-dd-yy hh:mm:ss' }} | \nExport-Excel .\\ServiceStates.xlsx -WorksheetName 'Services'\n```", "```\nPS> Import-Excel .\\ServiceStates.xlsx -WorksheetName 'Services' | \nExport-Excel -Path .\\ServiceStates.xlsx -Show -IncludePivotTable -PivotRows Name,Timestamp\n-PivotData @{Timestamp = 'count'} -PivotColumns Status\n```", "```\n{\n    \"Employees\": [\n        {\n            \"FirstName\": \"Adam\",\n            \"LastName\": \"Bertram\",\n            \"Department\": \"IT\",\n            \"Title\": \"Awesome IT Professional\"\n        },\n        {\n            \"FirstName\": \"Bob\",\n            \"LastName\": \"Smith\",\n            \"Department\": \"HR\",\n            \"Title\": \"Crotchety HR guy\"\n        }\n    ]\n}\n```", "```\nPS> Get-Content -Path .\\Employees.json -Raw | ConvertFrom-Json\n\nEmployees\n---------\n{@{FirstName=Adam; LastName=Bertram; Department=IT;\nTitle=Awesome IT Professional}, @{FirstName=Bob;\nLastName=Smith; Department=HR; Title=Crotchety H...\n```", "```\nPS> (Get-Content -Path .\\Employees.json -Raw | ConvertFrom-Json).Employees\n\nFirstName LastName Department Title\n--------- -------- ---------- -----\nAdam      Bertram  IT         Awesome IT Professional\nBob       Smith    HR         Crotchety HR guy\n```", "```\nPS> Import-Csv -Path .\\Employees.csv -Delimiter \"`t\"\n\nFirst Name Last Name Department       Manager\n---------- --------- ----------       -------\nAdam       Bertram   IT               Miranda Bertram\nBarack     Obama     Executive Office Michelle Obama\nMiranda    Bertram   Executive Office\nMichelle   Obama     Executive Office\n```", "```\nPS> Import-Csv -Path .\\Employees.csv -Delimiter \"`t\" | ConvertTo-Json\n[\n    {\n        \"First Name\":  \"Adam\",\n        \"Last Name\":  \"Bertram\",\n        \"Department\":  \"IT\",\n        \"Manager\":  \"Miranda Bertram\"\n    },\n    {\n        \"First Name\":  \"Barack\",\n        \"Last Name\":  \"Obama\",\n        \"Department\":  \"Executive Office\",\n        \"Manager\":  \"Michelle Obama\"\n    },\n    {\n        \"First Name\":  \"Miranda\",\n        \"Last Name\":  \"Bertram\",\n        \"Department\":  \"Executive Office\",\n        \"Manager\":  null\n    },\n    {\n        \"First Name\":  \"Michelle\",\n        \"Last Name\":  \"Obama\",\n        \"Department\":  \"Executive Office\",\n        \"Manager\":  null\n    }\n]\n```", "```\nPS> Import-Csv -Path .\\Employees.csv -Delimiter \"`t\" | ConvertTo-Json –Compress\n[{\"First Name\":\"Adam\",\"Last\nName\":\"Bertram\",\"Department\":\"IT\",\"Manager\":\"Miranda\nBertram\"},{\"First Name\":\"Barack\",\"Last\nName\":\"Obama\",\"Department\":\"Executive Office\",\"Manager\":\"Michelle Obama\"},{\"First\nName\":\"Miranda\",\"Last Name\":\"Bertram\",\"Department\":\"Executive\nOffice\",\"Manager\":null},{\"First Name\":\"Michelle\",\n\"Last Name\":\"Obama\",\"Department\":\"Executive\nOffice\",\"Manager\":null}]\n```", "```\nPS> $result = Invoke-WebRequest -Uri 'http://api.postcodes.io/random/postcodes'\nPS> $result.Content\n{\"status\":200,\"result\":{\"postcode\":\"IP12\n2FE\",\"quality\":1,\"eastings\":641878,\"northings\":250383,\"country\n:\"England\",\"nhs_ha\":\"East of England\",\"longitude\":\n1.53013518866685,\"latitude\":52.0988661618569,\"european_elector\nal_region\":\"Eastern\",\"primary_care_trust\":\"Suffolk\",\"region\":\"\nEast of England\",\"lsoa\":\"Suffo\nlk Coastal 007C\",\"msoa\":\"Suffolk Coastal\n007\",\"incode\":\"2FE\",\"outcode\":\"IP12\",\"parliamentary_constituen\ncy\":\"Suffolk Coastal\",\"admin_district\":\"Suffolk Coa\nstal\",\"parish\":\"Orford\",\"admin_county\":\"Suffolk\",\"admin_ward\":\n\"Orford & Eyke\",\"ccg\":\"NHS Ipswich and East\nSuffolk\",\"nuts\":\"Suffolk\",\"codes\":{\"admin_distri\nct\":\"E07000205\",\"admin_county\":\"E10000029\",\"admin_ward\":\"E0501\n449\",\"parish\":\"E04009440\",\"parliamentary_constituency\":\"E14000\n81\",\"ccg\":\"E38000086\",\"nuts\"\n:\"UKH14\"}}}\n```", "```\nPS> $result = Invoke-WebRequest -Uri 'http://api.postcodes.io/random/postcodes'\nPS> $result.Content | ConvertFrom-Json\n\nstatus result\n------ ------\n   200 @{postcode=DE7 9HY; quality=1; eastings=445564;\n       northings=343166; country=England; nhs_ha=East Midlands;\n       longitude=-1.32277519314161; latitude=...\n\nPS> $result = Invoke-WebRequest -Uri 'http://api.postcodes.io/random/postcodes'\nPS> $contentObject = $result.Content | ConvertFrom-Json\nPS> $contentObject.result\n\npostcode                   : HA7 2SR\nquality                    : 1\neastings                   : 516924\nnorthings                  : 191681\ncountry                    : England\nnhs_ha                     : London\nlongitude                  : -0.312779792807334\nlatitude                   : 51.6118279308721\neuropean_electoral_region  : London\nprimary_care_trust         : Harrow\nregion                     : London\nlsoa                       : Harrow 003C\nmsoa                       : Harrow 003\nincode                     : 2SR\noutcode                    : HA7\nparliamentary_constituency : Harrow East\nadmin_district             : Harrow\nparish                     : Harrow, unparished area\nadmin_county               :\nadmin_ward                 : Stanmore Park\nccg                        : NHS Harrow\nnuts                       : Harrow and Hillingdon\ncodes                      : @{admin_district=E09000015;\n                             admin_county=E99999999; admin_ward=E05000303;\n                             parish=E43000205;\n```", "```\nPS> Invoke-RestMethod –Uri 'http://api.postcodes.io/random/postcodes'\n\nstatus result\n------ ------\n   200 @{postcode=NE23 6AA; quality=1; eastings=426492;\n       northings=576264; country=England; nhs_ha=North East;\n       longitude=-1.5865793029774; latitude=55...\n```", "```\nPS> (Invoke-RestMethod –Uri 'http://api.postcodes.io/random/postcodes').result\n\npostcode                   : SY11 4BL\nquality                    : 1\neastings                   : 332201\nnorthings                  : 331090\ncountry                    : England\nnhs_ha                     : West Midlands\nlongitude                  : -3.00873643515338\nlatitude                   : 52.8729967314029\neuropean_electoral_region  : West Midlands\nprimary_care_trust         : Shropshire County\nregion                     : West Midlands\nlsoa                       : Shropshire 011E\nmsoa                       : Shropshire 011\nincode                     : 4BL\noutcode                    : SY11\nparliamentary_constituency : North Shropshire\nadmin_district             : Shropshire\nparish                     : Whittington\nadmin_county               :\nadmin_ward                 : Whittington\nccg                        : NHS Shropshire\nnuts                       : Shropshire CC\ncodes                      : @{admin_district=E06000051;\n                             admin_county=E99999999; admin_ward=E05009287;\n                             parish=E04012256;\n```"]