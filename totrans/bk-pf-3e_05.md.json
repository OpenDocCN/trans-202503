["```\n    webserver = \"{ 192.0.2.227, 2001:db8::baad:f00d:f17 }\"\n    ```", "```\n    webports = \"{ http, https }\"\n    ```", "```\n    emailserver = \"{ 192.0.2.225, 2001:db8::baad:f00d:f117 }\"\n    ```", "```\n    email = \"{ smtp, pop3, imap, imap3, imaps, pop3s }\"\n    ```", "```\n    nameservers = \"{ 192.0.2.221, 192.0.2.223 , \\\n                          2001:db8::baad:f00d:fbaa, 2001:db8::baad:f00d:ff00 }\"\n    ```", "```\npass proto tcp to $webserver port $webports\n```", "```\npass proto tcp to $emailserver port $email\n```", "```\npass log proto tcp from $emailserver to port smtp\n```", "```\npass proto { tcp, udp } to $nameservers port domain\n```", "```\next_if = \"ep0\" # macro for external interface - use tun0 or pppoe0 for PPPoE\nint_if = \"ep1\" # macro for internal interface\nlocalnet = $int_if:network\nwebserver = \"{ 192.0.2.227, 2001:db8::baad:f00d:f17 }\"\nwebports = \"{ http, https }\"\nemailserver = \"{ 192.0.2.225, 2001:db8::baad:f00d:f117 }\"\nemail = \"{ smtp, pop3, imap, imap3, imaps, pop3s }\"\nnameservers = \"{ 192.0.2.221, 192.0.2.223, \\\n                 2001:db8::baad:f00d:fbaa, 2001:db8::baad:f00d:ff00 }\"\nclient_out = \"{ ssh, domain, pop3, auth, nntp, http,\\\n                https, cvspserver, 2628, 5999, 8000, 8080 }\"\nudp_services = \"{ domain, ntp }\"\nicmp_types = \"{ echoreq, unreach }\"\nicmp6_types = \"{ echoreq unreach timex paramprob }\"\nblock all\npass quick proto { tcp, udp } from $localnet to port $udp_services\npass log inet proto icmp all icmp-type $icmp_types\npass inet6 proto icmp6 icmp6-type $icmp6_types\npass proto tcp from $localnet to port $client_out\npass proto { tcp, udp } to $nameservers port domain\npass proto tcp to $webserver port $webports\npass log proto tcp to $emailserver port $email\npass log proto tcp from $emailserver to port smtp\n```", "```\npass in on $ext_if proto { tcp, udp } to $nameservers port domain\npass in on $int_if proto { tcp, udp } from $localnet to $nameservers \\\n     port domain\npass out on $dmz_if proto { tcp, udp } to $nameservers port domain\npass in on $ext_if proto tcp to $webserver port $webports\npass in on $int_if proto tcp from $localnet to $webserver port $webports\npass out on $dmz_if proto tcp to $webserver port $webports\npass in log on $ext_if proto tcp to $mailserver port smtp\npass in log on $int_if proto tcp from $localnet to $mailserver \\\n     port $email\npass out log on $dmz_if proto tcp to $mailserver port smtp\npass in on $dmz_if from $mailserver to port smtp\npass out log on $ext_if proto tcp from $mailserver to port smtp\n```", "```\ntable <webpool> persist { 192.0.2.214, 192.0.2.215, 192.0.2.216, 192.0.2.217 }\n```", "```\nmatch in on $ext_if protp tcp to $webserver port $webports \\\n        rdr-to <webpool> round-robin\n```", "```\nrdr on $ext_if proto tcp to $webserver port $webports -> <webpool> round-robin\n```", "```\nmatch in on $ext_if proto tcp to $webserver port $webports \\\n        rdr-to <webpool> random\n```", "```\nanchor \"relayd/*\"\n```", "```\nrdr-anchor \"relayd/*\" anchor \"relayd/*\"\n```", "```\ntable webpool persist { 192.0.2.214, 192.0.2.215, 192.0.2.216, 192.0.2.217 }\n```", "```\nmatch in on $ext_if proto tcp to $webserver port $webports \\\n         rdr-to <webpool> round-robin\n```", "```\nrdr on $ext_if proto tcp to $webserver port $webports -> <webpool> round-robin\n```", "```\nweb1=\"192.0.2.214\"\nweb2=\"192.0.2.215\"\nweb3=\"192.0.2.216\"\nweb4=\"192.0.2.217\"\nwebserver=\"192.0.2.227\"\nsorry_server=\"192.0.2.200\"\n```", "```\ninterval 5 # check hosts every 5 seconds\n```", "```\ntable <webpool> { $web1, $web2, $web3, $web4 }\n```", "```\ntable <sorry> { $sorry_server }\n```", "```\nredirect www {\n       listen on $webserver port 80 sticky-address\n       tag relayd\n       forward to <webpool> check http \"/status.html\" code 200 timeout 300\n       forward to <sorry> timeout 300 check icmp\n}\n```", "```\nrelayd_flags=\"\" # for normal use: \"\"\n```", "```\n$ **sudo relayd -n**\n```", "```\n**$ sudo pfctl -f /etc/pf.conf**\n**$ sudo sh /etc/rc.d/relayd start**\n```", "```\n**$ ps waux | grep relayd**\n_relayd   9153  0.0   0.1  776  1424  ??  S   7:28PM   0:00.01 relayd: pf update engine\n(relayd)\n_relayd   6144  0.0   0.1  776  1440  ??  S   7:28PM   0:00.02 relayd: host check engine\n(relayd)\nroot      3217  0.0   0.1  776  1416  ??  Is  7:28PM   0:00.01 relayd: parent (relayd)\n```", "```\n**$ sudo relayctl show summary**\nId      Type            Name                                 Avlblty Status\n1       redirect        www                                          active\n1       table           webpool:80                                   active (2 hosts)\n1       host            192.0.2.214                          100.00% up\n2       host            192.0.2.215                          0.00%   down\n3       host            192.0.2.216                          100.00% up\n4       host            192.0.2.217                          0.00%   down\n2       table           sorry:80                                     active (1 hosts)\n5       host            127.0.0.1                            100.00% up\n```", "```\n**$ sudo relayctl show hosts**\nId      Type            Name                              Avlblty Status\n1       table           webpool:80                                active (3 hosts)\n1       host            192.0.2.214                       100.00% up\n                        total: 11340/11340 checks\n2       host            192.0.2.215                       0.00%   down\n                        total: 0/11340 checks, error: tcp connect failed\n3       host            192.0.2.216                       100.00% up\n                        total: 11340/11340 checks\n4       host            192.0.2.217                       0.00%   down\n                        total: 0/11340 checks, error: tcp connect failed\n2       table           sorry:80                                  active (1 hosts)\n5       host            127.0.0.1                         100.00% up\n                        total: 11340/11340 checks\n```", "```\n$ **sudo relayctl host disable 192.0.2.217**\n```", "```\n$ **sudo relayctl host enable 192.0.2.217**\n```", "```\nhttp protocol \"httpssl\" {\n          header append \"$REMOTE_ADDR\" to \"X-Forwarded-For\"\n          header append \"$SERVER_ADDR:$SERVER_PORT\" to \"X-Forwarded-By\"\n          header change \"Keep-Alive\" to \"$TIMEOUT\"\n          query hash \"sessid\"\n          cookie hash \"sessid\"\n          path filter \"*command=*\" from \"/cgi-bin/index.cgi\"\n\n          ssl { sslv2, ciphers \"MEDIUM:HIGH\" }\n          tcp { nodelay, sack, socket buffer 65536, backlog 128 }\n}\n```", "```\nrelay wwwssl {\n          # Run as a SSL accelerator\n          listen on $webserver port 443 ssl\n          protocol \"httpssl\"\n          table <webhosts> loadbalance check ssl\n}\n```", "```\nwebserver = \"192.168.2.7\"\nwebports = \"{ http, https }\"\nemailserver = \"192.168.2.5\"\nemail = \"{ smtp, pop3, imap, imap3, imaps, pop3s }\"\n```", "```\nmatch in on $ext_if proto tcp to $ext_if port $webports rdr-to $webserver\nmatch in on $ext_if proto tcp to $ext_if port $email rdr-to $emailserver\n\npass proto tcp to $webserver port $webports\npass proto tcp to $emailserver port $email\npass proto tcp from $emailserver to port smtp\n```", "```\npass in on $ext_if inet proto tcp to $ext_if port $webports rdr-to $webserver tag RDR\npass in on $ext_if inet proto tcp to $ext_if port $email rdr-to $mailserver tag RDR\npass on $int_if inet tagged RDR\n```", "```\nwebserver = \"192.168.2.7\"\nwebports = \"{ http, https }\"\nemailserver = \"192.168.2.5\"\nemail = \"{ smtp, pop3, imap, imap3, imaps, pop3s }\"\n\nrdr on $ext_if proto tcp to $ext_if port $webports -> $webserver\nrdr on $ext_if proto tcp to $ext_if port $email -> $emailserver\n\npass proto tcp to $webserver port $webports\npass proto tcp to $emailserver port $email\npass proto tcp from $emailserver to any port smtp\n```", "```\npass in on $ext_if inet proto tcp to $ext_if port $webports rdr-to $webserver\npass in on $int_if inet proto tcp from $localnet to $webserver port $webports\npass out on $dmz_if proto tcp to $webserver port $webports\npass in log on $ext_if inet proto tcp to $ext_if port $email rdr-to $mailserver\npass in log on $int_if proto tcp from $localnet to $mailserver port $email\npass out log on $dmz_if proto tcp to $mailserver port smtp\npass in on $dmz_if from $mailserver to port smtp\npass out log on $ext_if proto tcp from $mailserver to port smtp\n```", "```\npass in on $ext_if proto tcp to $webserver port $webports\npass in on $int_if proto tcp from $localnet to $webserver port $webports\npass out on $dmz_if proto tcp to $webserver port $webports\npass in log on $ext_if proto tcp to $mailserver port smtp\npass in log on $int_if proto tcp from $localnet to $mailserver port $email\npass out log on $dmz_if proto tcp to $mailserver port smtp\npass in on $dmz_if from $mailserver to port smtp\npass out log on $ext_if proto tcp from $mailserver to port smtp\n```", "```\ntable <webpool> persist { 192.168.2.7, 192.168.2.8, 192.168.2.9, 192.168.2.10 }\n```", "```\npass in on $ext_if inet proto tcp to $ext_if port $webports rdr-to <webpool> round-robin\n```", "```\nrdr on $ext_if proto tcp to $ext_if port $webports -> <webpool> round-robin\n```", "```\next_if = \"re0\" # macro for external interface - use tun0 or pppoe0 for PPPoE\nint_if = \"re1\" # macro for internal interface\nlocalnet = $int_if:network\n# for ftp-proxy\nproxy = \"127.0.0.1\"\nicmp_types = \"{ echoreq, unreach }\"\nclient_out = \"{ ssh, domain, pop3, auth, nntp, http, https, \\\n                446, cvspserver, 2628, 5999, 8000, 8080 }\"\nudp_services = \"{ domain, ntp }\"\nwebserver = \"192.168.2.7\"\nwebports = \"{ http, https }\"\nemailserver = \"192.168.2.5\"\nemail = \"{ smtp, pop3, imap, imap3, imaps, pop3s }\"\n# NAT: ext_if IP address could be dynamic, hence ($ext_if)\nmatch out on $ext_if from $localnet nat-to ($ext_if)\nblock all\n# for ftp-proxy: Remember to put the following line, uncommented, in your\n# /etc/rc.conf.local to enable ftp-proxy:\n# ftpproxy_flags=\"\"\nanchor \"ftp-proxy/*\"\npass in quick proto tcp to port ftp rdr-to $proxy port 8021\npass out proto tcp from $proxy to port ftp\npass quick inet proto { tcp, udp } to port $udp_services\npass proto tcp to port $client_out\n# allow out the default range for traceroute(8):\n# \"base+nhops*nqueries-1\" (33434+64*3-1)\npass out on $ext_if inet proto udp to port 33433 >< 33626 keep state\n# make sure icmp passes unfettered\npass inet proto icmp icmp-type $icmp_types from $localnet\npass inet proto icmp icmp-type $icmp_types to $ext_if\npass in on $ext_if inet proto tcp to $ext_if port $webports rdr-to $webserver\npass in on $ext_if inet proto tcp to $ext_if port $email rdr-to $mailserver\npass on $int_if inet proto tcp to $webserver port $webports\npass on $int_if inet proto tcp to $mailserver port $email\n```", "```\nrdr on $ext_if proto tcp to $ext_if port $webports -> $webserver\nrdr on $ext_if proto tcp to $ext_if port $email -> $emailserver\n\npass proto tcp to $webserver port $webports\npass proto tcp to $emailserver port $email\npass proto tcp from $emailserver to any port smtp\n```", "```\npass in on $ext_if inet proto tcp to $ext_if port $webports rdr-to $webserver\npass in on $ext_if inet proto tcp to $ext_if port $email rdr-to $mailserver\npass in log on $int_if inet proto tcp from $int_if:network to $ext_if \\\nport $webports rdr-to $webserver\npass in log on $int_if inet proto tcp from $int_if:network to $ext_if \\\nport $email rdr-to $mailserver\nmatch out log on $int_if proto tcp from $int_if:network to $webserver \\\nport $webports nat-to $int_if\npass on $int_if inet proto tcp to $webserver port $webports\nmatch out log on $int_if proto tcp from $int_if:network to $mailserver \\\nport $email nat-to $int_if\npass on $int_if inet proto tcp to $mailserver port $email\n```", "```\nrdr on $int_if proto tcp from $localnet to $ext_if port $webports -> $webserver\nrdr on $int_if proto tcp from $localnet to $ext_if port $email -> $emailserver\nno nat on $int_if proto tcp from $int_if to $localnet\nnat on $int_if proto tcp from $localnet to $webserver port $webports -> $int_if\nnat on $int_if proto tcp from $localnet to $emailserver port $email -> $int_if\n```", "```\n# ifconfig sis2 group untrusted\n```", "```\npass in on untrusted to any port $webports\npass out on egress to any port $webports\n```", "```\nuntrusted = \"{ ath0 ath1 wi0 ep0 }\"\negress = \"sk0\"\n```", "```\nwifi = \"{ 10.0.0.115, 10.0.0.125, 10.0.0.135, 10.0.0.145 }\"\npass in on $int_if from $wifi to $wifi_allowed port $wifi_ports tag wifigood\npass out on $ext_if tagged wifigood\n```", "```\n$ **sudo ifconfig bridge0 create**\n```", "```\n$ **sudo ifconfig bridge0 add ep0 add ep1 blocknonip ep0 blocknonip ep1 up**\n```", "```\nup\n```", "```\nup\n```", "```\nadd ep0 add ep1 blocknonip ep0 blocknonip ep1 up\n```", "```\ndevice if_bridge\n```", "```\nif_bridge_load=\"YES\"\n```", "```\n$ **sudo ifconfig bridge0 create**\n```", "```\n$ sudo sysctl net.link.bridge\nnet.link.bridge.ipfw: 0\nnet.link.bridge.pfil_member: 1\nnet.link.bridge.pfil_bridge: 1\nnet.link.bridge.ipfw_arp: 0\nnet.link.bridge.pfil_onlyip: 1\n```", "```\n$ **sudo ifconfig bridge0 addm ep0 addm ep1 up**\n```", "```\nifconfig_ep0=\"up\"\nifconfig_ep1=\"up\"\ncloned_interfaces=\"bridge0\"\nifconfig_bridge0=\"addm ep0 addm ep1 up\"\n```", "```\noptions      BRIDGE_IPF #      bridge uses IP/IPv6 pfil hooks too\n```", "```\n$ **sudo ifconfig bridge0 create**\n```", "```\n$ **sudo brconfig bridge0 add ep0 add ep1 up**\n```", "```\n$ **sudo brconfig bridge0 ipf**\n```", "```\nup\n```", "```\nup\n```", "```\ncreate\n!add ep0 add ep1 up\n```", "```\next_if = ep0\nint_if = ep1\nlocalnet= \"192.0.2.0/24\"\nwebserver = \"192.0.2.227\"\nwebports = \"{ http, https }\"\nemailserver = \"192.0.2.225\"\nemail = \"{ smtp, pop3, imap, imap3, imaps, pop3s }\"\nnameservers = \"{ 192.0.2.221, 192.0.2.223 }\"\nclient_out = \"{ ssh, domain, pop3, auth, nntp, http, https, \\\n                446, cvspserver, 2628, 5999, 8000, 8080 }\"\nudp_services = \"{ domain, ntp }\"\nicmp_types = \"{ echoreq, unreach }\"\nset skip on $int_if\nblock all\npass quick on $ext_if inet proto { tcp, udp } from $localnet \\\n        to port $udp_services\npass log on $ext_if inet proto icmp all icmp-type $icmp_types\npass on $ext_if inet proto tcp from $localnet to port $client_out\npass on $ext_if inet proto { tcp, udp } to $nameservers port domain\npass on $ext_if proto tcp to $webserver port $webports\npass log on $ext_if proto tcp to $emailserver port $email\npass log on $ext_if proto tcp from $emailserver to port smtp\n```", "```\nmartians = \"{ 127.0.0.0/8, 192.168.0.0/16, 172.16.0.0/12, \\\n              10.0.0.0/8, 169.254.0.0/16, 192.0.2.0/24, \\\n              0.0.0.0/8, 240.0.0.0/4 }\"\n\nblock in quick on $ext_if from $martians to any\nblock out quick on $ext_if from any to $martians\n```", "```\necho \"block drop all\" | pfctl -a baddies -f -\n```", "```\npfctl -a baddies -f /etc/anchor-baddies\n```", "```\npfctl -a baddies -s rules\n```", "```\nanchor ssh-good load anchor ssh-good from \"/etc/anchor-ssh-good\"\n```", "```\ntable <sshbuddies> file \"/etc/sshbuddies\"\n     pass inet proto tcp from <sshbuddies> to any port ssh\n```", "```\n192.168.103.84\n10.11.12.13\n```", "```\nanchor \"dmz\" on $dmz_if {\n    pass in proto { tcp udp } to $nameservers port domain\n    pass in proto tcp to $webservers port { www https }\n    pass in proto tcp to $mailserver port smtp\n    pass in log (all, to pflog1) in proto tcp from $mailserver \\\n                 to any port smtp\n}\n```", "```\nanchor ext on egress {\n    match out proto tcp to port { www https } set queue (qweb, qpri) set prio (5,6)\n    match out proto { tcp udp } to port domain set queue (qdns, qpri) set prio (6,7)\n    match out proto icmp set queue (q_dns, q_pri) set prio (7,6)\n    pass in log proto tcp to port smtp rdr-to 127.0.0.1 port spamd queue spamd\n    pass in log proto tcp from <nospamd> to port smtp\n    pass in log proto tcp from <spamd-white> to port smtp\n    pass out log proto tcp to port smtp\n    pass log (all) proto { tcp, udp } to port ssh keep state (max-src-conn 15, \\\n        max-src-conn-rate 7/3, overload <bruteforce> flush global)\n}\n```", "```\nanchor \"dmz\" on $dmz_if {\n    pass in proto { tcp udp } to $nameservers port domain tag GOOD\n    pass in proto tcp to $webservers port { www https } tag GOOD\n    pass in proto tcp to $mailserver port smtp tag GOOD\n    pass in log (all, to pflog1) in proto tcp from $mailserver\n                 to any port smtp tag GOOD\n    block log quick ! tagged GOOD\n}\n```"]