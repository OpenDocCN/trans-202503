["```\nfunction main() {\n    let a_val = 1;\n    let b_val = 2;\n    let c_val = a_val + b_val;\n}\n```", "```\n(module\n  1 (global $a_val (mut i32) (i32.const 1))\n  2 (global $b_val (mut i32) (i32.const 2))\n    (global $c_val (mut i32) (i32.const 0))\n    (func $main (export \"main\")\n        global.get $a_val\n        global.get $b_val\n\n        i32.add\n        global.set $c_val\n    )\n)\n```", "```\nglobal.get $a_val ;; push $a_val onto the stack\nglobal.get $b_val ;; push $b_val onto the stack\n```", "```\n1 global.get $a_val ;; push $a_val onto the stack\nglobal.get $b_val ;; push $b_val onto the stack\n\n2 i32.add           ;; pop two values, add and place result on stack\nglobal.set $c_val ;; pop a value off the stack and set $c_val\n```", "```\n(module\n  (global $a_val (mut i32) (i32.const 1))\n  (global $b_val (mut i32) (i32.const 2))\n  (global $c_val (mut i32) (i32.const 0))\n  (func $main (export \"main\")\n  1 (global.set $c_val\n      (i32.add (global.get $a_val) (global.get $b_val))\n    )\n  )\n)\n```", "```\nsudo apt install nodejs\n```", "```\nnode -v\n```", "```\nv12.14.0\n```", "```\nnpm install -g wat-wasm\n```", "```\nwat2wasm\n```", "```\n(module)\n```", "```\nwat2wasm file.wat\n```", "```\n(module\n    (func (export \"AddInt\")\n    (param $value_1 i32) (param $value_2 i32)\n    (result i32)\n local.get $value_1\n        local.get $value_2\n        i32.add\n    )\n)\n```", "```\nwat2wasm AddInt.wat\n```", "```\n1 const fs = require ('fs');\nconst bytes = fs.readFileSync (__dirname + '/AddInt.wasm');\n2 const value_1 = parseInt (process.argv[2]);\nconst value_2 = parseInt (process.argv[3]);\n\n3 (async () => {\n4 const obj = await WebAssembly.instantiate (\n                                new Uint8Array (bytes));\n5 let add_value = obj.instance.exports.AddInt( value_1, value_2 );\n6 console.log(`${value_1} + ${value_2} = ${add_value}`);\n})();\n```", "```\nnode AddInt.js 7 9\n```", "```\n7 + 9 = 16\n```", "```\nconst fs = require ('fs');\nconst bytes = fs.readFileSync (__dirname + '/AddInt.wasm');\nconst value_1 = parseInt (process.argv[2]);\nconst value_2 = parseInt (process.argv[3]);\n\n1 WebAssembly.instantiate (new Uint8Array (bytes))\n2 .then (obj => {\n    let add_value = obj.instance.exports.AddInt(value_1, value_2);\n    console.log(`${value_1} + ${value_2} = ${add_value}`);\n  });\n```"]