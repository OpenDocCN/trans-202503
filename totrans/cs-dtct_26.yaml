- en: —27—
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: —27—
- en: Heaps in Politics and Academia
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 政治与学术中的堆积
- en: Early the next morning, Frank snuck out of the safe house and made his way across
    town to the police academy. Once on campus, surrounded by police officers, cadets,
    and retired officers, he felt himself relax. He even smiled broadly as he cut
    across the quad to the academy’s faculty office building.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 第二天一早，弗兰克悄悄从安全屋溜出来，穿过城镇前往警察学院。一到校园，周围是警察、学员和退休警员，他感到自己放松了下来。他甚至在穿过校园广场前往学院教职工办公室大楼时，露出了灿烂的笑容。
- en: Frank hadn’t been in the building in years. As a rule, the professors maintained
    an open-door policy that allowed students to stop by with questions anytime. In
    reality, few students ever took advantage of this access, preferring instead to
    wait until the night before a test to realize how much they didn’t know. Frank
    often held out longer, waiting until he sat down to take the exam before realizing
    his ignorance.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 弗兰克已经好几年没进这座大楼了。通常，教授们都保持着开放的办公室政策，允许学生随时进来问问题。实际上，很少有学生利用这种机会，大多数人更喜欢等到考试前一天才意识到自己什么都不知道。弗兰克通常也拖得更久，直到坐下来参加考试时才发现自己的无知。
- en: A quick scan of the faculty directory indicated that Dr. Loop occupied the sole
    office on the building’s top floor. Frank wasn’t surprised. The peculiar design
    of the faculty building made office assignments a contentious topic in the best
    of times. Each floor held exactly half the offices of the floor beneath it, meaning
    that not only were the views better as you went up, but each office doubled in
    size. After years of bitter fighting, the dean had imposed a strict tenure-based
    priority for offices—the occupant of any office must have served a longer tenure
    than anyone in the offices directly below. In effect, he had turned the faculty
    building into a large tenure-based heap.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 快速浏览一下教职员工名录，弗兰克发现卢普博士占据了大楼顶层的唯一办公室。他并不感到惊讶。那座教职工大楼的独特设计使得办公室分配成了一个争议话题。在最好的时候，每一层的办公室数量都刚好是下一层的一半，这意味着往上走，不仅视野更好，每个办公室的面积也翻倍。经过多年的激烈争斗，院长最终实行了基于资历的严格办公室优先分配制度——任何办公室的使用者，必须在直接下方的所有办公室使用者中拥有更长的资历。实际上，这使得教职工大楼变成了一个资历堆积的大楼。
- en: '![image](../images/f0214-01.jpg)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0214-01.jpg)'
- en: Dr. Olivia Loop, Professor of Wizard Criminology, had taught at the police academy
    for 70 years. Only Dr. Babbleton, Professor of Floating-Point Operations, came
    close to matching her tenure, at 61 years.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 卢普博士，魔法犯罪学教授，已经在警察学院教授了70年。只有巴布尔顿博士，浮点运算教授，在教职年限上接近她，已有61年。
- en: By the time Frank reached the top floor, he was breathing hard and wondering
    how a 95-year-old professor managed that climb multiple times a day. Then again,
    she did have the benefit of constant exercise.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 当弗兰克到达顶层时，他已经气喘吁吁，并且在想，一个95岁的教授是如何每天爬那么多次楼梯的。再说了，她的确有持续锻炼的好处。
- en: “Come in, come in,” called Dr. Loop through her open door. “Have a seat before
    you fall down. Those stairs can be tough, even for a youngster like you.”
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: “进来，进来，”卢普博士透过她开着的门喊道。“坐下，别站着，楼梯有点陡，像你这样年轻人都能喘不过气。”
- en: '![image](../images/f0214-02.jpg)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0214-02.jpg)'
- en: Frank entered the office and slumped gratefully into one of the hard wooden
    chairs in front of Dr. Loop’s desk. He struggled for breath for another moment
    as Dr. Loop watched him silently.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 弗兰克走进办公室，感激地瘫坐在卢普博士桌前的一把硬木椅子上。他又喘了几口气，卢普博士静静地看着他。
- en: “Nice office,” Frank finally managed.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: “不错的办公室，”弗兰克终于开口说道。
- en: “It *is* wonderful, isn’t it?” said Dr. Loop. “I had to wait 70 years to make
    it here—70 years! Professor Iterator simply refused to retire for the longest
    time. But I just waited patiently. You know what happened the day Professor Iterator
    called it quits?”
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: “真是*美妙*，不是吗？”卢普博士说道。“我等了70年才来到这里——70年！伊特雷托教授简直不肯退休，等了好久。但我耐心等着。你知道伊特雷托教授宣布退休那天发生了什么吗？”
- en: Frank shook his head, still too winded to give a proper response.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 弗兰克摇了摇头，仍然因为气喘吁吁而无法做出恰当的回应。
- en: “That young upstart, Dr. Lambda, tried to steal my office!”
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: “那个年轻的冒失鬼，Lambda博士，竟然想偷走我的办公室！”
- en: “Really?” Frank wheezed.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: “真的吗？”弗兰克喘着气问道。
- en: Dr. Loop shrugged. “You know how it is. Retirement at the police academy is
    always an exciting affair. Due to our tenure system, only the most senior professor
    can put in for retirement. Once that happens, no one can resist the chance to
    sneak into a better office.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 卢普博士耸耸肩。“你知道的，警察学院的退休总是充满了激情。由于我们的终身教职制度，只有资历最深的教授才能申请退休。一旦发生这种事，没人能抵挡偷偷溜进更好办公室的诱惑。”
- en: “Honestly, it was all Professor Iterator’s fault. After 75 years, he just packed
    up and stormed out, muttering about troublesome kids. As per tradition, the only
    person he told was the one nearest the door—Dr. Lambda, who has been here only
    11 years.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: “老实说，完全是Iterator教授的错。待了75年后，他就收拾东西冲出去，嘴里嘟囔着什么麻烦的孩子们。按照惯例，他唯一告诉的人就是离门最近的那位——Lambda博士，他只在这里待了11年。”
- en: '![image](../images/f0215-01.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0215-01.jpg)'
- en: “Not caring about our well-established system for office assignments, Dr. Lambda
    packed the contents of his meager office and moved straight up here. Ha! It happens
    every time someone leaves. The professor with the very last office in the entire
    building runs upstairs and tries to take the top office. Every single time, I
    tell you!
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: “Lambda博士根本不顾我们早已建立的办公室分配系统，他把自己简陋办公室的东西收拾好，直接搬了上来。哈！每次有人离开都会发生这种事。楼里最底层的教授会跑上楼来，试图占据最上面的办公室。每次都是这样，我跟你说！
- en: '![image](../images/f0215-02.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0215-02.jpg)'
- en: “Of course, once I heard of Dr. Iterator’s departure, I raced right up here
    to claim the office for myself. It was rightfully mine, you see. I had the only
    legitimate claim, having been here for 70 years. But Dr. Babbleton heard me running
    up the stairs and decided to try for it as well. It always happens like that,
    you know.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: “当然，一听说Iterator博士要离开，我就立马跑上楼去争那个办公室。它本该是我的，你看。我是唯一合法的竞争者，毕竟我已经在这里待了70年。但Babbleton博士听见我跑上楼的声音，也决定去争一争。你知道，每次都是这样。
- en: '![image](../images/f0216-01.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0216-01.jpg)'
- en: “Once an office opens up, both the professors who live below it rush up to make
    a claim. Unless a grant application is due—then it can take a few weeks for anyone
    to notice. In this case, Dr. Babbleton and I also had to contend with Dr. Lambda’s
    predictable attempt to get the best office.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: “一旦某个办公室空了，住在下面的两位教授会立刻争先恐后地跑上来争夺这个办公室。除非有某个资助申请的截止日期临近——那时可能需要几周才有人注意到这个空办公室。在这种情况下，我和Babbleton博士还得与Lambda博士的可预测尝试竞争，争取最好的办公室。
- en: “Anyway, there we were—Dr. Lambda, Dr. Babbleton, and me. We argued for a good
    hour about the tenure rules. Dr. Lambda had no claim and we all knew it, but he
    stubbornly held his ground for a while. The argument really came down to Dr. Babbleton,
    who had been here a paltry 61 years, and me. Inevitably, I won out—forcing Dr.
    Lambda to move down into my old room. Dr. Babbleton remained in her office on
    the floor below.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: “总之，我们在那儿——Lambda博士、Babbleton博士和我。我们就终身职位的规则争论了足足一个小时。Lambda博士没有任何理由，我们都知道这一点，但他固执地坚持了好一会儿。争论最终还是集中在了已经在这里待了可怜的61年的Babbleton博士和我之间。不可避免地，我赢了——迫使Lambda博士搬进了我以前的办公室。Babbleton博士则继续待在楼下的办公室里。
- en: '![image](../images/f0216-02.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0216-02.jpg)'
- en: “Dr. Lambda packed up his belongings and moved to my office, but the poor man
    found two other professors already waiting there. They had occupied the office
    below mine and were looking for an opportunity to upgrade.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: “Lambda博士收拾好自己的东西，搬到了我的办公室，但可怜的他发现那里已经有两位教授在等着。他们曾住在我楼下的办公室，现在正寻找升级的机会。
- en: '![image](../images/f0217-01.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0217-01.jpg)'
- en: “They both had better claims on my old office, one having been here 30 years
    and the other 40\. This time, Dr. Lambda didn’t put up much of a fight. Dr. Variable
    won that office. He deserved it, too, after 40 years.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: “他们俩对我的旧办公室有更好的争夺权，一个在这里待了30年，另一个待了40年。这次，Lambda博士没怎么反抗。Variable博士赢得了那个办公室。他也确实配得上，因为他已经待了40年。
- en: '![image](../images/f0217-02.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0217-02.jpg)'
- en: “As luck would have it, Dr. Lambda finally caught a break on the next floor
    down. There the two professors below were both more junior than Dr. Lambda. I
    think he took particular pleasure in claiming victory and shutting the door in
    their faces.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: “幸运的是，Lambda博士终于在下一层找到了一个机会。那里，下面的两位教授比他资历更浅。我觉得他特别高兴能胜利并把门关在了他们脸上。
- en: '![image](../images/f0217-03.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0217-03.jpg)'
- en: “In a way, Dr. Lambda was lucky,” explained Dr. Loop. “When he tried to steal
    the top office, he ended up on the other side of the building with more junior
    professors. He got to move up a whole floor. The rules only state that the occupant
    of any office must have served a longer tenure than anyone in the offices *directly*
    below. So, by pure luck, Dr. Lambda now has an office on the second floor while
    some of his more senior colleagues are still on the first floor.”
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: “从某种意义上说，Lambda博士算是幸运的，”Loop博士解释道，“当他试图窃取顶层办公室时，他最终被安排到了大楼的另一侧，和一些资历较浅的教授一起。他升了整整一层楼。规则只规定，任何办公室的占用者必须比下方*直接*办公室中的任何人任职时间更长。所以，纯粹是运气，Lambda博士现在有了第二层的办公室，而他的部分资深同事仍在一楼。”
- en: Frank waited politely to see if the story would continue. When it didn’t, he
    ventured, “Dr. Loop, if I could have a moment of your time? I have a few questions.”
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: Frank礼貌地等待着，看故事是否会继续。见没有动静，他试探性地说道：“Loop博士，如果能占用您一点时间？我有几个问题。”
- en: “Of course,” said Dr. Loop. “I assume this is about this week’s assignment?”
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: “当然，”Loop博士说道，“我猜你是来问这周的作业吧？”
- en: Frank balked, thrown off in mid-thought. “What? No. I’m not a student here.”
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Frank犹豫了，打断了思绪。“什么？不，我不是这里的学生。”
- en: “You aren’t? Then you should consider the police force. It’s a noble career.”
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: “你不是吗？那你应该考虑加入警察部门。这是个崇高的职业。”
- en: “I graduated over 10 years ago.”
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: “我已经毕业超过10年了。”
- en: “Is that so?” Dr. Loop shrugged again. “After a while, all the kids just blend
    together.”
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: “是吗？”Loop博士又耸了耸肩，“过了一段时间，所有的学生看起来都差不多。”
- en: “Okay,” Frank said, desperately trying to regain his train of thought. “Right.
    I need to know about security spells.”
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: “好吧，”Frank说，拼命地想要找回思路。“对，我需要了解安全魔法。”
- en: “Oh, I don’t *teach* magic,” explained Dr. Loop. “I teach Wizard Criminology,
    it’s the study of—”
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: “哦，我不*教*魔法，”Loop博士解释道，“我教的是巫师犯罪学，这是研究——”
- en: “I took your class,” Frank interrupted. “I don’t want to know how to perform
    spells. I want to know what types of security spells exist. Particularly in police
    stations.”
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: “我上过你的课，”Frank打断她，“我不想知道如何施法。我想知道有哪些类型的安全魔法。特别是在警察局里。”
- en: Dr. Loop’s expression suddenly grew hard. “That’s very sensitive information,”
    she said, her voice cold. “Known only to a few people.”
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Loop博士的表情突然变得严肃。“那是非常敏感的信息，”她说，声音冷冰冰的，“只有少数人知道。”
- en: “That’s why I’m here,” said Frank.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: “正是为了这个，我才来找您的，”Frank说道。
- en: “Why, exactly, do you need this information?” she asked.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: “那么，你到底为什么需要这些信息？”她问道。
- en: “I’m investigating a theft at the Capital Police Station,” he shot back. First
    the blathering story, now she was grilling him? He didn’t have time for this.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: “我正在调查首都警察局的盗窃案，”他反击道。先是那长篇大论的故事，现在她又开始盘问他了？他没时间浪费在这些上面。
- en: “I will need to see your badge,” prompted Dr. Loop. She made a beckoning motion
    with her hand.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: “我需要查看你的证件，”Loop博士提示道。她做了一个招手的动作。
- en: Frank reached into his trench cloak and retrieved his Private Investigator badge.
    He tossed it on her desk.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: Frank伸手进他的风衣，从中拿出了私家侦探的证件。他将证件丢在她的桌子上。
- en: “A PI?” Dr. Loop laughed. Then, her voice grew hard again. “Get out of my office.”
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: “私家侦探？”Loop博士笑了笑。然后，她的语气又变得冷硬。“滚出我的办公室。”
- en: “Doctor Loop—” started Frank, but stopped at the sound of a crossbow being cocked.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: “Loop博士——”Frank开口说，但在听到弩箭上弦的声音时停住了。
- en: '**POLICE ALGORITHMS 101: HEAPS**'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**警察算法 101：堆**'
- en: '***Excerpt from Professor Drecker’s Lecture***'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '***摘自德雷克教授的讲座***'
- en: 'A *max heap* is a binary tree–based data structure that maintains a special
    ordered relationship between a node and its children. Specifically, a heap stores
    the elements according to the *heap property*, which for a max heap states that
    the value at any node in the tree is larger (or equal to) every element below
    it. This structure allows the max heap to efficiently support several important
    operations: (1) efficiently finding the largest element, (2) removing the largest
    element, and (3) inserting an arbitrary element. These three operations make heaps
    ideal data structures for implementing priority queues.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '*最大堆*是一种基于二叉树的数据结构，它保持节点与其子节点之间的特殊顺序关系。具体来说，堆按照*堆属性*存储元素，对于最大堆来说，树中任何节点的值都大于（或等于）其下面所有元素的值。这种结构使得最大堆能够高效地支持几个重要操作：（1）高效找到最大元素，（2）移除最大元素，以及（3）插入任意元素。这三种操作使得堆成为实现优先队列的理想数据结构。'
- en: '![image](../images/f0219-01.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0219-01.jpg)'
- en: Heaps are often visualized as trees, though they’re easy to implement as arrays,
    where each element in the array corresponds to a node in the tree, with the root
    node at index 0, as shown in the following diagram. Child node indexes are defined
    relative to the indexes of their parents. Specifically, a node at index *i* has
    children at indexes 2*i* + 1 and 2*i* + 2\. So the node at index 1 will have a
    child at index (2 × 1) + 1 = **3**, and at (2 × 1) + 2 = **4**, as shown in the
    diagram.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 堆通常被可视化为树形结构，尽管它们很容易作为数组实现，其中数组中的每个元素对应树中的一个节点，根节点位于索引0，如下图所示。子节点的索引是相对于父节点的索引定义的。具体来说，索引为
    *i* 的节点的子节点位于索引 2*i* + 1 和 2*i* + 2。因此，索引为1的节点将有一个子节点位于索引 (2 × 1) + 1 = **3**，另一个子节点位于
    (2 × 1) + 2 = **4**，如图所示。
- en: '![image](../images/f0220-01.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0220-01.jpg)'
- en: Alternatively, some heap implementations just skip array index 0 for simplicity.
    The root node is instead placed at index 1\. In this case, a node at index *i*
    has children at indexes 2*i* and 2*i* + 1, making the index computations simpler.
    Either way, the indexing scheme allows the algorithm to compute the index of a
    child based on the parent, and a parent based on the child.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，一些堆的实现为了简化，直接跳过数组索引0。根节点被放置在索引1的位置。在这种情况下，索引为 *i* 的节点，其子节点位于索引 2*i* 和 2*i*
    + 1，这使得索引计算更加简单。无论哪种方式，这种索引方案都允许算法根据父节点计算子节点的索引，或根据子节点计算父节点的索引。
- en: Since the root node (the first element in the array) always corresponds to the
    maximum value in a max heap, you can always find this value in constant time (that
    is, in the same amount of time no matter how many values are in the array). This
    allows a user to efficiently look up the highest-valued item on the priority queue.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 由于根节点（数组中的第一个元素）总是对应最大堆中的最大值，因此你总是可以在常数时间内找到这个值（即，无论数组中有多少个值，都在相同的时间内找到）。这使得用户能够高效地查找优先队列中值最大的项目。
- en: If you want to add an element or remove the max element, the processes are more
    complicated, as they require first breaking and then restoring the heap property.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想添加一个元素或移除最大元素，过程会更加复杂，因为它们需要先破坏堆的性质，再恢复堆的性质。
- en: You add a new element to the heap by first appending it to the back of the array
    (the first empty space in the bottom level of the tree). This new value might
    be larger than its parent, which would break the heap property, so you need to
    push this node up the tree until it is no longer larger than its parent and the
    heap property is restored. More formally, if the new value is larger than the
    value of its parent node, you bubble it up by swapping it with its parent. For
    example, if we were to add 60 to the preceding heap, we would insert it at the
    bottom and swap it upward twice, because at both levels it is larger than its
    parent node.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 你通过首先将新元素添加到数组的末尾（树的底层的第一个空位置）来将新元素添加到堆中。这个新值可能大于它的父节点，这样就会破坏堆的性质，因此你需要将这个节点向上移动，直到它不再大于它的父节点，并恢复堆的性质。更正式地说，如果新值大于父节点的值，你就将它通过与父节点交换位置的方式“冒泡”到上面。例如，如果我们要将60添加到前面的堆中，我们会将它插入到底部并向上交换两次，因为在两个层级中，它都大于它的父节点。
- en: '![image](../images/f0221-01.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0221-01.jpg)'
- en: Removal of the max element is similar. The original max value is swapped with
    the last element of the array, making the last element the new root node.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 移除最大元素的过程类似。原始的最大值与数组的最后一个元素交换位置，使得最后一个元素成为新的根节点。
- en: '![image](../images/f0221-02.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0221-02.jpg)'
- en: Then the original max value (current last element) is deleted. We have now deleted
    the correct node, but likely broken the heap property in the process.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 然后删除原始的最大值（当前最后一个元素）。我们现在已经删除了正确的节点，但在此过程中可能破坏了堆的性质。
- en: '![image](../images/f0221-03.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0221-03.jpg)'
- en: Starting at the new root node, we walk that node down the tree in order to restore
    the heap property. At each level we compare that node’s value to both its children.
    If it is smaller than either of its children, we move the new root node downward
    to restore the heap property by swapping places with the larger of its two children.
    The downward swaps terminate when there are no larger children.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 从新的根节点开始，我们将该节点沿着树向下走，以恢复堆的性质。在每一层，我们将该节点的值与其两个子节点进行比较。如果它小于任一子节点，我们将新的根节点向下移动，通过与较大的子节点交换位置来恢复堆的性质。向下交换会在没有更大子节点时终止。
- en: '![image](../images/f0222-01.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0222-01.jpg)'
- en: Both insertion of new elements and deletion of the maximum element require us
    to walk at most one path between the top and bottom of the tree. Since we can
    approximately double the number of nodes in a heap while adding only a single
    level of new nodes to the bottom, the operations can be fast even for large heaps.
    Specifically, we can double the number of nodes and add only one additional step
    to both of these operations! Furthermore, both operations guarantee that the tree
    remains balanced, so future operations will be efficient.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 插入新元素和删除最大元素都要求我们在树的顶部和底部之间最多走一条路径。由于在向堆中添加一个新的节点层时，我们大致可以将堆中的节点数量翻倍，因此即使是对于大型堆，这些操作也能非常迅速。具体来说，我们可以将节点数量翻倍，并且这两种操作都只需要增加一步！此外，这两种操作还保证了树的平衡，因此未来的操作将会非常高效。
